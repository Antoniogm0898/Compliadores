Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> gotomain PROGRAMA addDir ID SEMI programa2
Rule 2     programa2 -> atributos programa2
Rule 3     programa2 -> programa3
Rule 4     programa3 -> metodos programa3
Rule 5     programa3 -> programa4
Rule 6     programa4 -> setmainloc principal
Rule 7     atributos -> ATRIBUTOS addDir var
Rule 8     metodos -> METODOS funciones
Rule 9     principal -> PRINCIPAL LPAREN estatutos principal2
Rule 10    principal2 -> estatutos principal2
Rule 11    principal2 -> RPAREN
Rule 12    funciones -> tipo funciones2
Rule 13    funciones -> VOID funciones2
Rule 14    funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3
Rule 15    funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3
Rule 16    funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3
Rule 17    funciones3 -> estatutos RBRACES addDir funciones
Rule 18    funciones3 -> estatutos RBRACES addDir
Rule 19    funciones3 -> estatutos funciones3
Rule 20    parametros -> tipo ID setCurrentID addValueVarT newParamType COMMA parametros
Rule 21    parametros -> tipo ID setCurrentID addValueVarT newParamType
Rule 22    retornar -> RETURN returnFlag LPAREN retornar2
Rule 23    retornar2 -> exp cuadRetornar COMMA retornar2
Rule 24    retornar2 -> exp cuadRetornar RPAREN
Rule 25    var -> tipo COLON var2
Rule 26    var2 -> ID setCurrentID addValueVarT var3
Rule 27    var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET var3
Rule 28    var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET LBRACKET CTE_I RBRACKET var3
Rule 29    var3 -> COMMA var2
Rule 30    var3 -> SEMI var
Rule 31    var3 -> SEMI
Rule 32    tipo -> INT
Rule 33    tipo -> FLOAT
Rule 34    tipo -> CHAR
Rule 35    tipo -> BOOL
Rule 36    exp -> texp checarexp
Rule 37    exp -> exp addOL exp
Rule 38    texp -> gexp checarexp
Rule 39    texp -> texp addOL texp
Rule 40    gexp -> mexp checarexp
Rule 41    gexp -> gexp gexp2 gexp
Rule 42    gexp2 -> LT addO
Rule 43    gexp2 -> LE addO
Rule 44    gexp2 -> GT addO
Rule 45    gexp2 -> GE addO
Rule 46    gexp2 -> EQ addO
Rule 47    gexp2 -> NE addO
Rule 48    mexp -> t checarexp
Rule 49    mexp -> mexp mexp2
Rule 50    mexp2 -> PLUS addO mexp
Rule 51    mexp2 -> MINUS addO mexp
Rule 52    t -> f checarexp
Rule 53    t -> t t2
Rule 54    t2 -> MULT addO t
Rule 55    t2 -> DIV addO t
Rule 56    t2 -> MOD addO t
Rule 57    f -> LPAREN addFakeBottom exp RPAREN popFakeBottom
Rule 58    f -> CTE_I addIntType
Rule 59    f -> CTE_F addFloatType
Rule 60    f -> CTE_S addCharType
Rule 61    f -> TRUE addBoolType
Rule 62    f -> FALSE addBoolType
Rule 63    f -> llamada
Rule 64    f -> ID
Rule 65    estatutos -> estatutos2 estatutos
Rule 66    estatutos -> estatutos2
Rule 67    estatutos2 -> asigna
Rule 68    estatutos2 -> llamada
Rule 69    estatutos2 -> lee
Rule 70    estatutos2 -> escribe
Rule 71    estatutos2 -> condicion
Rule 72    estatutos2 -> ciclow
Rule 73    estatutos2 -> ciclof
Rule 74    estatutos2 -> funciones
Rule 75    estatutos2 -> retornar
Rule 76    asigna -> ID EQUALS asignarid exp SEMI
Rule 77    llamada -> ID callFunc LPAREN exp genParameter llamada2
Rule 78    genParameter -> <empty>
Rule 79    llamada2 -> COMMA paramCounter exp genParameter llamada2
Rule 80    llamada2 -> verLastParam RPAREN
Rule 81    lee -> LEE LPAREN exp cuadlee lee2
Rule 82    lee2 -> COMMA exp cuadlee lee2
Rule 83    lee2 -> RPAREN
Rule 84    escribe -> ESCRIBIR LPAREN exp cuadprint escribe2
Rule 85    escribe2 -> COMMA exp cuadprint escribe2
Rule 86    escribe2 -> RPAREN
Rule 87    condicion -> IF condicion2
Rule 88    condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSEIF genElse condicion2
Rule 89    condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSE genElse condicion3
Rule 90    condicion2 -> LPAREN exp RPAREN genGTF condicion3
Rule 91    condicion3 -> LBRACES estatutos fillGoto RBRACES
Rule 92    ciclow -> WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile
Rule 93    ciclow -> DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile
Rule 94    ciclof -> FOR ciclof2
Rule 95    ciclof2 -> ciclof3 ciclof2
Rule 96    ciclof2 -> ciclof3
Rule 97    ciclof3 -> ID addForId EQUALS exp genFor TO exp compFor DO LBRACES estatutos RBRACES actFor
Rule 98    addDir -> <empty>
Rule 99    setCurrentID -> <empty>
Rule 100   addValueVarT -> <empty>
Rule 101   addFakeBottom -> <empty>
Rule 102   popFakeBottom -> <empty>
Rule 103   addO -> <empty>
Rule 104   addOL -> LOR
Rule 105   addOL -> LAND
Rule 106   checarexp -> <empty>
Rule 107   addIntType -> <empty>
Rule 108   addFloatType -> <empty>
Rule 109   addCharType -> <empty>
Rule 110   addBoolType -> <empty>
Rule 111   asignarid -> <empty>
Rule 112   gotomain -> <empty>
Rule 113   setmainloc -> <empty>
Rule 114   cuadprint -> <empty>
Rule 115   cuadlee -> <empty>
Rule 116   returnFlag -> <empty>
Rule 117   cuadRetornar -> <empty>
Rule 118   genGTF -> <empty>
Rule 119   genElse -> <empty>
Rule 120   fillGoto -> <empty>
Rule 121   storeWhile -> <empty>
Rule 122   genDoWhile -> <empty>
Rule 123   fillWhile -> <empty>
Rule 124   addForId -> <empty>
Rule 125   genFor -> <empty>
Rule 126   compFor -> <empty>
Rule 127   actFor -> <empty>
Rule 128   newParamType -> <empty>
Rule 129   addParamCount -> <empty>
Rule 130   addContF -> <empty>
Rule 131   callFunc -> <empty>
Rule 132   paramCounter -> <empty>
Rule 133   verLastParam -> <empty>

Terminals, with rules where they appear

ATRIBUTOS            : 7
BOOL                 : 35
CHAR                 : 34
COLON                : 25
COMMA                : 20 23 29 79 82 85
CTE_F                : 59
CTE_I                : 27 28 28 58
CTE_S                : 60
DIV                  : 55
DO                   : 92 93 97
ELSE                 : 89
ELSEIF               : 88
EQ                   : 46
EQUALS               : 76 97
ESCRIBIR             : 84
FALSE                : 62
FLOAT                : 33
FOR                  : 94
FUNCION              : 14 15 16
GE                   : 45
GT                   : 44
ID                   : 1 14 15 16 20 21 26 27 28 64 76 77 97
IF                   : 87
INT                  : 32
LAND                 : 105
LBRACES              : 14 15 16 91 92 93 97
LBRACKET             : 27 28 28
LE                   : 43
LEE                  : 81
LOR                  : 104
LPAREN               : 9 14 15 16 22 57 77 81 84 88 89 90 92 93
LT                   : 42
METODOS              : 8
MINUS                : 51
MOD                  : 56
MULT                 : 54
NE                   : 47
PLUS                 : 50
PRINCIPAL            : 9
PROGRAMA             : 1
RBRACES              : 17 18 91 92 93 97
RBRACKET             : 27 28 28
RETURN               : 22
RPAREN               : 11 14 15 16 24 57 80 83 86 88 89 90 92 93
SEMI                 : 1 30 31 76
TO                   : 97
TRUE                 : 61
VOID                 : 13
WHILE                : 92 93
error                : 

Nonterminals, with rules where they appear

actFor               : 97
addBoolType          : 61 62
addCharType          : 60
addContF             : 14 15 16
addDir               : 1 7 14 14 15 15 16 16 17 18
addFakeBottom        : 57
addFloatType         : 59
addForId             : 97
addIntType           : 58
addO                 : 42 43 44 45 46 47 50 51 54 55 56
addOL                : 37 39
addParamCount        : 14 15 16
addValueVarT         : 20 21 26 27 28
asigna               : 67
asignarid            : 76
atributos            : 2 14
callFunc             : 77
checarexp            : 36 38 40 48 52
ciclof               : 73
ciclof2              : 94 95
ciclof3              : 95 96
ciclow               : 72
compFor              : 97
condicion            : 71
condicion2           : 87 88
condicion3           : 88 89 89 90
cuadRetornar         : 23 24
cuadlee              : 81 82
cuadprint            : 84 85
escribe              : 70
escribe2             : 84 85
estatutos            : 9 10 17 18 19 65 91 92 93 97
estatutos2           : 65 66
exp                  : 23 24 37 37 57 76 77 79 81 82 84 85 88 89 90 92 93 97 97
f                    : 52
fillGoto             : 91
fillWhile            : 92
funciones            : 8 17 74
funciones2           : 12 13
funciones3           : 14 15 16 19
genDoWhile           : 93
genElse              : 88 89
genFor               : 97
genGTF               : 88 89 90 92
genParameter         : 77 79
gexp                 : 38 41 41
gexp2                : 41
gotomain             : 1
lee                  : 69
lee2                 : 81 82
llamada              : 63 68
llamada2             : 77 79
metodos              : 4
mexp                 : 40 49 50 51
mexp2                : 49
newParamType         : 20 21
paramCounter         : 79
parametros           : 14 15 16 20
popFakeBottom        : 57
principal            : 6
principal2           : 9 10
programa             : 0
programa2            : 1 2
programa3            : 3 4
programa4            : 5
retornar             : 75
retornar2            : 22 23
returnFlag           : 22
setCurrentID         : 20 21 26 27 28
setmainloc           : 6
storeWhile           : 92 93
t                    : 48 53 54 55 56
t2                   : 53
texp                 : 36 39 39
tipo                 : 12 20 21 25
var                  : 7 16 30
var2                 : 25 29
var3                 : 26 27 28
verLastParam         : 80

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . gotomain PROGRAMA addDir ID SEMI programa2
    (112) gotomain -> .

    PROGRAMA        reduce using rule 112 (gotomain -> .)

    programa                       shift and go to state 1
    gotomain                       shift and go to state 2

state 1

    (0) S' -> programa .



state 2

    (1) programa -> gotomain . PROGRAMA addDir ID SEMI programa2

    PROGRAMA        shift and go to state 3


state 3

    (1) programa -> gotomain PROGRAMA . addDir ID SEMI programa2
    (98) addDir -> .

    ID              reduce using rule 98 (addDir -> .)

    addDir                         shift and go to state 4

state 4

    (1) programa -> gotomain PROGRAMA addDir . ID SEMI programa2

    ID              shift and go to state 5


state 5

    (1) programa -> gotomain PROGRAMA addDir ID . SEMI programa2

    SEMI            shift and go to state 6


state 6

    (1) programa -> gotomain PROGRAMA addDir ID SEMI . programa2
    (2) programa2 -> . atributos programa2
    (3) programa2 -> . programa3
    (7) atributos -> . ATRIBUTOS addDir var
    (4) programa3 -> . metodos programa3
    (5) programa3 -> . programa4
    (8) metodos -> . METODOS funciones
    (6) programa4 -> . setmainloc principal
    (113) setmainloc -> .

    ATRIBUTOS       shift and go to state 10
    METODOS         shift and go to state 13
    PRINCIPAL       reduce using rule 113 (setmainloc -> .)

    programa2                      shift and go to state 7
    atributos                      shift and go to state 8
    programa3                      shift and go to state 9
    metodos                        shift and go to state 11
    programa4                      shift and go to state 12
    setmainloc                     shift and go to state 14

state 7

    (1) programa -> gotomain PROGRAMA addDir ID SEMI programa2 .

    $end            reduce using rule 1 (programa -> gotomain PROGRAMA addDir ID SEMI programa2 .)


state 8

    (2) programa2 -> atributos . programa2
    (2) programa2 -> . atributos programa2
    (3) programa2 -> . programa3
    (7) atributos -> . ATRIBUTOS addDir var
    (4) programa3 -> . metodos programa3
    (5) programa3 -> . programa4
    (8) metodos -> . METODOS funciones
    (6) programa4 -> . setmainloc principal
    (113) setmainloc -> .

    ATRIBUTOS       shift and go to state 10
    METODOS         shift and go to state 13
    PRINCIPAL       reduce using rule 113 (setmainloc -> .)

    atributos                      shift and go to state 8
    programa2                      shift and go to state 15
    programa3                      shift and go to state 9
    metodos                        shift and go to state 11
    programa4                      shift and go to state 12
    setmainloc                     shift and go to state 14

state 9

    (3) programa2 -> programa3 .

    $end            reduce using rule 3 (programa2 -> programa3 .)


state 10

    (7) atributos -> ATRIBUTOS . addDir var
    (98) addDir -> .

    INT             reduce using rule 98 (addDir -> .)
    FLOAT           reduce using rule 98 (addDir -> .)
    CHAR            reduce using rule 98 (addDir -> .)
    BOOL            reduce using rule 98 (addDir -> .)

    addDir                         shift and go to state 16

state 11

    (4) programa3 -> metodos . programa3
    (4) programa3 -> . metodos programa3
    (5) programa3 -> . programa4
    (8) metodos -> . METODOS funciones
    (6) programa4 -> . setmainloc principal
    (113) setmainloc -> .

    METODOS         shift and go to state 13
    PRINCIPAL       reduce using rule 113 (setmainloc -> .)

    metodos                        shift and go to state 11
    programa3                      shift and go to state 17
    programa4                      shift and go to state 12
    setmainloc                     shift and go to state 14

state 12

    (5) programa3 -> programa4 .

    $end            reduce using rule 5 (programa3 -> programa4 .)


state 13

    (8) metodos -> METODOS . funciones
    (12) funciones -> . tipo funciones2
    (13) funciones -> . VOID funciones2
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . BOOL

    VOID            shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    BOOL            shift and go to state 24

    funciones                      shift and go to state 18
    tipo                           shift and go to state 19

state 14

    (6) programa4 -> setmainloc . principal
    (9) principal -> . PRINCIPAL LPAREN estatutos principal2

    PRINCIPAL       shift and go to state 26

    principal                      shift and go to state 25

state 15

    (2) programa2 -> atributos programa2 .

    $end            reduce using rule 2 (programa2 -> atributos programa2 .)


state 16

    (7) atributos -> ATRIBUTOS addDir . var
    (25) var -> . tipo COLON var2
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . BOOL

    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    BOOL            shift and go to state 24

    var                            shift and go to state 27
    tipo                           shift and go to state 28

state 17

    (4) programa3 -> metodos programa3 .

    $end            reduce using rule 4 (programa3 -> metodos programa3 .)


state 18

    (8) metodos -> METODOS funciones .

    METODOS         reduce using rule 8 (metodos -> METODOS funciones .)
    PRINCIPAL       reduce using rule 8 (metodos -> METODOS funciones .)


state 19

    (12) funciones -> tipo . funciones2
    (14) funciones2 -> . FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3
    (15) funciones2 -> . FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3
    (16) funciones2 -> . FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3

    FUNCION         shift and go to state 30

    funciones2                     shift and go to state 29

state 20

    (13) funciones -> VOID . funciones2
    (14) funciones2 -> . FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3
    (15) funciones2 -> . FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3
    (16) funciones2 -> . FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3

    FUNCION         shift and go to state 30

    funciones2                     shift and go to state 31

state 21

    (32) tipo -> INT .

    FUNCION         reduce using rule 32 (tipo -> INT .)
    COLON           reduce using rule 32 (tipo -> INT .)
    ID              reduce using rule 32 (tipo -> INT .)


state 22

    (33) tipo -> FLOAT .

    FUNCION         reduce using rule 33 (tipo -> FLOAT .)
    COLON           reduce using rule 33 (tipo -> FLOAT .)
    ID              reduce using rule 33 (tipo -> FLOAT .)


state 23

    (34) tipo -> CHAR .

    FUNCION         reduce using rule 34 (tipo -> CHAR .)
    COLON           reduce using rule 34 (tipo -> CHAR .)
    ID              reduce using rule 34 (tipo -> CHAR .)


state 24

    (35) tipo -> BOOL .

    FUNCION         reduce using rule 35 (tipo -> BOOL .)
    COLON           reduce using rule 35 (tipo -> BOOL .)
    ID              reduce using rule 35 (tipo -> BOOL .)


state 25

    (6) programa4 -> setmainloc principal .

    $end            reduce using rule 6 (programa4 -> setmainloc principal .)


state 26

    (9) principal -> PRINCIPAL . LPAREN estatutos principal2

    LPAREN          shift and go to state 32


state 27

    (7) atributos -> ATRIBUTOS addDir var .

    ATRIBUTOS       reduce using rule 7 (atributos -> ATRIBUTOS addDir var .)
    METODOS         reduce using rule 7 (atributos -> ATRIBUTOS addDir var .)
    PRINCIPAL       reduce using rule 7 (atributos -> ATRIBUTOS addDir var .)
    ID              reduce using rule 7 (atributos -> ATRIBUTOS addDir var .)
    LEE             reduce using rule 7 (atributos -> ATRIBUTOS addDir var .)
    ESCRIBIR        reduce using rule 7 (atributos -> ATRIBUTOS addDir var .)
    IF              reduce using rule 7 (atributos -> ATRIBUTOS addDir var .)
    WHILE           reduce using rule 7 (atributos -> ATRIBUTOS addDir var .)
    DO              reduce using rule 7 (atributos -> ATRIBUTOS addDir var .)
    FOR             reduce using rule 7 (atributos -> ATRIBUTOS addDir var .)
    VOID            reduce using rule 7 (atributos -> ATRIBUTOS addDir var .)
    RETURN          reduce using rule 7 (atributos -> ATRIBUTOS addDir var .)
    INT             reduce using rule 7 (atributos -> ATRIBUTOS addDir var .)
    FLOAT           reduce using rule 7 (atributos -> ATRIBUTOS addDir var .)
    CHAR            reduce using rule 7 (atributos -> ATRIBUTOS addDir var .)
    BOOL            reduce using rule 7 (atributos -> ATRIBUTOS addDir var .)


state 28

    (25) var -> tipo . COLON var2

    COLON           shift and go to state 33


state 29

    (12) funciones -> tipo funciones2 .

    METODOS         reduce using rule 12 (funciones -> tipo funciones2 .)
    PRINCIPAL       reduce using rule 12 (funciones -> tipo funciones2 .)
    ID              reduce using rule 12 (funciones -> tipo funciones2 .)
    LEE             reduce using rule 12 (funciones -> tipo funciones2 .)
    ESCRIBIR        reduce using rule 12 (funciones -> tipo funciones2 .)
    IF              reduce using rule 12 (funciones -> tipo funciones2 .)
    WHILE           reduce using rule 12 (funciones -> tipo funciones2 .)
    DO              reduce using rule 12 (funciones -> tipo funciones2 .)
    FOR             reduce using rule 12 (funciones -> tipo funciones2 .)
    VOID            reduce using rule 12 (funciones -> tipo funciones2 .)
    RETURN          reduce using rule 12 (funciones -> tipo funciones2 .)
    INT             reduce using rule 12 (funciones -> tipo funciones2 .)
    FLOAT           reduce using rule 12 (funciones -> tipo funciones2 .)
    CHAR            reduce using rule 12 (funciones -> tipo funciones2 .)
    BOOL            reduce using rule 12 (funciones -> tipo funciones2 .)
    RPAREN          reduce using rule 12 (funciones -> tipo funciones2 .)
    RBRACES         reduce using rule 12 (funciones -> tipo funciones2 .)


state 30

    (14) funciones2 -> FUNCION . ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3
    (15) funciones2 -> FUNCION . ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3
    (16) funciones2 -> FUNCION . ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3

    ID              shift and go to state 34


state 31

    (13) funciones -> VOID funciones2 .

    METODOS         reduce using rule 13 (funciones -> VOID funciones2 .)
    PRINCIPAL       reduce using rule 13 (funciones -> VOID funciones2 .)
    ID              reduce using rule 13 (funciones -> VOID funciones2 .)
    LEE             reduce using rule 13 (funciones -> VOID funciones2 .)
    ESCRIBIR        reduce using rule 13 (funciones -> VOID funciones2 .)
    IF              reduce using rule 13 (funciones -> VOID funciones2 .)
    WHILE           reduce using rule 13 (funciones -> VOID funciones2 .)
    DO              reduce using rule 13 (funciones -> VOID funciones2 .)
    FOR             reduce using rule 13 (funciones -> VOID funciones2 .)
    VOID            reduce using rule 13 (funciones -> VOID funciones2 .)
    RETURN          reduce using rule 13 (funciones -> VOID funciones2 .)
    INT             reduce using rule 13 (funciones -> VOID funciones2 .)
    FLOAT           reduce using rule 13 (funciones -> VOID funciones2 .)
    CHAR            reduce using rule 13 (funciones -> VOID funciones2 .)
    BOOL            reduce using rule 13 (funciones -> VOID funciones2 .)
    RPAREN          reduce using rule 13 (funciones -> VOID funciones2 .)
    RBRACES         reduce using rule 13 (funciones -> VOID funciones2 .)


state 32

    (9) principal -> PRINCIPAL LPAREN . estatutos principal2
    (65) estatutos -> . estatutos2 estatutos
    (66) estatutos -> . estatutos2
    (67) estatutos2 -> . asigna
    (68) estatutos2 -> . llamada
    (69) estatutos2 -> . lee
    (70) estatutos2 -> . escribe
    (71) estatutos2 -> . condicion
    (72) estatutos2 -> . ciclow
    (73) estatutos2 -> . ciclof
    (74) estatutos2 -> . funciones
    (75) estatutos2 -> . retornar
    (76) asigna -> . ID EQUALS asignarid exp SEMI
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2
    (81) lee -> . LEE LPAREN exp cuadlee lee2
    (84) escribe -> . ESCRIBIR LPAREN exp cuadprint escribe2
    (87) condicion -> . IF condicion2
    (92) ciclow -> . WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile
    (93) ciclow -> . DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile
    (94) ciclof -> . FOR ciclof2
    (12) funciones -> . tipo funciones2
    (13) funciones -> . VOID funciones2
    (22) retornar -> . RETURN returnFlag LPAREN retornar2
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . BOOL

    ID              shift and go to state 46
    LEE             shift and go to state 47
    ESCRIBIR        shift and go to state 48
    IF              shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 51
    FOR             shift and go to state 52
    VOID            shift and go to state 20
    RETURN          shift and go to state 53
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    BOOL            shift and go to state 24

    estatutos                      shift and go to state 35
    estatutos2                     shift and go to state 36
    asigna                         shift and go to state 37
    llamada                        shift and go to state 38
    lee                            shift and go to state 39
    escribe                        shift and go to state 40
    condicion                      shift and go to state 41
    ciclow                         shift and go to state 42
    ciclof                         shift and go to state 43
    funciones                      shift and go to state 44
    retornar                       shift and go to state 45
    tipo                           shift and go to state 19

state 33

    (25) var -> tipo COLON . var2
    (26) var2 -> . ID setCurrentID addValueVarT var3
    (27) var2 -> . ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET var3
    (28) var2 -> . ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET LBRACKET CTE_I RBRACKET var3

    ID              shift and go to state 55

    var2                           shift and go to state 54

state 34

    (14) funciones2 -> FUNCION ID . addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3
    (15) funciones2 -> FUNCION ID . addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3
    (16) funciones2 -> FUNCION ID . addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3
    (98) addDir -> .

    LPAREN          reduce using rule 98 (addDir -> .)

    addDir                         shift and go to state 56

state 35

    (9) principal -> PRINCIPAL LPAREN estatutos . principal2
    (10) principal2 -> . estatutos principal2
    (11) principal2 -> . RPAREN
    (65) estatutos -> . estatutos2 estatutos
    (66) estatutos -> . estatutos2
    (67) estatutos2 -> . asigna
    (68) estatutos2 -> . llamada
    (69) estatutos2 -> . lee
    (70) estatutos2 -> . escribe
    (71) estatutos2 -> . condicion
    (72) estatutos2 -> . ciclow
    (73) estatutos2 -> . ciclof
    (74) estatutos2 -> . funciones
    (75) estatutos2 -> . retornar
    (76) asigna -> . ID EQUALS asignarid exp SEMI
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2
    (81) lee -> . LEE LPAREN exp cuadlee lee2
    (84) escribe -> . ESCRIBIR LPAREN exp cuadprint escribe2
    (87) condicion -> . IF condicion2
    (92) ciclow -> . WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile
    (93) ciclow -> . DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile
    (94) ciclof -> . FOR ciclof2
    (12) funciones -> . tipo funciones2
    (13) funciones -> . VOID funciones2
    (22) retornar -> . RETURN returnFlag LPAREN retornar2
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . BOOL

    RPAREN          shift and go to state 59
    ID              shift and go to state 46
    LEE             shift and go to state 47
    ESCRIBIR        shift and go to state 48
    IF              shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 51
    FOR             shift and go to state 52
    VOID            shift and go to state 20
    RETURN          shift and go to state 53
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    BOOL            shift and go to state 24

    estatutos                      shift and go to state 57
    principal2                     shift and go to state 58
    estatutos2                     shift and go to state 36
    asigna                         shift and go to state 37
    llamada                        shift and go to state 38
    lee                            shift and go to state 39
    escribe                        shift and go to state 40
    condicion                      shift and go to state 41
    ciclow                         shift and go to state 42
    ciclof                         shift and go to state 43
    funciones                      shift and go to state 44
    retornar                       shift and go to state 45
    tipo                           shift and go to state 19

state 36

    (65) estatutos -> estatutos2 . estatutos
    (66) estatutos -> estatutos2 .
    (65) estatutos -> . estatutos2 estatutos
    (66) estatutos -> . estatutos2
    (67) estatutos2 -> . asigna
    (68) estatutos2 -> . llamada
    (69) estatutos2 -> . lee
    (70) estatutos2 -> . escribe
    (71) estatutos2 -> . condicion
    (72) estatutos2 -> . ciclow
    (73) estatutos2 -> . ciclof
    (74) estatutos2 -> . funciones
    (75) estatutos2 -> . retornar
    (76) asigna -> . ID EQUALS asignarid exp SEMI
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2
    (81) lee -> . LEE LPAREN exp cuadlee lee2
    (84) escribe -> . ESCRIBIR LPAREN exp cuadprint escribe2
    (87) condicion -> . IF condicion2
    (92) ciclow -> . WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile
    (93) ciclow -> . DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile
    (94) ciclof -> . FOR ciclof2
    (12) funciones -> . tipo funciones2
    (13) funciones -> . VOID funciones2
    (22) retornar -> . RETURN returnFlag LPAREN retornar2
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . BOOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEE resolved as shift
  ! shift/reduce conflict for ESCRIBIR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    RPAREN          reduce using rule 66 (estatutos -> estatutos2 .)
    RBRACES         reduce using rule 66 (estatutos -> estatutos2 .)
    ID              shift and go to state 46
    LEE             shift and go to state 47
    ESCRIBIR        shift and go to state 48
    IF              shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 51
    FOR             shift and go to state 52
    VOID            shift and go to state 20
    RETURN          shift and go to state 53
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    BOOL            shift and go to state 24

  ! ID              [ reduce using rule 66 (estatutos -> estatutos2 .) ]
  ! LEE             [ reduce using rule 66 (estatutos -> estatutos2 .) ]
  ! ESCRIBIR        [ reduce using rule 66 (estatutos -> estatutos2 .) ]
  ! IF              [ reduce using rule 66 (estatutos -> estatutos2 .) ]
  ! WHILE           [ reduce using rule 66 (estatutos -> estatutos2 .) ]
  ! DO              [ reduce using rule 66 (estatutos -> estatutos2 .) ]
  ! FOR             [ reduce using rule 66 (estatutos -> estatutos2 .) ]
  ! VOID            [ reduce using rule 66 (estatutos -> estatutos2 .) ]
  ! RETURN          [ reduce using rule 66 (estatutos -> estatutos2 .) ]
  ! INT             [ reduce using rule 66 (estatutos -> estatutos2 .) ]
  ! FLOAT           [ reduce using rule 66 (estatutos -> estatutos2 .) ]
  ! CHAR            [ reduce using rule 66 (estatutos -> estatutos2 .) ]
  ! BOOL            [ reduce using rule 66 (estatutos -> estatutos2 .) ]

    estatutos2                     shift and go to state 36
    estatutos                      shift and go to state 60
    asigna                         shift and go to state 37
    llamada                        shift and go to state 38
    lee                            shift and go to state 39
    escribe                        shift and go to state 40
    condicion                      shift and go to state 41
    ciclow                         shift and go to state 42
    ciclof                         shift and go to state 43
    funciones                      shift and go to state 44
    retornar                       shift and go to state 45
    tipo                           shift and go to state 19

state 37

    (67) estatutos2 -> asigna .

    ID              reduce using rule 67 (estatutos2 -> asigna .)
    LEE             reduce using rule 67 (estatutos2 -> asigna .)
    ESCRIBIR        reduce using rule 67 (estatutos2 -> asigna .)
    IF              reduce using rule 67 (estatutos2 -> asigna .)
    WHILE           reduce using rule 67 (estatutos2 -> asigna .)
    DO              reduce using rule 67 (estatutos2 -> asigna .)
    FOR             reduce using rule 67 (estatutos2 -> asigna .)
    VOID            reduce using rule 67 (estatutos2 -> asigna .)
    RETURN          reduce using rule 67 (estatutos2 -> asigna .)
    INT             reduce using rule 67 (estatutos2 -> asigna .)
    FLOAT           reduce using rule 67 (estatutos2 -> asigna .)
    CHAR            reduce using rule 67 (estatutos2 -> asigna .)
    BOOL            reduce using rule 67 (estatutos2 -> asigna .)
    RPAREN          reduce using rule 67 (estatutos2 -> asigna .)
    RBRACES         reduce using rule 67 (estatutos2 -> asigna .)


state 38

    (68) estatutos2 -> llamada .

    ID              reduce using rule 68 (estatutos2 -> llamada .)
    LEE             reduce using rule 68 (estatutos2 -> llamada .)
    ESCRIBIR        reduce using rule 68 (estatutos2 -> llamada .)
    IF              reduce using rule 68 (estatutos2 -> llamada .)
    WHILE           reduce using rule 68 (estatutos2 -> llamada .)
    DO              reduce using rule 68 (estatutos2 -> llamada .)
    FOR             reduce using rule 68 (estatutos2 -> llamada .)
    VOID            reduce using rule 68 (estatutos2 -> llamada .)
    RETURN          reduce using rule 68 (estatutos2 -> llamada .)
    INT             reduce using rule 68 (estatutos2 -> llamada .)
    FLOAT           reduce using rule 68 (estatutos2 -> llamada .)
    CHAR            reduce using rule 68 (estatutos2 -> llamada .)
    BOOL            reduce using rule 68 (estatutos2 -> llamada .)
    RPAREN          reduce using rule 68 (estatutos2 -> llamada .)
    RBRACES         reduce using rule 68 (estatutos2 -> llamada .)


state 39

    (69) estatutos2 -> lee .

    ID              reduce using rule 69 (estatutos2 -> lee .)
    LEE             reduce using rule 69 (estatutos2 -> lee .)
    ESCRIBIR        reduce using rule 69 (estatutos2 -> lee .)
    IF              reduce using rule 69 (estatutos2 -> lee .)
    WHILE           reduce using rule 69 (estatutos2 -> lee .)
    DO              reduce using rule 69 (estatutos2 -> lee .)
    FOR             reduce using rule 69 (estatutos2 -> lee .)
    VOID            reduce using rule 69 (estatutos2 -> lee .)
    RETURN          reduce using rule 69 (estatutos2 -> lee .)
    INT             reduce using rule 69 (estatutos2 -> lee .)
    FLOAT           reduce using rule 69 (estatutos2 -> lee .)
    CHAR            reduce using rule 69 (estatutos2 -> lee .)
    BOOL            reduce using rule 69 (estatutos2 -> lee .)
    RPAREN          reduce using rule 69 (estatutos2 -> lee .)
    RBRACES         reduce using rule 69 (estatutos2 -> lee .)


state 40

    (70) estatutos2 -> escribe .

    ID              reduce using rule 70 (estatutos2 -> escribe .)
    LEE             reduce using rule 70 (estatutos2 -> escribe .)
    ESCRIBIR        reduce using rule 70 (estatutos2 -> escribe .)
    IF              reduce using rule 70 (estatutos2 -> escribe .)
    WHILE           reduce using rule 70 (estatutos2 -> escribe .)
    DO              reduce using rule 70 (estatutos2 -> escribe .)
    FOR             reduce using rule 70 (estatutos2 -> escribe .)
    VOID            reduce using rule 70 (estatutos2 -> escribe .)
    RETURN          reduce using rule 70 (estatutos2 -> escribe .)
    INT             reduce using rule 70 (estatutos2 -> escribe .)
    FLOAT           reduce using rule 70 (estatutos2 -> escribe .)
    CHAR            reduce using rule 70 (estatutos2 -> escribe .)
    BOOL            reduce using rule 70 (estatutos2 -> escribe .)
    RPAREN          reduce using rule 70 (estatutos2 -> escribe .)
    RBRACES         reduce using rule 70 (estatutos2 -> escribe .)


state 41

    (71) estatutos2 -> condicion .

    ID              reduce using rule 71 (estatutos2 -> condicion .)
    LEE             reduce using rule 71 (estatutos2 -> condicion .)
    ESCRIBIR        reduce using rule 71 (estatutos2 -> condicion .)
    IF              reduce using rule 71 (estatutos2 -> condicion .)
    WHILE           reduce using rule 71 (estatutos2 -> condicion .)
    DO              reduce using rule 71 (estatutos2 -> condicion .)
    FOR             reduce using rule 71 (estatutos2 -> condicion .)
    VOID            reduce using rule 71 (estatutos2 -> condicion .)
    RETURN          reduce using rule 71 (estatutos2 -> condicion .)
    INT             reduce using rule 71 (estatutos2 -> condicion .)
    FLOAT           reduce using rule 71 (estatutos2 -> condicion .)
    CHAR            reduce using rule 71 (estatutos2 -> condicion .)
    BOOL            reduce using rule 71 (estatutos2 -> condicion .)
    RPAREN          reduce using rule 71 (estatutos2 -> condicion .)
    RBRACES         reduce using rule 71 (estatutos2 -> condicion .)


state 42

    (72) estatutos2 -> ciclow .

    ID              reduce using rule 72 (estatutos2 -> ciclow .)
    LEE             reduce using rule 72 (estatutos2 -> ciclow .)
    ESCRIBIR        reduce using rule 72 (estatutos2 -> ciclow .)
    IF              reduce using rule 72 (estatutos2 -> ciclow .)
    WHILE           reduce using rule 72 (estatutos2 -> ciclow .)
    DO              reduce using rule 72 (estatutos2 -> ciclow .)
    FOR             reduce using rule 72 (estatutos2 -> ciclow .)
    VOID            reduce using rule 72 (estatutos2 -> ciclow .)
    RETURN          reduce using rule 72 (estatutos2 -> ciclow .)
    INT             reduce using rule 72 (estatutos2 -> ciclow .)
    FLOAT           reduce using rule 72 (estatutos2 -> ciclow .)
    CHAR            reduce using rule 72 (estatutos2 -> ciclow .)
    BOOL            reduce using rule 72 (estatutos2 -> ciclow .)
    RPAREN          reduce using rule 72 (estatutos2 -> ciclow .)
    RBRACES         reduce using rule 72 (estatutos2 -> ciclow .)


state 43

    (73) estatutos2 -> ciclof .

    ID              reduce using rule 73 (estatutos2 -> ciclof .)
    LEE             reduce using rule 73 (estatutos2 -> ciclof .)
    ESCRIBIR        reduce using rule 73 (estatutos2 -> ciclof .)
    IF              reduce using rule 73 (estatutos2 -> ciclof .)
    WHILE           reduce using rule 73 (estatutos2 -> ciclof .)
    DO              reduce using rule 73 (estatutos2 -> ciclof .)
    FOR             reduce using rule 73 (estatutos2 -> ciclof .)
    VOID            reduce using rule 73 (estatutos2 -> ciclof .)
    RETURN          reduce using rule 73 (estatutos2 -> ciclof .)
    INT             reduce using rule 73 (estatutos2 -> ciclof .)
    FLOAT           reduce using rule 73 (estatutos2 -> ciclof .)
    CHAR            reduce using rule 73 (estatutos2 -> ciclof .)
    BOOL            reduce using rule 73 (estatutos2 -> ciclof .)
    RPAREN          reduce using rule 73 (estatutos2 -> ciclof .)
    RBRACES         reduce using rule 73 (estatutos2 -> ciclof .)


state 44

    (74) estatutos2 -> funciones .

    ID              reduce using rule 74 (estatutos2 -> funciones .)
    LEE             reduce using rule 74 (estatutos2 -> funciones .)
    ESCRIBIR        reduce using rule 74 (estatutos2 -> funciones .)
    IF              reduce using rule 74 (estatutos2 -> funciones .)
    WHILE           reduce using rule 74 (estatutos2 -> funciones .)
    DO              reduce using rule 74 (estatutos2 -> funciones .)
    FOR             reduce using rule 74 (estatutos2 -> funciones .)
    VOID            reduce using rule 74 (estatutos2 -> funciones .)
    RETURN          reduce using rule 74 (estatutos2 -> funciones .)
    INT             reduce using rule 74 (estatutos2 -> funciones .)
    FLOAT           reduce using rule 74 (estatutos2 -> funciones .)
    CHAR            reduce using rule 74 (estatutos2 -> funciones .)
    BOOL            reduce using rule 74 (estatutos2 -> funciones .)
    RPAREN          reduce using rule 74 (estatutos2 -> funciones .)
    RBRACES         reduce using rule 74 (estatutos2 -> funciones .)


state 45

    (75) estatutos2 -> retornar .

    ID              reduce using rule 75 (estatutos2 -> retornar .)
    LEE             reduce using rule 75 (estatutos2 -> retornar .)
    ESCRIBIR        reduce using rule 75 (estatutos2 -> retornar .)
    IF              reduce using rule 75 (estatutos2 -> retornar .)
    WHILE           reduce using rule 75 (estatutos2 -> retornar .)
    DO              reduce using rule 75 (estatutos2 -> retornar .)
    FOR             reduce using rule 75 (estatutos2 -> retornar .)
    VOID            reduce using rule 75 (estatutos2 -> retornar .)
    RETURN          reduce using rule 75 (estatutos2 -> retornar .)
    INT             reduce using rule 75 (estatutos2 -> retornar .)
    FLOAT           reduce using rule 75 (estatutos2 -> retornar .)
    CHAR            reduce using rule 75 (estatutos2 -> retornar .)
    BOOL            reduce using rule 75 (estatutos2 -> retornar .)
    RPAREN          reduce using rule 75 (estatutos2 -> retornar .)
    RBRACES         reduce using rule 75 (estatutos2 -> retornar .)


state 46

    (76) asigna -> ID . EQUALS asignarid exp SEMI
    (77) llamada -> ID . callFunc LPAREN exp genParameter llamada2
    (131) callFunc -> .

    EQUALS          shift and go to state 61
    LPAREN          reduce using rule 131 (callFunc -> .)

    callFunc                       shift and go to state 62

state 47

    (81) lee -> LEE . LPAREN exp cuadlee lee2

    LPAREN          shift and go to state 63


state 48

    (84) escribe -> ESCRIBIR . LPAREN exp cuadprint escribe2

    LPAREN          shift and go to state 64


state 49

    (87) condicion -> IF . condicion2
    (88) condicion2 -> . LPAREN exp RPAREN genGTF condicion3 ELSEIF genElse condicion2
    (89) condicion2 -> . LPAREN exp RPAREN genGTF condicion3 ELSE genElse condicion3
    (90) condicion2 -> . LPAREN exp RPAREN genGTF condicion3

    LPAREN          shift and go to state 66

    condicion2                     shift and go to state 65

state 50

    (92) ciclow -> WHILE . storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile
    (121) storeWhile -> .

    LPAREN          reduce using rule 121 (storeWhile -> .)

    storeWhile                     shift and go to state 67

state 51

    (93) ciclow -> DO . storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile
    (121) storeWhile -> .

    LBRACES         reduce using rule 121 (storeWhile -> .)

    storeWhile                     shift and go to state 68

state 52

    (94) ciclof -> FOR . ciclof2
    (95) ciclof2 -> . ciclof3 ciclof2
    (96) ciclof2 -> . ciclof3
    (97) ciclof3 -> . ID addForId EQUALS exp genFor TO exp compFor DO LBRACES estatutos RBRACES actFor

    ID              shift and go to state 71

    ciclof2                        shift and go to state 69
    ciclof3                        shift and go to state 70

state 53

    (22) retornar -> RETURN . returnFlag LPAREN retornar2
    (116) returnFlag -> .

    LPAREN          reduce using rule 116 (returnFlag -> .)

    returnFlag                     shift and go to state 72

state 54

    (25) var -> tipo COLON var2 .

    ATRIBUTOS       reduce using rule 25 (var -> tipo COLON var2 .)
    METODOS         reduce using rule 25 (var -> tipo COLON var2 .)
    PRINCIPAL       reduce using rule 25 (var -> tipo COLON var2 .)
    ID              reduce using rule 25 (var -> tipo COLON var2 .)
    LEE             reduce using rule 25 (var -> tipo COLON var2 .)
    ESCRIBIR        reduce using rule 25 (var -> tipo COLON var2 .)
    IF              reduce using rule 25 (var -> tipo COLON var2 .)
    WHILE           reduce using rule 25 (var -> tipo COLON var2 .)
    DO              reduce using rule 25 (var -> tipo COLON var2 .)
    FOR             reduce using rule 25 (var -> tipo COLON var2 .)
    VOID            reduce using rule 25 (var -> tipo COLON var2 .)
    RETURN          reduce using rule 25 (var -> tipo COLON var2 .)
    INT             reduce using rule 25 (var -> tipo COLON var2 .)
    FLOAT           reduce using rule 25 (var -> tipo COLON var2 .)
    CHAR            reduce using rule 25 (var -> tipo COLON var2 .)
    BOOL            reduce using rule 25 (var -> tipo COLON var2 .)


state 55

    (26) var2 -> ID . setCurrentID addValueVarT var3
    (27) var2 -> ID . setCurrentID addValueVarT LBRACKET CTE_I RBRACKET var3
    (28) var2 -> ID . setCurrentID addValueVarT LBRACKET CTE_I RBRACKET LBRACKET CTE_I RBRACKET var3
    (99) setCurrentID -> .

    LBRACKET        reduce using rule 99 (setCurrentID -> .)
    COMMA           reduce using rule 99 (setCurrentID -> .)
    SEMI            reduce using rule 99 (setCurrentID -> .)

    setCurrentID                   shift and go to state 73

state 56

    (14) funciones2 -> FUNCION ID addDir . LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3
    (15) funciones2 -> FUNCION ID addDir . LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3
    (16) funciones2 -> FUNCION ID addDir . LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3

    LPAREN          shift and go to state 74


state 57

    (10) principal2 -> estatutos . principal2
    (10) principal2 -> . estatutos principal2
    (11) principal2 -> . RPAREN
    (65) estatutos -> . estatutos2 estatutos
    (66) estatutos -> . estatutos2
    (67) estatutos2 -> . asigna
    (68) estatutos2 -> . llamada
    (69) estatutos2 -> . lee
    (70) estatutos2 -> . escribe
    (71) estatutos2 -> . condicion
    (72) estatutos2 -> . ciclow
    (73) estatutos2 -> . ciclof
    (74) estatutos2 -> . funciones
    (75) estatutos2 -> . retornar
    (76) asigna -> . ID EQUALS asignarid exp SEMI
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2
    (81) lee -> . LEE LPAREN exp cuadlee lee2
    (84) escribe -> . ESCRIBIR LPAREN exp cuadprint escribe2
    (87) condicion -> . IF condicion2
    (92) ciclow -> . WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile
    (93) ciclow -> . DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile
    (94) ciclof -> . FOR ciclof2
    (12) funciones -> . tipo funciones2
    (13) funciones -> . VOID funciones2
    (22) retornar -> . RETURN returnFlag LPAREN retornar2
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . BOOL

    RPAREN          shift and go to state 59
    ID              shift and go to state 46
    LEE             shift and go to state 47
    ESCRIBIR        shift and go to state 48
    IF              shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 51
    FOR             shift and go to state 52
    VOID            shift and go to state 20
    RETURN          shift and go to state 53
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    BOOL            shift and go to state 24

    estatutos                      shift and go to state 57
    principal2                     shift and go to state 75
    estatutos2                     shift and go to state 36
    asigna                         shift and go to state 37
    llamada                        shift and go to state 38
    lee                            shift and go to state 39
    escribe                        shift and go to state 40
    condicion                      shift and go to state 41
    ciclow                         shift and go to state 42
    ciclof                         shift and go to state 43
    funciones                      shift and go to state 44
    retornar                       shift and go to state 45
    tipo                           shift and go to state 19

state 58

    (9) principal -> PRINCIPAL LPAREN estatutos principal2 .

    $end            reduce using rule 9 (principal -> PRINCIPAL LPAREN estatutos principal2 .)


state 59

    (11) principal2 -> RPAREN .

    $end            reduce using rule 11 (principal2 -> RPAREN .)


state 60

    (65) estatutos -> estatutos2 estatutos .

    RPAREN          reduce using rule 65 (estatutos -> estatutos2 estatutos .)
    ID              reduce using rule 65 (estatutos -> estatutos2 estatutos .)
    LEE             reduce using rule 65 (estatutos -> estatutos2 estatutos .)
    ESCRIBIR        reduce using rule 65 (estatutos -> estatutos2 estatutos .)
    IF              reduce using rule 65 (estatutos -> estatutos2 estatutos .)
    WHILE           reduce using rule 65 (estatutos -> estatutos2 estatutos .)
    DO              reduce using rule 65 (estatutos -> estatutos2 estatutos .)
    FOR             reduce using rule 65 (estatutos -> estatutos2 estatutos .)
    VOID            reduce using rule 65 (estatutos -> estatutos2 estatutos .)
    RETURN          reduce using rule 65 (estatutos -> estatutos2 estatutos .)
    INT             reduce using rule 65 (estatutos -> estatutos2 estatutos .)
    FLOAT           reduce using rule 65 (estatutos -> estatutos2 estatutos .)
    CHAR            reduce using rule 65 (estatutos -> estatutos2 estatutos .)
    BOOL            reduce using rule 65 (estatutos -> estatutos2 estatutos .)
    RBRACES         reduce using rule 65 (estatutos -> estatutos2 estatutos .)


state 61

    (76) asigna -> ID EQUALS . asignarid exp SEMI
    (111) asignarid -> .

    LPAREN          reduce using rule 111 (asignarid -> .)
    CTE_I           reduce using rule 111 (asignarid -> .)
    CTE_F           reduce using rule 111 (asignarid -> .)
    CTE_S           reduce using rule 111 (asignarid -> .)
    TRUE            reduce using rule 111 (asignarid -> .)
    FALSE           reduce using rule 111 (asignarid -> .)
    ID              reduce using rule 111 (asignarid -> .)

    asignarid                      shift and go to state 76

state 62

    (77) llamada -> ID callFunc . LPAREN exp genParameter llamada2

    LPAREN          shift and go to state 77


state 63

    (81) lee -> LEE LPAREN . exp cuadlee lee2
    (36) exp -> . texp checarexp
    (37) exp -> . exp addOL exp
    (38) texp -> . gexp checarexp
    (39) texp -> . texp addOL texp
    (40) gexp -> . mexp checarexp
    (41) gexp -> . gexp gexp2 gexp
    (48) mexp -> . t checarexp
    (49) mexp -> . mexp mexp2
    (52) t -> . f checarexp
    (53) t -> . t t2
    (57) f -> . LPAREN addFakeBottom exp RPAREN popFakeBottom
    (58) f -> . CTE_I addIntType
    (59) f -> . CTE_F addFloatType
    (60) f -> . CTE_S addCharType
    (61) f -> . TRUE addBoolType
    (62) f -> . FALSE addBoolType
    (63) f -> . llamada
    (64) f -> . ID
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2

    LPAREN          shift and go to state 78
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    ID              shift and go to state 91

    exp                            shift and go to state 79
    texp                           shift and go to state 80
    gexp                           shift and go to state 81
    mexp                           shift and go to state 82
    t                              shift and go to state 83
    f                              shift and go to state 84
    llamada                        shift and go to state 90

state 64

    (84) escribe -> ESCRIBIR LPAREN . exp cuadprint escribe2
    (36) exp -> . texp checarexp
    (37) exp -> . exp addOL exp
    (38) texp -> . gexp checarexp
    (39) texp -> . texp addOL texp
    (40) gexp -> . mexp checarexp
    (41) gexp -> . gexp gexp2 gexp
    (48) mexp -> . t checarexp
    (49) mexp -> . mexp mexp2
    (52) t -> . f checarexp
    (53) t -> . t t2
    (57) f -> . LPAREN addFakeBottom exp RPAREN popFakeBottom
    (58) f -> . CTE_I addIntType
    (59) f -> . CTE_F addFloatType
    (60) f -> . CTE_S addCharType
    (61) f -> . TRUE addBoolType
    (62) f -> . FALSE addBoolType
    (63) f -> . llamada
    (64) f -> . ID
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2

    LPAREN          shift and go to state 78
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    ID              shift and go to state 91

    exp                            shift and go to state 92
    texp                           shift and go to state 80
    gexp                           shift and go to state 81
    mexp                           shift and go to state 82
    t                              shift and go to state 83
    f                              shift and go to state 84
    llamada                        shift and go to state 90

state 65

    (87) condicion -> IF condicion2 .

    ID              reduce using rule 87 (condicion -> IF condicion2 .)
    LEE             reduce using rule 87 (condicion -> IF condicion2 .)
    ESCRIBIR        reduce using rule 87 (condicion -> IF condicion2 .)
    IF              reduce using rule 87 (condicion -> IF condicion2 .)
    WHILE           reduce using rule 87 (condicion -> IF condicion2 .)
    DO              reduce using rule 87 (condicion -> IF condicion2 .)
    FOR             reduce using rule 87 (condicion -> IF condicion2 .)
    VOID            reduce using rule 87 (condicion -> IF condicion2 .)
    RETURN          reduce using rule 87 (condicion -> IF condicion2 .)
    INT             reduce using rule 87 (condicion -> IF condicion2 .)
    FLOAT           reduce using rule 87 (condicion -> IF condicion2 .)
    CHAR            reduce using rule 87 (condicion -> IF condicion2 .)
    BOOL            reduce using rule 87 (condicion -> IF condicion2 .)
    RPAREN          reduce using rule 87 (condicion -> IF condicion2 .)
    RBRACES         reduce using rule 87 (condicion -> IF condicion2 .)


state 66

    (88) condicion2 -> LPAREN . exp RPAREN genGTF condicion3 ELSEIF genElse condicion2
    (89) condicion2 -> LPAREN . exp RPAREN genGTF condicion3 ELSE genElse condicion3
    (90) condicion2 -> LPAREN . exp RPAREN genGTF condicion3
    (36) exp -> . texp checarexp
    (37) exp -> . exp addOL exp
    (38) texp -> . gexp checarexp
    (39) texp -> . texp addOL texp
    (40) gexp -> . mexp checarexp
    (41) gexp -> . gexp gexp2 gexp
    (48) mexp -> . t checarexp
    (49) mexp -> . mexp mexp2
    (52) t -> . f checarexp
    (53) t -> . t t2
    (57) f -> . LPAREN addFakeBottom exp RPAREN popFakeBottom
    (58) f -> . CTE_I addIntType
    (59) f -> . CTE_F addFloatType
    (60) f -> . CTE_S addCharType
    (61) f -> . TRUE addBoolType
    (62) f -> . FALSE addBoolType
    (63) f -> . llamada
    (64) f -> . ID
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2

    LPAREN          shift and go to state 78
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    ID              shift and go to state 91

    exp                            shift and go to state 93
    texp                           shift and go to state 80
    gexp                           shift and go to state 81
    mexp                           shift and go to state 82
    t                              shift and go to state 83
    f                              shift and go to state 84
    llamada                        shift and go to state 90

state 67

    (92) ciclow -> WHILE storeWhile . LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile

    LPAREN          shift and go to state 94


state 68

    (93) ciclow -> DO storeWhile . LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile

    LBRACES         shift and go to state 95


state 69

    (94) ciclof -> FOR ciclof2 .

    ID              reduce using rule 94 (ciclof -> FOR ciclof2 .)
    LEE             reduce using rule 94 (ciclof -> FOR ciclof2 .)
    ESCRIBIR        reduce using rule 94 (ciclof -> FOR ciclof2 .)
    IF              reduce using rule 94 (ciclof -> FOR ciclof2 .)
    WHILE           reduce using rule 94 (ciclof -> FOR ciclof2 .)
    DO              reduce using rule 94 (ciclof -> FOR ciclof2 .)
    FOR             reduce using rule 94 (ciclof -> FOR ciclof2 .)
    VOID            reduce using rule 94 (ciclof -> FOR ciclof2 .)
    RETURN          reduce using rule 94 (ciclof -> FOR ciclof2 .)
    INT             reduce using rule 94 (ciclof -> FOR ciclof2 .)
    FLOAT           reduce using rule 94 (ciclof -> FOR ciclof2 .)
    CHAR            reduce using rule 94 (ciclof -> FOR ciclof2 .)
    BOOL            reduce using rule 94 (ciclof -> FOR ciclof2 .)
    RPAREN          reduce using rule 94 (ciclof -> FOR ciclof2 .)
    RBRACES         reduce using rule 94 (ciclof -> FOR ciclof2 .)


state 70

    (95) ciclof2 -> ciclof3 . ciclof2
    (96) ciclof2 -> ciclof3 .
    (95) ciclof2 -> . ciclof3 ciclof2
    (96) ciclof2 -> . ciclof3
    (97) ciclof3 -> . ID addForId EQUALS exp genFor TO exp compFor DO LBRACES estatutos RBRACES actFor

  ! shift/reduce conflict for ID resolved as shift
    LEE             reduce using rule 96 (ciclof2 -> ciclof3 .)
    ESCRIBIR        reduce using rule 96 (ciclof2 -> ciclof3 .)
    IF              reduce using rule 96 (ciclof2 -> ciclof3 .)
    WHILE           reduce using rule 96 (ciclof2 -> ciclof3 .)
    DO              reduce using rule 96 (ciclof2 -> ciclof3 .)
    FOR             reduce using rule 96 (ciclof2 -> ciclof3 .)
    VOID            reduce using rule 96 (ciclof2 -> ciclof3 .)
    RETURN          reduce using rule 96 (ciclof2 -> ciclof3 .)
    INT             reduce using rule 96 (ciclof2 -> ciclof3 .)
    FLOAT           reduce using rule 96 (ciclof2 -> ciclof3 .)
    CHAR            reduce using rule 96 (ciclof2 -> ciclof3 .)
    BOOL            reduce using rule 96 (ciclof2 -> ciclof3 .)
    RPAREN          reduce using rule 96 (ciclof2 -> ciclof3 .)
    RBRACES         reduce using rule 96 (ciclof2 -> ciclof3 .)
    ID              shift and go to state 71

  ! ID              [ reduce using rule 96 (ciclof2 -> ciclof3 .) ]

    ciclof3                        shift and go to state 70
    ciclof2                        shift and go to state 96

state 71

    (97) ciclof3 -> ID . addForId EQUALS exp genFor TO exp compFor DO LBRACES estatutos RBRACES actFor
    (124) addForId -> .

    EQUALS          reduce using rule 124 (addForId -> .)

    addForId                       shift and go to state 97

state 72

    (22) retornar -> RETURN returnFlag . LPAREN retornar2

    LPAREN          shift and go to state 98


state 73

    (26) var2 -> ID setCurrentID . addValueVarT var3
    (27) var2 -> ID setCurrentID . addValueVarT LBRACKET CTE_I RBRACKET var3
    (28) var2 -> ID setCurrentID . addValueVarT LBRACKET CTE_I RBRACKET LBRACKET CTE_I RBRACKET var3
    (100) addValueVarT -> .

    LBRACKET        reduce using rule 100 (addValueVarT -> .)
    COMMA           reduce using rule 100 (addValueVarT -> .)
    SEMI            reduce using rule 100 (addValueVarT -> .)

    addValueVarT                   shift and go to state 99

state 74

    (14) funciones2 -> FUNCION ID addDir LPAREN . addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3
    (15) funciones2 -> FUNCION ID addDir LPAREN . addDir parametros RPAREN addParamCount LBRACES addContF funciones3
    (16) funciones2 -> FUNCION ID addDir LPAREN . addDir parametros RPAREN addParamCount LBRACES var addContF funciones3
    (98) addDir -> .

    INT             reduce using rule 98 (addDir -> .)
    FLOAT           reduce using rule 98 (addDir -> .)
    CHAR            reduce using rule 98 (addDir -> .)
    BOOL            reduce using rule 98 (addDir -> .)

    addDir                         shift and go to state 100

state 75

    (10) principal2 -> estatutos principal2 .

    $end            reduce using rule 10 (principal2 -> estatutos principal2 .)


state 76

    (76) asigna -> ID EQUALS asignarid . exp SEMI
    (36) exp -> . texp checarexp
    (37) exp -> . exp addOL exp
    (38) texp -> . gexp checarexp
    (39) texp -> . texp addOL texp
    (40) gexp -> . mexp checarexp
    (41) gexp -> . gexp gexp2 gexp
    (48) mexp -> . t checarexp
    (49) mexp -> . mexp mexp2
    (52) t -> . f checarexp
    (53) t -> . t t2
    (57) f -> . LPAREN addFakeBottom exp RPAREN popFakeBottom
    (58) f -> . CTE_I addIntType
    (59) f -> . CTE_F addFloatType
    (60) f -> . CTE_S addCharType
    (61) f -> . TRUE addBoolType
    (62) f -> . FALSE addBoolType
    (63) f -> . llamada
    (64) f -> . ID
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2

    LPAREN          shift and go to state 78
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    ID              shift and go to state 91

    exp                            shift and go to state 101
    texp                           shift and go to state 80
    gexp                           shift and go to state 81
    mexp                           shift and go to state 82
    t                              shift and go to state 83
    f                              shift and go to state 84
    llamada                        shift and go to state 90

state 77

    (77) llamada -> ID callFunc LPAREN . exp genParameter llamada2
    (36) exp -> . texp checarexp
    (37) exp -> . exp addOL exp
    (38) texp -> . gexp checarexp
    (39) texp -> . texp addOL texp
    (40) gexp -> . mexp checarexp
    (41) gexp -> . gexp gexp2 gexp
    (48) mexp -> . t checarexp
    (49) mexp -> . mexp mexp2
    (52) t -> . f checarexp
    (53) t -> . t t2
    (57) f -> . LPAREN addFakeBottom exp RPAREN popFakeBottom
    (58) f -> . CTE_I addIntType
    (59) f -> . CTE_F addFloatType
    (60) f -> . CTE_S addCharType
    (61) f -> . TRUE addBoolType
    (62) f -> . FALSE addBoolType
    (63) f -> . llamada
    (64) f -> . ID
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2

    LPAREN          shift and go to state 78
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    ID              shift and go to state 91

    exp                            shift and go to state 102
    texp                           shift and go to state 80
    gexp                           shift and go to state 81
    mexp                           shift and go to state 82
    t                              shift and go to state 83
    f                              shift and go to state 84
    llamada                        shift and go to state 90

state 78

    (57) f -> LPAREN . addFakeBottom exp RPAREN popFakeBottom
    (101) addFakeBottom -> .

    LPAREN          reduce using rule 101 (addFakeBottom -> .)
    CTE_I           reduce using rule 101 (addFakeBottom -> .)
    CTE_F           reduce using rule 101 (addFakeBottom -> .)
    CTE_S           reduce using rule 101 (addFakeBottom -> .)
    TRUE            reduce using rule 101 (addFakeBottom -> .)
    FALSE           reduce using rule 101 (addFakeBottom -> .)
    ID              reduce using rule 101 (addFakeBottom -> .)

    addFakeBottom                  shift and go to state 103

state 79

    (81) lee -> LEE LPAREN exp . cuadlee lee2
    (37) exp -> exp . addOL exp
    (115) cuadlee -> .
    (104) addOL -> . LOR
    (105) addOL -> . LAND

    COMMA           reduce using rule 115 (cuadlee -> .)
    RPAREN          reduce using rule 115 (cuadlee -> .)
    LOR             shift and go to state 106
    LAND            shift and go to state 107

    cuadlee                        shift and go to state 104
    addOL                          shift and go to state 105

state 80

    (36) exp -> texp . checarexp
    (39) texp -> texp . addOL texp
    (106) checarexp -> .
    (104) addOL -> . LOR
    (105) addOL -> . LAND

  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
    COMMA           reduce using rule 106 (checarexp -> .)
    RPAREN          reduce using rule 106 (checarexp -> .)
    SEMI            reduce using rule 106 (checarexp -> .)
    TO              reduce using rule 106 (checarexp -> .)
    DO              reduce using rule 106 (checarexp -> .)
    LOR             shift and go to state 106
    LAND            shift and go to state 107

  ! LOR             [ reduce using rule 106 (checarexp -> .) ]
  ! LAND            [ reduce using rule 106 (checarexp -> .) ]

    checarexp                      shift and go to state 108
    addOL                          shift and go to state 109

state 81

    (38) texp -> gexp . checarexp
    (41) gexp -> gexp . gexp2 gexp
    (106) checarexp -> .
    (42) gexp2 -> . LT addO
    (43) gexp2 -> . LE addO
    (44) gexp2 -> . GT addO
    (45) gexp2 -> . GE addO
    (46) gexp2 -> . EQ addO
    (47) gexp2 -> . NE addO

    LOR             reduce using rule 106 (checarexp -> .)
    LAND            reduce using rule 106 (checarexp -> .)
    COMMA           reduce using rule 106 (checarexp -> .)
    RPAREN          reduce using rule 106 (checarexp -> .)
    SEMI            reduce using rule 106 (checarexp -> .)
    TO              reduce using rule 106 (checarexp -> .)
    DO              reduce using rule 106 (checarexp -> .)
    LT              shift and go to state 112
    LE              shift and go to state 113
    GT              shift and go to state 114
    GE              shift and go to state 115
    EQ              shift and go to state 116
    NE              shift and go to state 117

    checarexp                      shift and go to state 110
    gexp2                          shift and go to state 111

state 82

    (40) gexp -> mexp . checarexp
    (49) mexp -> mexp . mexp2
    (106) checarexp -> .
    (50) mexp2 -> . PLUS addO mexp
    (51) mexp2 -> . MINUS addO mexp

    LT              reduce using rule 106 (checarexp -> .)
    LE              reduce using rule 106 (checarexp -> .)
    GT              reduce using rule 106 (checarexp -> .)
    GE              reduce using rule 106 (checarexp -> .)
    EQ              reduce using rule 106 (checarexp -> .)
    NE              reduce using rule 106 (checarexp -> .)
    LOR             reduce using rule 106 (checarexp -> .)
    LAND            reduce using rule 106 (checarexp -> .)
    COMMA           reduce using rule 106 (checarexp -> .)
    RPAREN          reduce using rule 106 (checarexp -> .)
    SEMI            reduce using rule 106 (checarexp -> .)
    TO              reduce using rule 106 (checarexp -> .)
    DO              reduce using rule 106 (checarexp -> .)
    PLUS            shift and go to state 120
    MINUS           shift and go to state 121

    checarexp                      shift and go to state 118
    mexp2                          shift and go to state 119

state 83

    (48) mexp -> t . checarexp
    (53) t -> t . t2
    (106) checarexp -> .
    (54) t2 -> . MULT addO t
    (55) t2 -> . DIV addO t
    (56) t2 -> . MOD addO t

    PLUS            reduce using rule 106 (checarexp -> .)
    MINUS           reduce using rule 106 (checarexp -> .)
    LT              reduce using rule 106 (checarexp -> .)
    LE              reduce using rule 106 (checarexp -> .)
    GT              reduce using rule 106 (checarexp -> .)
    GE              reduce using rule 106 (checarexp -> .)
    EQ              reduce using rule 106 (checarexp -> .)
    NE              reduce using rule 106 (checarexp -> .)
    LOR             reduce using rule 106 (checarexp -> .)
    LAND            reduce using rule 106 (checarexp -> .)
    COMMA           reduce using rule 106 (checarexp -> .)
    RPAREN          reduce using rule 106 (checarexp -> .)
    SEMI            reduce using rule 106 (checarexp -> .)
    TO              reduce using rule 106 (checarexp -> .)
    DO              reduce using rule 106 (checarexp -> .)
    MULT            shift and go to state 124
    DIV             shift and go to state 125
    MOD             shift and go to state 126

    checarexp                      shift and go to state 122
    t2                             shift and go to state 123

state 84

    (52) t -> f . checarexp
    (106) checarexp -> .

    MULT            reduce using rule 106 (checarexp -> .)
    DIV             reduce using rule 106 (checarexp -> .)
    MOD             reduce using rule 106 (checarexp -> .)
    PLUS            reduce using rule 106 (checarexp -> .)
    MINUS           reduce using rule 106 (checarexp -> .)
    LT              reduce using rule 106 (checarexp -> .)
    LE              reduce using rule 106 (checarexp -> .)
    GT              reduce using rule 106 (checarexp -> .)
    GE              reduce using rule 106 (checarexp -> .)
    EQ              reduce using rule 106 (checarexp -> .)
    NE              reduce using rule 106 (checarexp -> .)
    LOR             reduce using rule 106 (checarexp -> .)
    LAND            reduce using rule 106 (checarexp -> .)
    COMMA           reduce using rule 106 (checarexp -> .)
    RPAREN          reduce using rule 106 (checarexp -> .)
    SEMI            reduce using rule 106 (checarexp -> .)
    TO              reduce using rule 106 (checarexp -> .)
    DO              reduce using rule 106 (checarexp -> .)

    checarexp                      shift and go to state 127

state 85

    (58) f -> CTE_I . addIntType
    (107) addIntType -> .

    MULT            reduce using rule 107 (addIntType -> .)
    DIV             reduce using rule 107 (addIntType -> .)
    MOD             reduce using rule 107 (addIntType -> .)
    PLUS            reduce using rule 107 (addIntType -> .)
    MINUS           reduce using rule 107 (addIntType -> .)
    LT              reduce using rule 107 (addIntType -> .)
    LE              reduce using rule 107 (addIntType -> .)
    GT              reduce using rule 107 (addIntType -> .)
    GE              reduce using rule 107 (addIntType -> .)
    EQ              reduce using rule 107 (addIntType -> .)
    NE              reduce using rule 107 (addIntType -> .)
    LOR             reduce using rule 107 (addIntType -> .)
    LAND            reduce using rule 107 (addIntType -> .)
    COMMA           reduce using rule 107 (addIntType -> .)
    RPAREN          reduce using rule 107 (addIntType -> .)
    SEMI            reduce using rule 107 (addIntType -> .)
    TO              reduce using rule 107 (addIntType -> .)
    DO              reduce using rule 107 (addIntType -> .)

    addIntType                     shift and go to state 128

state 86

    (59) f -> CTE_F . addFloatType
    (108) addFloatType -> .

    MULT            reduce using rule 108 (addFloatType -> .)
    DIV             reduce using rule 108 (addFloatType -> .)
    MOD             reduce using rule 108 (addFloatType -> .)
    PLUS            reduce using rule 108 (addFloatType -> .)
    MINUS           reduce using rule 108 (addFloatType -> .)
    LT              reduce using rule 108 (addFloatType -> .)
    LE              reduce using rule 108 (addFloatType -> .)
    GT              reduce using rule 108 (addFloatType -> .)
    GE              reduce using rule 108 (addFloatType -> .)
    EQ              reduce using rule 108 (addFloatType -> .)
    NE              reduce using rule 108 (addFloatType -> .)
    LOR             reduce using rule 108 (addFloatType -> .)
    LAND            reduce using rule 108 (addFloatType -> .)
    COMMA           reduce using rule 108 (addFloatType -> .)
    RPAREN          reduce using rule 108 (addFloatType -> .)
    SEMI            reduce using rule 108 (addFloatType -> .)
    TO              reduce using rule 108 (addFloatType -> .)
    DO              reduce using rule 108 (addFloatType -> .)

    addFloatType                   shift and go to state 129

state 87

    (60) f -> CTE_S . addCharType
    (109) addCharType -> .

    MULT            reduce using rule 109 (addCharType -> .)
    DIV             reduce using rule 109 (addCharType -> .)
    MOD             reduce using rule 109 (addCharType -> .)
    PLUS            reduce using rule 109 (addCharType -> .)
    MINUS           reduce using rule 109 (addCharType -> .)
    LT              reduce using rule 109 (addCharType -> .)
    LE              reduce using rule 109 (addCharType -> .)
    GT              reduce using rule 109 (addCharType -> .)
    GE              reduce using rule 109 (addCharType -> .)
    EQ              reduce using rule 109 (addCharType -> .)
    NE              reduce using rule 109 (addCharType -> .)
    LOR             reduce using rule 109 (addCharType -> .)
    LAND            reduce using rule 109 (addCharType -> .)
    COMMA           reduce using rule 109 (addCharType -> .)
    RPAREN          reduce using rule 109 (addCharType -> .)
    SEMI            reduce using rule 109 (addCharType -> .)
    TO              reduce using rule 109 (addCharType -> .)
    DO              reduce using rule 109 (addCharType -> .)

    addCharType                    shift and go to state 130

state 88

    (61) f -> TRUE . addBoolType
    (110) addBoolType -> .

    MULT            reduce using rule 110 (addBoolType -> .)
    DIV             reduce using rule 110 (addBoolType -> .)
    MOD             reduce using rule 110 (addBoolType -> .)
    PLUS            reduce using rule 110 (addBoolType -> .)
    MINUS           reduce using rule 110 (addBoolType -> .)
    LT              reduce using rule 110 (addBoolType -> .)
    LE              reduce using rule 110 (addBoolType -> .)
    GT              reduce using rule 110 (addBoolType -> .)
    GE              reduce using rule 110 (addBoolType -> .)
    EQ              reduce using rule 110 (addBoolType -> .)
    NE              reduce using rule 110 (addBoolType -> .)
    LOR             reduce using rule 110 (addBoolType -> .)
    LAND            reduce using rule 110 (addBoolType -> .)
    COMMA           reduce using rule 110 (addBoolType -> .)
    RPAREN          reduce using rule 110 (addBoolType -> .)
    SEMI            reduce using rule 110 (addBoolType -> .)
    TO              reduce using rule 110 (addBoolType -> .)
    DO              reduce using rule 110 (addBoolType -> .)

    addBoolType                    shift and go to state 131

state 89

    (62) f -> FALSE . addBoolType
    (110) addBoolType -> .

    MULT            reduce using rule 110 (addBoolType -> .)
    DIV             reduce using rule 110 (addBoolType -> .)
    MOD             reduce using rule 110 (addBoolType -> .)
    PLUS            reduce using rule 110 (addBoolType -> .)
    MINUS           reduce using rule 110 (addBoolType -> .)
    LT              reduce using rule 110 (addBoolType -> .)
    LE              reduce using rule 110 (addBoolType -> .)
    GT              reduce using rule 110 (addBoolType -> .)
    GE              reduce using rule 110 (addBoolType -> .)
    EQ              reduce using rule 110 (addBoolType -> .)
    NE              reduce using rule 110 (addBoolType -> .)
    LOR             reduce using rule 110 (addBoolType -> .)
    LAND            reduce using rule 110 (addBoolType -> .)
    COMMA           reduce using rule 110 (addBoolType -> .)
    RPAREN          reduce using rule 110 (addBoolType -> .)
    SEMI            reduce using rule 110 (addBoolType -> .)
    TO              reduce using rule 110 (addBoolType -> .)
    DO              reduce using rule 110 (addBoolType -> .)

    addBoolType                    shift and go to state 132

state 90

    (63) f -> llamada .

    MULT            reduce using rule 63 (f -> llamada .)
    DIV             reduce using rule 63 (f -> llamada .)
    MOD             reduce using rule 63 (f -> llamada .)
    PLUS            reduce using rule 63 (f -> llamada .)
    MINUS           reduce using rule 63 (f -> llamada .)
    LT              reduce using rule 63 (f -> llamada .)
    LE              reduce using rule 63 (f -> llamada .)
    GT              reduce using rule 63 (f -> llamada .)
    GE              reduce using rule 63 (f -> llamada .)
    EQ              reduce using rule 63 (f -> llamada .)
    NE              reduce using rule 63 (f -> llamada .)
    LOR             reduce using rule 63 (f -> llamada .)
    LAND            reduce using rule 63 (f -> llamada .)
    COMMA           reduce using rule 63 (f -> llamada .)
    RPAREN          reduce using rule 63 (f -> llamada .)
    SEMI            reduce using rule 63 (f -> llamada .)
    TO              reduce using rule 63 (f -> llamada .)
    DO              reduce using rule 63 (f -> llamada .)


state 91

    (64) f -> ID .
    (77) llamada -> ID . callFunc LPAREN exp genParameter llamada2
    (131) callFunc -> .

    MULT            reduce using rule 64 (f -> ID .)
    DIV             reduce using rule 64 (f -> ID .)
    MOD             reduce using rule 64 (f -> ID .)
    PLUS            reduce using rule 64 (f -> ID .)
    MINUS           reduce using rule 64 (f -> ID .)
    LT              reduce using rule 64 (f -> ID .)
    LE              reduce using rule 64 (f -> ID .)
    GT              reduce using rule 64 (f -> ID .)
    GE              reduce using rule 64 (f -> ID .)
    EQ              reduce using rule 64 (f -> ID .)
    NE              reduce using rule 64 (f -> ID .)
    LOR             reduce using rule 64 (f -> ID .)
    LAND            reduce using rule 64 (f -> ID .)
    COMMA           reduce using rule 64 (f -> ID .)
    RPAREN          reduce using rule 64 (f -> ID .)
    SEMI            reduce using rule 64 (f -> ID .)
    TO              reduce using rule 64 (f -> ID .)
    DO              reduce using rule 64 (f -> ID .)
    LPAREN          reduce using rule 131 (callFunc -> .)

    callFunc                       shift and go to state 62

state 92

    (84) escribe -> ESCRIBIR LPAREN exp . cuadprint escribe2
    (37) exp -> exp . addOL exp
    (114) cuadprint -> .
    (104) addOL -> . LOR
    (105) addOL -> . LAND

    COMMA           reduce using rule 114 (cuadprint -> .)
    RPAREN          reduce using rule 114 (cuadprint -> .)
    LOR             shift and go to state 106
    LAND            shift and go to state 107

    cuadprint                      shift and go to state 133
    addOL                          shift and go to state 105

state 93

    (88) condicion2 -> LPAREN exp . RPAREN genGTF condicion3 ELSEIF genElse condicion2
    (89) condicion2 -> LPAREN exp . RPAREN genGTF condicion3 ELSE genElse condicion3
    (90) condicion2 -> LPAREN exp . RPAREN genGTF condicion3
    (37) exp -> exp . addOL exp
    (104) addOL -> . LOR
    (105) addOL -> . LAND

    RPAREN          shift and go to state 134
    LOR             shift and go to state 106
    LAND            shift and go to state 107

    addOL                          shift and go to state 105

state 94

    (92) ciclow -> WHILE storeWhile LPAREN . exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile
    (36) exp -> . texp checarexp
    (37) exp -> . exp addOL exp
    (38) texp -> . gexp checarexp
    (39) texp -> . texp addOL texp
    (40) gexp -> . mexp checarexp
    (41) gexp -> . gexp gexp2 gexp
    (48) mexp -> . t checarexp
    (49) mexp -> . mexp mexp2
    (52) t -> . f checarexp
    (53) t -> . t t2
    (57) f -> . LPAREN addFakeBottom exp RPAREN popFakeBottom
    (58) f -> . CTE_I addIntType
    (59) f -> . CTE_F addFloatType
    (60) f -> . CTE_S addCharType
    (61) f -> . TRUE addBoolType
    (62) f -> . FALSE addBoolType
    (63) f -> . llamada
    (64) f -> . ID
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2

    LPAREN          shift and go to state 78
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    ID              shift and go to state 91

    exp                            shift and go to state 135
    texp                           shift and go to state 80
    gexp                           shift and go to state 81
    mexp                           shift and go to state 82
    t                              shift and go to state 83
    f                              shift and go to state 84
    llamada                        shift and go to state 90

state 95

    (93) ciclow -> DO storeWhile LBRACES . estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile
    (65) estatutos -> . estatutos2 estatutos
    (66) estatutos -> . estatutos2
    (67) estatutos2 -> . asigna
    (68) estatutos2 -> . llamada
    (69) estatutos2 -> . lee
    (70) estatutos2 -> . escribe
    (71) estatutos2 -> . condicion
    (72) estatutos2 -> . ciclow
    (73) estatutos2 -> . ciclof
    (74) estatutos2 -> . funciones
    (75) estatutos2 -> . retornar
    (76) asigna -> . ID EQUALS asignarid exp SEMI
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2
    (81) lee -> . LEE LPAREN exp cuadlee lee2
    (84) escribe -> . ESCRIBIR LPAREN exp cuadprint escribe2
    (87) condicion -> . IF condicion2
    (92) ciclow -> . WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile
    (93) ciclow -> . DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile
    (94) ciclof -> . FOR ciclof2
    (12) funciones -> . tipo funciones2
    (13) funciones -> . VOID funciones2
    (22) retornar -> . RETURN returnFlag LPAREN retornar2
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . BOOL

    ID              shift and go to state 46
    LEE             shift and go to state 47
    ESCRIBIR        shift and go to state 48
    IF              shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 51
    FOR             shift and go to state 52
    VOID            shift and go to state 20
    RETURN          shift and go to state 53
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    BOOL            shift and go to state 24

    estatutos                      shift and go to state 136
    estatutos2                     shift and go to state 36
    asigna                         shift and go to state 37
    llamada                        shift and go to state 38
    lee                            shift and go to state 39
    escribe                        shift and go to state 40
    condicion                      shift and go to state 41
    ciclow                         shift and go to state 42
    ciclof                         shift and go to state 43
    funciones                      shift and go to state 44
    retornar                       shift and go to state 45
    tipo                           shift and go to state 19

state 96

    (95) ciclof2 -> ciclof3 ciclof2 .

    ID              reduce using rule 95 (ciclof2 -> ciclof3 ciclof2 .)
    LEE             reduce using rule 95 (ciclof2 -> ciclof3 ciclof2 .)
    ESCRIBIR        reduce using rule 95 (ciclof2 -> ciclof3 ciclof2 .)
    IF              reduce using rule 95 (ciclof2 -> ciclof3 ciclof2 .)
    WHILE           reduce using rule 95 (ciclof2 -> ciclof3 ciclof2 .)
    DO              reduce using rule 95 (ciclof2 -> ciclof3 ciclof2 .)
    FOR             reduce using rule 95 (ciclof2 -> ciclof3 ciclof2 .)
    VOID            reduce using rule 95 (ciclof2 -> ciclof3 ciclof2 .)
    RETURN          reduce using rule 95 (ciclof2 -> ciclof3 ciclof2 .)
    INT             reduce using rule 95 (ciclof2 -> ciclof3 ciclof2 .)
    FLOAT           reduce using rule 95 (ciclof2 -> ciclof3 ciclof2 .)
    CHAR            reduce using rule 95 (ciclof2 -> ciclof3 ciclof2 .)
    BOOL            reduce using rule 95 (ciclof2 -> ciclof3 ciclof2 .)
    RPAREN          reduce using rule 95 (ciclof2 -> ciclof3 ciclof2 .)
    RBRACES         reduce using rule 95 (ciclof2 -> ciclof3 ciclof2 .)


state 97

    (97) ciclof3 -> ID addForId . EQUALS exp genFor TO exp compFor DO LBRACES estatutos RBRACES actFor

    EQUALS          shift and go to state 137


state 98

    (22) retornar -> RETURN returnFlag LPAREN . retornar2
    (23) retornar2 -> . exp cuadRetornar COMMA retornar2
    (24) retornar2 -> . exp cuadRetornar RPAREN
    (36) exp -> . texp checarexp
    (37) exp -> . exp addOL exp
    (38) texp -> . gexp checarexp
    (39) texp -> . texp addOL texp
    (40) gexp -> . mexp checarexp
    (41) gexp -> . gexp gexp2 gexp
    (48) mexp -> . t checarexp
    (49) mexp -> . mexp mexp2
    (52) t -> . f checarexp
    (53) t -> . t t2
    (57) f -> . LPAREN addFakeBottom exp RPAREN popFakeBottom
    (58) f -> . CTE_I addIntType
    (59) f -> . CTE_F addFloatType
    (60) f -> . CTE_S addCharType
    (61) f -> . TRUE addBoolType
    (62) f -> . FALSE addBoolType
    (63) f -> . llamada
    (64) f -> . ID
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2

    LPAREN          shift and go to state 78
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    ID              shift and go to state 91

    retornar2                      shift and go to state 138
    exp                            shift and go to state 139
    texp                           shift and go to state 80
    gexp                           shift and go to state 81
    mexp                           shift and go to state 82
    t                              shift and go to state 83
    f                              shift and go to state 84
    llamada                        shift and go to state 90

state 99

    (26) var2 -> ID setCurrentID addValueVarT . var3
    (27) var2 -> ID setCurrentID addValueVarT . LBRACKET CTE_I RBRACKET var3
    (28) var2 -> ID setCurrentID addValueVarT . LBRACKET CTE_I RBRACKET LBRACKET CTE_I RBRACKET var3
    (29) var3 -> . COMMA var2
    (30) var3 -> . SEMI var
    (31) var3 -> . SEMI

    LBRACKET        shift and go to state 141
    COMMA           shift and go to state 142
    SEMI            shift and go to state 143

    var3                           shift and go to state 140

state 100

    (14) funciones2 -> FUNCION ID addDir LPAREN addDir . parametros RPAREN addParamCount LBRACES addContF atributos funciones3
    (15) funciones2 -> FUNCION ID addDir LPAREN addDir . parametros RPAREN addParamCount LBRACES addContF funciones3
    (16) funciones2 -> FUNCION ID addDir LPAREN addDir . parametros RPAREN addParamCount LBRACES var addContF funciones3
    (20) parametros -> . tipo ID setCurrentID addValueVarT newParamType COMMA parametros
    (21) parametros -> . tipo ID setCurrentID addValueVarT newParamType
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . BOOL

    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    BOOL            shift and go to state 24

    parametros                     shift and go to state 144
    tipo                           shift and go to state 145

state 101

    (76) asigna -> ID EQUALS asignarid exp . SEMI
    (37) exp -> exp . addOL exp
    (104) addOL -> . LOR
    (105) addOL -> . LAND

    SEMI            shift and go to state 146
    LOR             shift and go to state 106
    LAND            shift and go to state 107

    addOL                          shift and go to state 105

state 102

    (77) llamada -> ID callFunc LPAREN exp . genParameter llamada2
    (37) exp -> exp . addOL exp
    (78) genParameter -> .
    (104) addOL -> . LOR
    (105) addOL -> . LAND

    COMMA           reduce using rule 78 (genParameter -> .)
    RPAREN          reduce using rule 78 (genParameter -> .)
    LOR             shift and go to state 106
    LAND            shift and go to state 107

    genParameter                   shift and go to state 147
    addOL                          shift and go to state 105

state 103

    (57) f -> LPAREN addFakeBottom . exp RPAREN popFakeBottom
    (36) exp -> . texp checarexp
    (37) exp -> . exp addOL exp
    (38) texp -> . gexp checarexp
    (39) texp -> . texp addOL texp
    (40) gexp -> . mexp checarexp
    (41) gexp -> . gexp gexp2 gexp
    (48) mexp -> . t checarexp
    (49) mexp -> . mexp mexp2
    (52) t -> . f checarexp
    (53) t -> . t t2
    (57) f -> . LPAREN addFakeBottom exp RPAREN popFakeBottom
    (58) f -> . CTE_I addIntType
    (59) f -> . CTE_F addFloatType
    (60) f -> . CTE_S addCharType
    (61) f -> . TRUE addBoolType
    (62) f -> . FALSE addBoolType
    (63) f -> . llamada
    (64) f -> . ID
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2

    LPAREN          shift and go to state 78
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    ID              shift and go to state 91

    exp                            shift and go to state 148
    texp                           shift and go to state 80
    gexp                           shift and go to state 81
    mexp                           shift and go to state 82
    t                              shift and go to state 83
    f                              shift and go to state 84
    llamada                        shift and go to state 90

state 104

    (81) lee -> LEE LPAREN exp cuadlee . lee2
    (82) lee2 -> . COMMA exp cuadlee lee2
    (83) lee2 -> . RPAREN

    COMMA           shift and go to state 150
    RPAREN          shift and go to state 151

    lee2                           shift and go to state 149

state 105

    (37) exp -> exp addOL . exp
    (36) exp -> . texp checarexp
    (37) exp -> . exp addOL exp
    (38) texp -> . gexp checarexp
    (39) texp -> . texp addOL texp
    (40) gexp -> . mexp checarexp
    (41) gexp -> . gexp gexp2 gexp
    (48) mexp -> . t checarexp
    (49) mexp -> . mexp mexp2
    (52) t -> . f checarexp
    (53) t -> . t t2
    (57) f -> . LPAREN addFakeBottom exp RPAREN popFakeBottom
    (58) f -> . CTE_I addIntType
    (59) f -> . CTE_F addFloatType
    (60) f -> . CTE_S addCharType
    (61) f -> . TRUE addBoolType
    (62) f -> . FALSE addBoolType
    (63) f -> . llamada
    (64) f -> . ID
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2

    LPAREN          shift and go to state 78
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    ID              shift and go to state 91

    exp                            shift and go to state 152
    texp                           shift and go to state 80
    gexp                           shift and go to state 81
    mexp                           shift and go to state 82
    t                              shift and go to state 83
    f                              shift and go to state 84
    llamada                        shift and go to state 90

state 106

    (104) addOL -> LOR .

    LPAREN          reduce using rule 104 (addOL -> LOR .)
    CTE_I           reduce using rule 104 (addOL -> LOR .)
    CTE_F           reduce using rule 104 (addOL -> LOR .)
    CTE_S           reduce using rule 104 (addOL -> LOR .)
    TRUE            reduce using rule 104 (addOL -> LOR .)
    FALSE           reduce using rule 104 (addOL -> LOR .)
    ID              reduce using rule 104 (addOL -> LOR .)


state 107

    (105) addOL -> LAND .

    LPAREN          reduce using rule 105 (addOL -> LAND .)
    CTE_I           reduce using rule 105 (addOL -> LAND .)
    CTE_F           reduce using rule 105 (addOL -> LAND .)
    CTE_S           reduce using rule 105 (addOL -> LAND .)
    TRUE            reduce using rule 105 (addOL -> LAND .)
    FALSE           reduce using rule 105 (addOL -> LAND .)
    ID              reduce using rule 105 (addOL -> LAND .)


state 108

    (36) exp -> texp checarexp .

    LOR             reduce using rule 36 (exp -> texp checarexp .)
    LAND            reduce using rule 36 (exp -> texp checarexp .)
    COMMA           reduce using rule 36 (exp -> texp checarexp .)
    RPAREN          reduce using rule 36 (exp -> texp checarexp .)
    SEMI            reduce using rule 36 (exp -> texp checarexp .)
    TO              reduce using rule 36 (exp -> texp checarexp .)
    DO              reduce using rule 36 (exp -> texp checarexp .)


state 109

    (39) texp -> texp addOL . texp
    (38) texp -> . gexp checarexp
    (39) texp -> . texp addOL texp
    (40) gexp -> . mexp checarexp
    (41) gexp -> . gexp gexp2 gexp
    (48) mexp -> . t checarexp
    (49) mexp -> . mexp mexp2
    (52) t -> . f checarexp
    (53) t -> . t t2
    (57) f -> . LPAREN addFakeBottom exp RPAREN popFakeBottom
    (58) f -> . CTE_I addIntType
    (59) f -> . CTE_F addFloatType
    (60) f -> . CTE_S addCharType
    (61) f -> . TRUE addBoolType
    (62) f -> . FALSE addBoolType
    (63) f -> . llamada
    (64) f -> . ID
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2

    LPAREN          shift and go to state 78
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    ID              shift and go to state 91

    texp                           shift and go to state 153
    gexp                           shift and go to state 81
    mexp                           shift and go to state 82
    t                              shift and go to state 83
    f                              shift and go to state 84
    llamada                        shift and go to state 90

state 110

    (38) texp -> gexp checarexp .

    LOR             reduce using rule 38 (texp -> gexp checarexp .)
    LAND            reduce using rule 38 (texp -> gexp checarexp .)
    COMMA           reduce using rule 38 (texp -> gexp checarexp .)
    RPAREN          reduce using rule 38 (texp -> gexp checarexp .)
    SEMI            reduce using rule 38 (texp -> gexp checarexp .)
    TO              reduce using rule 38 (texp -> gexp checarexp .)
    DO              reduce using rule 38 (texp -> gexp checarexp .)


state 111

    (41) gexp -> gexp gexp2 . gexp
    (40) gexp -> . mexp checarexp
    (41) gexp -> . gexp gexp2 gexp
    (48) mexp -> . t checarexp
    (49) mexp -> . mexp mexp2
    (52) t -> . f checarexp
    (53) t -> . t t2
    (57) f -> . LPAREN addFakeBottom exp RPAREN popFakeBottom
    (58) f -> . CTE_I addIntType
    (59) f -> . CTE_F addFloatType
    (60) f -> . CTE_S addCharType
    (61) f -> . TRUE addBoolType
    (62) f -> . FALSE addBoolType
    (63) f -> . llamada
    (64) f -> . ID
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2

    LPAREN          shift and go to state 78
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    ID              shift and go to state 91

    gexp                           shift and go to state 154
    mexp                           shift and go to state 82
    t                              shift and go to state 83
    f                              shift and go to state 84
    llamada                        shift and go to state 90

state 112

    (42) gexp2 -> LT . addO
    (103) addO -> .

    LPAREN          reduce using rule 103 (addO -> .)
    CTE_I           reduce using rule 103 (addO -> .)
    CTE_F           reduce using rule 103 (addO -> .)
    CTE_S           reduce using rule 103 (addO -> .)
    TRUE            reduce using rule 103 (addO -> .)
    FALSE           reduce using rule 103 (addO -> .)
    ID              reduce using rule 103 (addO -> .)

    addO                           shift and go to state 155

state 113

    (43) gexp2 -> LE . addO
    (103) addO -> .

    LPAREN          reduce using rule 103 (addO -> .)
    CTE_I           reduce using rule 103 (addO -> .)
    CTE_F           reduce using rule 103 (addO -> .)
    CTE_S           reduce using rule 103 (addO -> .)
    TRUE            reduce using rule 103 (addO -> .)
    FALSE           reduce using rule 103 (addO -> .)
    ID              reduce using rule 103 (addO -> .)

    addO                           shift and go to state 156

state 114

    (44) gexp2 -> GT . addO
    (103) addO -> .

    LPAREN          reduce using rule 103 (addO -> .)
    CTE_I           reduce using rule 103 (addO -> .)
    CTE_F           reduce using rule 103 (addO -> .)
    CTE_S           reduce using rule 103 (addO -> .)
    TRUE            reduce using rule 103 (addO -> .)
    FALSE           reduce using rule 103 (addO -> .)
    ID              reduce using rule 103 (addO -> .)

    addO                           shift and go to state 157

state 115

    (45) gexp2 -> GE . addO
    (103) addO -> .

    LPAREN          reduce using rule 103 (addO -> .)
    CTE_I           reduce using rule 103 (addO -> .)
    CTE_F           reduce using rule 103 (addO -> .)
    CTE_S           reduce using rule 103 (addO -> .)
    TRUE            reduce using rule 103 (addO -> .)
    FALSE           reduce using rule 103 (addO -> .)
    ID              reduce using rule 103 (addO -> .)

    addO                           shift and go to state 158

state 116

    (46) gexp2 -> EQ . addO
    (103) addO -> .

    LPAREN          reduce using rule 103 (addO -> .)
    CTE_I           reduce using rule 103 (addO -> .)
    CTE_F           reduce using rule 103 (addO -> .)
    CTE_S           reduce using rule 103 (addO -> .)
    TRUE            reduce using rule 103 (addO -> .)
    FALSE           reduce using rule 103 (addO -> .)
    ID              reduce using rule 103 (addO -> .)

    addO                           shift and go to state 159

state 117

    (47) gexp2 -> NE . addO
    (103) addO -> .

    LPAREN          reduce using rule 103 (addO -> .)
    CTE_I           reduce using rule 103 (addO -> .)
    CTE_F           reduce using rule 103 (addO -> .)
    CTE_S           reduce using rule 103 (addO -> .)
    TRUE            reduce using rule 103 (addO -> .)
    FALSE           reduce using rule 103 (addO -> .)
    ID              reduce using rule 103 (addO -> .)

    addO                           shift and go to state 160

state 118

    (40) gexp -> mexp checarexp .

    LT              reduce using rule 40 (gexp -> mexp checarexp .)
    LE              reduce using rule 40 (gexp -> mexp checarexp .)
    GT              reduce using rule 40 (gexp -> mexp checarexp .)
    GE              reduce using rule 40 (gexp -> mexp checarexp .)
    EQ              reduce using rule 40 (gexp -> mexp checarexp .)
    NE              reduce using rule 40 (gexp -> mexp checarexp .)
    LOR             reduce using rule 40 (gexp -> mexp checarexp .)
    LAND            reduce using rule 40 (gexp -> mexp checarexp .)
    COMMA           reduce using rule 40 (gexp -> mexp checarexp .)
    RPAREN          reduce using rule 40 (gexp -> mexp checarexp .)
    SEMI            reduce using rule 40 (gexp -> mexp checarexp .)
    TO              reduce using rule 40 (gexp -> mexp checarexp .)
    DO              reduce using rule 40 (gexp -> mexp checarexp .)


state 119

    (49) mexp -> mexp mexp2 .

    PLUS            reduce using rule 49 (mexp -> mexp mexp2 .)
    MINUS           reduce using rule 49 (mexp -> mexp mexp2 .)
    LT              reduce using rule 49 (mexp -> mexp mexp2 .)
    LE              reduce using rule 49 (mexp -> mexp mexp2 .)
    GT              reduce using rule 49 (mexp -> mexp mexp2 .)
    GE              reduce using rule 49 (mexp -> mexp mexp2 .)
    EQ              reduce using rule 49 (mexp -> mexp mexp2 .)
    NE              reduce using rule 49 (mexp -> mexp mexp2 .)
    LOR             reduce using rule 49 (mexp -> mexp mexp2 .)
    LAND            reduce using rule 49 (mexp -> mexp mexp2 .)
    COMMA           reduce using rule 49 (mexp -> mexp mexp2 .)
    RPAREN          reduce using rule 49 (mexp -> mexp mexp2 .)
    SEMI            reduce using rule 49 (mexp -> mexp mexp2 .)
    TO              reduce using rule 49 (mexp -> mexp mexp2 .)
    DO              reduce using rule 49 (mexp -> mexp mexp2 .)


state 120

    (50) mexp2 -> PLUS . addO mexp
    (103) addO -> .

    LPAREN          reduce using rule 103 (addO -> .)
    CTE_I           reduce using rule 103 (addO -> .)
    CTE_F           reduce using rule 103 (addO -> .)
    CTE_S           reduce using rule 103 (addO -> .)
    TRUE            reduce using rule 103 (addO -> .)
    FALSE           reduce using rule 103 (addO -> .)
    ID              reduce using rule 103 (addO -> .)

    addO                           shift and go to state 161

state 121

    (51) mexp2 -> MINUS . addO mexp
    (103) addO -> .

    LPAREN          reduce using rule 103 (addO -> .)
    CTE_I           reduce using rule 103 (addO -> .)
    CTE_F           reduce using rule 103 (addO -> .)
    CTE_S           reduce using rule 103 (addO -> .)
    TRUE            reduce using rule 103 (addO -> .)
    FALSE           reduce using rule 103 (addO -> .)
    ID              reduce using rule 103 (addO -> .)

    addO                           shift and go to state 162

state 122

    (48) mexp -> t checarexp .

    PLUS            reduce using rule 48 (mexp -> t checarexp .)
    MINUS           reduce using rule 48 (mexp -> t checarexp .)
    LT              reduce using rule 48 (mexp -> t checarexp .)
    LE              reduce using rule 48 (mexp -> t checarexp .)
    GT              reduce using rule 48 (mexp -> t checarexp .)
    GE              reduce using rule 48 (mexp -> t checarexp .)
    EQ              reduce using rule 48 (mexp -> t checarexp .)
    NE              reduce using rule 48 (mexp -> t checarexp .)
    LOR             reduce using rule 48 (mexp -> t checarexp .)
    LAND            reduce using rule 48 (mexp -> t checarexp .)
    COMMA           reduce using rule 48 (mexp -> t checarexp .)
    RPAREN          reduce using rule 48 (mexp -> t checarexp .)
    SEMI            reduce using rule 48 (mexp -> t checarexp .)
    TO              reduce using rule 48 (mexp -> t checarexp .)
    DO              reduce using rule 48 (mexp -> t checarexp .)


state 123

    (53) t -> t t2 .

    MULT            reduce using rule 53 (t -> t t2 .)
    DIV             reduce using rule 53 (t -> t t2 .)
    MOD             reduce using rule 53 (t -> t t2 .)
    PLUS            reduce using rule 53 (t -> t t2 .)
    MINUS           reduce using rule 53 (t -> t t2 .)
    LT              reduce using rule 53 (t -> t t2 .)
    LE              reduce using rule 53 (t -> t t2 .)
    GT              reduce using rule 53 (t -> t t2 .)
    GE              reduce using rule 53 (t -> t t2 .)
    EQ              reduce using rule 53 (t -> t t2 .)
    NE              reduce using rule 53 (t -> t t2 .)
    LOR             reduce using rule 53 (t -> t t2 .)
    LAND            reduce using rule 53 (t -> t t2 .)
    COMMA           reduce using rule 53 (t -> t t2 .)
    RPAREN          reduce using rule 53 (t -> t t2 .)
    SEMI            reduce using rule 53 (t -> t t2 .)
    TO              reduce using rule 53 (t -> t t2 .)
    DO              reduce using rule 53 (t -> t t2 .)


state 124

    (54) t2 -> MULT . addO t
    (103) addO -> .

    LPAREN          reduce using rule 103 (addO -> .)
    CTE_I           reduce using rule 103 (addO -> .)
    CTE_F           reduce using rule 103 (addO -> .)
    CTE_S           reduce using rule 103 (addO -> .)
    TRUE            reduce using rule 103 (addO -> .)
    FALSE           reduce using rule 103 (addO -> .)
    ID              reduce using rule 103 (addO -> .)

    addO                           shift and go to state 163

state 125

    (55) t2 -> DIV . addO t
    (103) addO -> .

    LPAREN          reduce using rule 103 (addO -> .)
    CTE_I           reduce using rule 103 (addO -> .)
    CTE_F           reduce using rule 103 (addO -> .)
    CTE_S           reduce using rule 103 (addO -> .)
    TRUE            reduce using rule 103 (addO -> .)
    FALSE           reduce using rule 103 (addO -> .)
    ID              reduce using rule 103 (addO -> .)

    addO                           shift and go to state 164

state 126

    (56) t2 -> MOD . addO t
    (103) addO -> .

    LPAREN          reduce using rule 103 (addO -> .)
    CTE_I           reduce using rule 103 (addO -> .)
    CTE_F           reduce using rule 103 (addO -> .)
    CTE_S           reduce using rule 103 (addO -> .)
    TRUE            reduce using rule 103 (addO -> .)
    FALSE           reduce using rule 103 (addO -> .)
    ID              reduce using rule 103 (addO -> .)

    addO                           shift and go to state 165

state 127

    (52) t -> f checarexp .

    MULT            reduce using rule 52 (t -> f checarexp .)
    DIV             reduce using rule 52 (t -> f checarexp .)
    MOD             reduce using rule 52 (t -> f checarexp .)
    PLUS            reduce using rule 52 (t -> f checarexp .)
    MINUS           reduce using rule 52 (t -> f checarexp .)
    LT              reduce using rule 52 (t -> f checarexp .)
    LE              reduce using rule 52 (t -> f checarexp .)
    GT              reduce using rule 52 (t -> f checarexp .)
    GE              reduce using rule 52 (t -> f checarexp .)
    EQ              reduce using rule 52 (t -> f checarexp .)
    NE              reduce using rule 52 (t -> f checarexp .)
    LOR             reduce using rule 52 (t -> f checarexp .)
    LAND            reduce using rule 52 (t -> f checarexp .)
    COMMA           reduce using rule 52 (t -> f checarexp .)
    RPAREN          reduce using rule 52 (t -> f checarexp .)
    SEMI            reduce using rule 52 (t -> f checarexp .)
    TO              reduce using rule 52 (t -> f checarexp .)
    DO              reduce using rule 52 (t -> f checarexp .)


state 128

    (58) f -> CTE_I addIntType .

    MULT            reduce using rule 58 (f -> CTE_I addIntType .)
    DIV             reduce using rule 58 (f -> CTE_I addIntType .)
    MOD             reduce using rule 58 (f -> CTE_I addIntType .)
    PLUS            reduce using rule 58 (f -> CTE_I addIntType .)
    MINUS           reduce using rule 58 (f -> CTE_I addIntType .)
    LT              reduce using rule 58 (f -> CTE_I addIntType .)
    LE              reduce using rule 58 (f -> CTE_I addIntType .)
    GT              reduce using rule 58 (f -> CTE_I addIntType .)
    GE              reduce using rule 58 (f -> CTE_I addIntType .)
    EQ              reduce using rule 58 (f -> CTE_I addIntType .)
    NE              reduce using rule 58 (f -> CTE_I addIntType .)
    LOR             reduce using rule 58 (f -> CTE_I addIntType .)
    LAND            reduce using rule 58 (f -> CTE_I addIntType .)
    COMMA           reduce using rule 58 (f -> CTE_I addIntType .)
    RPAREN          reduce using rule 58 (f -> CTE_I addIntType .)
    SEMI            reduce using rule 58 (f -> CTE_I addIntType .)
    TO              reduce using rule 58 (f -> CTE_I addIntType .)
    DO              reduce using rule 58 (f -> CTE_I addIntType .)


state 129

    (59) f -> CTE_F addFloatType .

    MULT            reduce using rule 59 (f -> CTE_F addFloatType .)
    DIV             reduce using rule 59 (f -> CTE_F addFloatType .)
    MOD             reduce using rule 59 (f -> CTE_F addFloatType .)
    PLUS            reduce using rule 59 (f -> CTE_F addFloatType .)
    MINUS           reduce using rule 59 (f -> CTE_F addFloatType .)
    LT              reduce using rule 59 (f -> CTE_F addFloatType .)
    LE              reduce using rule 59 (f -> CTE_F addFloatType .)
    GT              reduce using rule 59 (f -> CTE_F addFloatType .)
    GE              reduce using rule 59 (f -> CTE_F addFloatType .)
    EQ              reduce using rule 59 (f -> CTE_F addFloatType .)
    NE              reduce using rule 59 (f -> CTE_F addFloatType .)
    LOR             reduce using rule 59 (f -> CTE_F addFloatType .)
    LAND            reduce using rule 59 (f -> CTE_F addFloatType .)
    COMMA           reduce using rule 59 (f -> CTE_F addFloatType .)
    RPAREN          reduce using rule 59 (f -> CTE_F addFloatType .)
    SEMI            reduce using rule 59 (f -> CTE_F addFloatType .)
    TO              reduce using rule 59 (f -> CTE_F addFloatType .)
    DO              reduce using rule 59 (f -> CTE_F addFloatType .)


state 130

    (60) f -> CTE_S addCharType .

    MULT            reduce using rule 60 (f -> CTE_S addCharType .)
    DIV             reduce using rule 60 (f -> CTE_S addCharType .)
    MOD             reduce using rule 60 (f -> CTE_S addCharType .)
    PLUS            reduce using rule 60 (f -> CTE_S addCharType .)
    MINUS           reduce using rule 60 (f -> CTE_S addCharType .)
    LT              reduce using rule 60 (f -> CTE_S addCharType .)
    LE              reduce using rule 60 (f -> CTE_S addCharType .)
    GT              reduce using rule 60 (f -> CTE_S addCharType .)
    GE              reduce using rule 60 (f -> CTE_S addCharType .)
    EQ              reduce using rule 60 (f -> CTE_S addCharType .)
    NE              reduce using rule 60 (f -> CTE_S addCharType .)
    LOR             reduce using rule 60 (f -> CTE_S addCharType .)
    LAND            reduce using rule 60 (f -> CTE_S addCharType .)
    COMMA           reduce using rule 60 (f -> CTE_S addCharType .)
    RPAREN          reduce using rule 60 (f -> CTE_S addCharType .)
    SEMI            reduce using rule 60 (f -> CTE_S addCharType .)
    TO              reduce using rule 60 (f -> CTE_S addCharType .)
    DO              reduce using rule 60 (f -> CTE_S addCharType .)


state 131

    (61) f -> TRUE addBoolType .

    MULT            reduce using rule 61 (f -> TRUE addBoolType .)
    DIV             reduce using rule 61 (f -> TRUE addBoolType .)
    MOD             reduce using rule 61 (f -> TRUE addBoolType .)
    PLUS            reduce using rule 61 (f -> TRUE addBoolType .)
    MINUS           reduce using rule 61 (f -> TRUE addBoolType .)
    LT              reduce using rule 61 (f -> TRUE addBoolType .)
    LE              reduce using rule 61 (f -> TRUE addBoolType .)
    GT              reduce using rule 61 (f -> TRUE addBoolType .)
    GE              reduce using rule 61 (f -> TRUE addBoolType .)
    EQ              reduce using rule 61 (f -> TRUE addBoolType .)
    NE              reduce using rule 61 (f -> TRUE addBoolType .)
    LOR             reduce using rule 61 (f -> TRUE addBoolType .)
    LAND            reduce using rule 61 (f -> TRUE addBoolType .)
    COMMA           reduce using rule 61 (f -> TRUE addBoolType .)
    RPAREN          reduce using rule 61 (f -> TRUE addBoolType .)
    SEMI            reduce using rule 61 (f -> TRUE addBoolType .)
    TO              reduce using rule 61 (f -> TRUE addBoolType .)
    DO              reduce using rule 61 (f -> TRUE addBoolType .)


state 132

    (62) f -> FALSE addBoolType .

    MULT            reduce using rule 62 (f -> FALSE addBoolType .)
    DIV             reduce using rule 62 (f -> FALSE addBoolType .)
    MOD             reduce using rule 62 (f -> FALSE addBoolType .)
    PLUS            reduce using rule 62 (f -> FALSE addBoolType .)
    MINUS           reduce using rule 62 (f -> FALSE addBoolType .)
    LT              reduce using rule 62 (f -> FALSE addBoolType .)
    LE              reduce using rule 62 (f -> FALSE addBoolType .)
    GT              reduce using rule 62 (f -> FALSE addBoolType .)
    GE              reduce using rule 62 (f -> FALSE addBoolType .)
    EQ              reduce using rule 62 (f -> FALSE addBoolType .)
    NE              reduce using rule 62 (f -> FALSE addBoolType .)
    LOR             reduce using rule 62 (f -> FALSE addBoolType .)
    LAND            reduce using rule 62 (f -> FALSE addBoolType .)
    COMMA           reduce using rule 62 (f -> FALSE addBoolType .)
    RPAREN          reduce using rule 62 (f -> FALSE addBoolType .)
    SEMI            reduce using rule 62 (f -> FALSE addBoolType .)
    TO              reduce using rule 62 (f -> FALSE addBoolType .)
    DO              reduce using rule 62 (f -> FALSE addBoolType .)


state 133

    (84) escribe -> ESCRIBIR LPAREN exp cuadprint . escribe2
    (85) escribe2 -> . COMMA exp cuadprint escribe2
    (86) escribe2 -> . RPAREN

    COMMA           shift and go to state 167
    RPAREN          shift and go to state 168

    escribe2                       shift and go to state 166

state 134

    (88) condicion2 -> LPAREN exp RPAREN . genGTF condicion3 ELSEIF genElse condicion2
    (89) condicion2 -> LPAREN exp RPAREN . genGTF condicion3 ELSE genElse condicion3
    (90) condicion2 -> LPAREN exp RPAREN . genGTF condicion3
    (118) genGTF -> .

    LBRACES         reduce using rule 118 (genGTF -> .)

    genGTF                         shift and go to state 169

state 135

    (92) ciclow -> WHILE storeWhile LPAREN exp . RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile
    (37) exp -> exp . addOL exp
    (104) addOL -> . LOR
    (105) addOL -> . LAND

    RPAREN          shift and go to state 170
    LOR             shift and go to state 106
    LAND            shift and go to state 107

    addOL                          shift and go to state 105

state 136

    (93) ciclow -> DO storeWhile LBRACES estatutos . RBRACES WHILE LPAREN exp RPAREN genDoWhile

    RBRACES         shift and go to state 171


state 137

    (97) ciclof3 -> ID addForId EQUALS . exp genFor TO exp compFor DO LBRACES estatutos RBRACES actFor
    (36) exp -> . texp checarexp
    (37) exp -> . exp addOL exp
    (38) texp -> . gexp checarexp
    (39) texp -> . texp addOL texp
    (40) gexp -> . mexp checarexp
    (41) gexp -> . gexp gexp2 gexp
    (48) mexp -> . t checarexp
    (49) mexp -> . mexp mexp2
    (52) t -> . f checarexp
    (53) t -> . t t2
    (57) f -> . LPAREN addFakeBottom exp RPAREN popFakeBottom
    (58) f -> . CTE_I addIntType
    (59) f -> . CTE_F addFloatType
    (60) f -> . CTE_S addCharType
    (61) f -> . TRUE addBoolType
    (62) f -> . FALSE addBoolType
    (63) f -> . llamada
    (64) f -> . ID
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2

    LPAREN          shift and go to state 78
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    ID              shift and go to state 91

    exp                            shift and go to state 172
    texp                           shift and go to state 80
    gexp                           shift and go to state 81
    mexp                           shift and go to state 82
    t                              shift and go to state 83
    f                              shift and go to state 84
    llamada                        shift and go to state 90

state 138

    (22) retornar -> RETURN returnFlag LPAREN retornar2 .

    ID              reduce using rule 22 (retornar -> RETURN returnFlag LPAREN retornar2 .)
    LEE             reduce using rule 22 (retornar -> RETURN returnFlag LPAREN retornar2 .)
    ESCRIBIR        reduce using rule 22 (retornar -> RETURN returnFlag LPAREN retornar2 .)
    IF              reduce using rule 22 (retornar -> RETURN returnFlag LPAREN retornar2 .)
    WHILE           reduce using rule 22 (retornar -> RETURN returnFlag LPAREN retornar2 .)
    DO              reduce using rule 22 (retornar -> RETURN returnFlag LPAREN retornar2 .)
    FOR             reduce using rule 22 (retornar -> RETURN returnFlag LPAREN retornar2 .)
    VOID            reduce using rule 22 (retornar -> RETURN returnFlag LPAREN retornar2 .)
    RETURN          reduce using rule 22 (retornar -> RETURN returnFlag LPAREN retornar2 .)
    INT             reduce using rule 22 (retornar -> RETURN returnFlag LPAREN retornar2 .)
    FLOAT           reduce using rule 22 (retornar -> RETURN returnFlag LPAREN retornar2 .)
    CHAR            reduce using rule 22 (retornar -> RETURN returnFlag LPAREN retornar2 .)
    BOOL            reduce using rule 22 (retornar -> RETURN returnFlag LPAREN retornar2 .)
    RPAREN          reduce using rule 22 (retornar -> RETURN returnFlag LPAREN retornar2 .)
    RBRACES         reduce using rule 22 (retornar -> RETURN returnFlag LPAREN retornar2 .)


state 139

    (23) retornar2 -> exp . cuadRetornar COMMA retornar2
    (24) retornar2 -> exp . cuadRetornar RPAREN
    (37) exp -> exp . addOL exp
    (117) cuadRetornar -> .
    (104) addOL -> . LOR
    (105) addOL -> . LAND

    COMMA           reduce using rule 117 (cuadRetornar -> .)
    RPAREN          reduce using rule 117 (cuadRetornar -> .)
    LOR             shift and go to state 106
    LAND            shift and go to state 107

    cuadRetornar                   shift and go to state 173
    addOL                          shift and go to state 105

state 140

    (26) var2 -> ID setCurrentID addValueVarT var3 .

    ATRIBUTOS       reduce using rule 26 (var2 -> ID setCurrentID addValueVarT var3 .)
    METODOS         reduce using rule 26 (var2 -> ID setCurrentID addValueVarT var3 .)
    PRINCIPAL       reduce using rule 26 (var2 -> ID setCurrentID addValueVarT var3 .)
    ID              reduce using rule 26 (var2 -> ID setCurrentID addValueVarT var3 .)
    LEE             reduce using rule 26 (var2 -> ID setCurrentID addValueVarT var3 .)
    ESCRIBIR        reduce using rule 26 (var2 -> ID setCurrentID addValueVarT var3 .)
    IF              reduce using rule 26 (var2 -> ID setCurrentID addValueVarT var3 .)
    WHILE           reduce using rule 26 (var2 -> ID setCurrentID addValueVarT var3 .)
    DO              reduce using rule 26 (var2 -> ID setCurrentID addValueVarT var3 .)
    FOR             reduce using rule 26 (var2 -> ID setCurrentID addValueVarT var3 .)
    VOID            reduce using rule 26 (var2 -> ID setCurrentID addValueVarT var3 .)
    RETURN          reduce using rule 26 (var2 -> ID setCurrentID addValueVarT var3 .)
    INT             reduce using rule 26 (var2 -> ID setCurrentID addValueVarT var3 .)
    FLOAT           reduce using rule 26 (var2 -> ID setCurrentID addValueVarT var3 .)
    CHAR            reduce using rule 26 (var2 -> ID setCurrentID addValueVarT var3 .)
    BOOL            reduce using rule 26 (var2 -> ID setCurrentID addValueVarT var3 .)


state 141

    (27) var2 -> ID setCurrentID addValueVarT LBRACKET . CTE_I RBRACKET var3
    (28) var2 -> ID setCurrentID addValueVarT LBRACKET . CTE_I RBRACKET LBRACKET CTE_I RBRACKET var3

    CTE_I           shift and go to state 174


state 142

    (29) var3 -> COMMA . var2
    (26) var2 -> . ID setCurrentID addValueVarT var3
    (27) var2 -> . ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET var3
    (28) var2 -> . ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET LBRACKET CTE_I RBRACKET var3

    ID              shift and go to state 55

    var2                           shift and go to state 175

state 143

    (30) var3 -> SEMI . var
    (31) var3 -> SEMI .
    (25) var -> . tipo COLON var2
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . BOOL

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    ATRIBUTOS       reduce using rule 31 (var3 -> SEMI .)
    METODOS         reduce using rule 31 (var3 -> SEMI .)
    PRINCIPAL       reduce using rule 31 (var3 -> SEMI .)
    ID              reduce using rule 31 (var3 -> SEMI .)
    LEE             reduce using rule 31 (var3 -> SEMI .)
    ESCRIBIR        reduce using rule 31 (var3 -> SEMI .)
    IF              reduce using rule 31 (var3 -> SEMI .)
    WHILE           reduce using rule 31 (var3 -> SEMI .)
    DO              reduce using rule 31 (var3 -> SEMI .)
    FOR             reduce using rule 31 (var3 -> SEMI .)
    VOID            reduce using rule 31 (var3 -> SEMI .)
    RETURN          reduce using rule 31 (var3 -> SEMI .)
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    BOOL            shift and go to state 24

  ! INT             [ reduce using rule 31 (var3 -> SEMI .) ]
  ! FLOAT           [ reduce using rule 31 (var3 -> SEMI .) ]
  ! CHAR            [ reduce using rule 31 (var3 -> SEMI .) ]
  ! BOOL            [ reduce using rule 31 (var3 -> SEMI .) ]

    var                            shift and go to state 176
    tipo                           shift and go to state 28

state 144

    (14) funciones2 -> FUNCION ID addDir LPAREN addDir parametros . RPAREN addParamCount LBRACES addContF atributos funciones3
    (15) funciones2 -> FUNCION ID addDir LPAREN addDir parametros . RPAREN addParamCount LBRACES addContF funciones3
    (16) funciones2 -> FUNCION ID addDir LPAREN addDir parametros . RPAREN addParamCount LBRACES var addContF funciones3

    RPAREN          shift and go to state 177


state 145

    (20) parametros -> tipo . ID setCurrentID addValueVarT newParamType COMMA parametros
    (21) parametros -> tipo . ID setCurrentID addValueVarT newParamType

    ID              shift and go to state 178


state 146

    (76) asigna -> ID EQUALS asignarid exp SEMI .

    ID              reduce using rule 76 (asigna -> ID EQUALS asignarid exp SEMI .)
    LEE             reduce using rule 76 (asigna -> ID EQUALS asignarid exp SEMI .)
    ESCRIBIR        reduce using rule 76 (asigna -> ID EQUALS asignarid exp SEMI .)
    IF              reduce using rule 76 (asigna -> ID EQUALS asignarid exp SEMI .)
    WHILE           reduce using rule 76 (asigna -> ID EQUALS asignarid exp SEMI .)
    DO              reduce using rule 76 (asigna -> ID EQUALS asignarid exp SEMI .)
    FOR             reduce using rule 76 (asigna -> ID EQUALS asignarid exp SEMI .)
    VOID            reduce using rule 76 (asigna -> ID EQUALS asignarid exp SEMI .)
    RETURN          reduce using rule 76 (asigna -> ID EQUALS asignarid exp SEMI .)
    INT             reduce using rule 76 (asigna -> ID EQUALS asignarid exp SEMI .)
    FLOAT           reduce using rule 76 (asigna -> ID EQUALS asignarid exp SEMI .)
    CHAR            reduce using rule 76 (asigna -> ID EQUALS asignarid exp SEMI .)
    BOOL            reduce using rule 76 (asigna -> ID EQUALS asignarid exp SEMI .)
    RPAREN          reduce using rule 76 (asigna -> ID EQUALS asignarid exp SEMI .)
    RBRACES         reduce using rule 76 (asigna -> ID EQUALS asignarid exp SEMI .)


state 147

    (77) llamada -> ID callFunc LPAREN exp genParameter . llamada2
    (79) llamada2 -> . COMMA paramCounter exp genParameter llamada2
    (80) llamada2 -> . verLastParam RPAREN
    (133) verLastParam -> .

    COMMA           shift and go to state 180
    RPAREN          reduce using rule 133 (verLastParam -> .)

    llamada2                       shift and go to state 179
    verLastParam                   shift and go to state 181

state 148

    (57) f -> LPAREN addFakeBottom exp . RPAREN popFakeBottom
    (37) exp -> exp . addOL exp
    (104) addOL -> . LOR
    (105) addOL -> . LAND

    RPAREN          shift and go to state 182
    LOR             shift and go to state 106
    LAND            shift and go to state 107

    addOL                          shift and go to state 105

state 149

    (81) lee -> LEE LPAREN exp cuadlee lee2 .

    ID              reduce using rule 81 (lee -> LEE LPAREN exp cuadlee lee2 .)
    LEE             reduce using rule 81 (lee -> LEE LPAREN exp cuadlee lee2 .)
    ESCRIBIR        reduce using rule 81 (lee -> LEE LPAREN exp cuadlee lee2 .)
    IF              reduce using rule 81 (lee -> LEE LPAREN exp cuadlee lee2 .)
    WHILE           reduce using rule 81 (lee -> LEE LPAREN exp cuadlee lee2 .)
    DO              reduce using rule 81 (lee -> LEE LPAREN exp cuadlee lee2 .)
    FOR             reduce using rule 81 (lee -> LEE LPAREN exp cuadlee lee2 .)
    VOID            reduce using rule 81 (lee -> LEE LPAREN exp cuadlee lee2 .)
    RETURN          reduce using rule 81 (lee -> LEE LPAREN exp cuadlee lee2 .)
    INT             reduce using rule 81 (lee -> LEE LPAREN exp cuadlee lee2 .)
    FLOAT           reduce using rule 81 (lee -> LEE LPAREN exp cuadlee lee2 .)
    CHAR            reduce using rule 81 (lee -> LEE LPAREN exp cuadlee lee2 .)
    BOOL            reduce using rule 81 (lee -> LEE LPAREN exp cuadlee lee2 .)
    RPAREN          reduce using rule 81 (lee -> LEE LPAREN exp cuadlee lee2 .)
    RBRACES         reduce using rule 81 (lee -> LEE LPAREN exp cuadlee lee2 .)


state 150

    (82) lee2 -> COMMA . exp cuadlee lee2
    (36) exp -> . texp checarexp
    (37) exp -> . exp addOL exp
    (38) texp -> . gexp checarexp
    (39) texp -> . texp addOL texp
    (40) gexp -> . mexp checarexp
    (41) gexp -> . gexp gexp2 gexp
    (48) mexp -> . t checarexp
    (49) mexp -> . mexp mexp2
    (52) t -> . f checarexp
    (53) t -> . t t2
    (57) f -> . LPAREN addFakeBottom exp RPAREN popFakeBottom
    (58) f -> . CTE_I addIntType
    (59) f -> . CTE_F addFloatType
    (60) f -> . CTE_S addCharType
    (61) f -> . TRUE addBoolType
    (62) f -> . FALSE addBoolType
    (63) f -> . llamada
    (64) f -> . ID
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2

    LPAREN          shift and go to state 78
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    ID              shift and go to state 91

    exp                            shift and go to state 183
    texp                           shift and go to state 80
    gexp                           shift and go to state 81
    mexp                           shift and go to state 82
    t                              shift and go to state 83
    f                              shift and go to state 84
    llamada                        shift and go to state 90

state 151

    (83) lee2 -> RPAREN .

    ID              reduce using rule 83 (lee2 -> RPAREN .)
    LEE             reduce using rule 83 (lee2 -> RPAREN .)
    ESCRIBIR        reduce using rule 83 (lee2 -> RPAREN .)
    IF              reduce using rule 83 (lee2 -> RPAREN .)
    WHILE           reduce using rule 83 (lee2 -> RPAREN .)
    DO              reduce using rule 83 (lee2 -> RPAREN .)
    FOR             reduce using rule 83 (lee2 -> RPAREN .)
    VOID            reduce using rule 83 (lee2 -> RPAREN .)
    RETURN          reduce using rule 83 (lee2 -> RPAREN .)
    INT             reduce using rule 83 (lee2 -> RPAREN .)
    FLOAT           reduce using rule 83 (lee2 -> RPAREN .)
    CHAR            reduce using rule 83 (lee2 -> RPAREN .)
    BOOL            reduce using rule 83 (lee2 -> RPAREN .)
    RPAREN          reduce using rule 83 (lee2 -> RPAREN .)
    RBRACES         reduce using rule 83 (lee2 -> RPAREN .)


state 152

    (37) exp -> exp addOL exp .
    (37) exp -> exp . addOL exp
    (104) addOL -> . LOR
    (105) addOL -> . LAND

  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
    COMMA           reduce using rule 37 (exp -> exp addOL exp .)
    RPAREN          reduce using rule 37 (exp -> exp addOL exp .)
    SEMI            reduce using rule 37 (exp -> exp addOL exp .)
    TO              reduce using rule 37 (exp -> exp addOL exp .)
    DO              reduce using rule 37 (exp -> exp addOL exp .)
    LOR             shift and go to state 106
    LAND            shift and go to state 107

  ! LOR             [ reduce using rule 37 (exp -> exp addOL exp .) ]
  ! LAND            [ reduce using rule 37 (exp -> exp addOL exp .) ]

    addOL                          shift and go to state 105

state 153

    (39) texp -> texp addOL texp .
    (39) texp -> texp . addOL texp
    (104) addOL -> . LOR
    (105) addOL -> . LAND

  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
    COMMA           reduce using rule 39 (texp -> texp addOL texp .)
    RPAREN          reduce using rule 39 (texp -> texp addOL texp .)
    SEMI            reduce using rule 39 (texp -> texp addOL texp .)
    TO              reduce using rule 39 (texp -> texp addOL texp .)
    DO              reduce using rule 39 (texp -> texp addOL texp .)
    LOR             shift and go to state 106
    LAND            shift and go to state 107

  ! LOR             [ reduce using rule 39 (texp -> texp addOL texp .) ]
  ! LAND            [ reduce using rule 39 (texp -> texp addOL texp .) ]

    addOL                          shift and go to state 109

state 154

    (41) gexp -> gexp gexp2 gexp .
    (41) gexp -> gexp . gexp2 gexp
    (42) gexp2 -> . LT addO
    (43) gexp2 -> . LE addO
    (44) gexp2 -> . GT addO
    (45) gexp2 -> . GE addO
    (46) gexp2 -> . EQ addO
    (47) gexp2 -> . NE addO

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    LOR             reduce using rule 41 (gexp -> gexp gexp2 gexp .)
    LAND            reduce using rule 41 (gexp -> gexp gexp2 gexp .)
    COMMA           reduce using rule 41 (gexp -> gexp gexp2 gexp .)
    RPAREN          reduce using rule 41 (gexp -> gexp gexp2 gexp .)
    SEMI            reduce using rule 41 (gexp -> gexp gexp2 gexp .)
    TO              reduce using rule 41 (gexp -> gexp gexp2 gexp .)
    DO              reduce using rule 41 (gexp -> gexp gexp2 gexp .)
    LT              shift and go to state 112
    LE              shift and go to state 113
    GT              shift and go to state 114
    GE              shift and go to state 115
    EQ              shift and go to state 116
    NE              shift and go to state 117

  ! LT              [ reduce using rule 41 (gexp -> gexp gexp2 gexp .) ]
  ! LE              [ reduce using rule 41 (gexp -> gexp gexp2 gexp .) ]
  ! GT              [ reduce using rule 41 (gexp -> gexp gexp2 gexp .) ]
  ! GE              [ reduce using rule 41 (gexp -> gexp gexp2 gexp .) ]
  ! EQ              [ reduce using rule 41 (gexp -> gexp gexp2 gexp .) ]
  ! NE              [ reduce using rule 41 (gexp -> gexp gexp2 gexp .) ]

    gexp2                          shift and go to state 111

state 155

    (42) gexp2 -> LT addO .

    LPAREN          reduce using rule 42 (gexp2 -> LT addO .)
    CTE_I           reduce using rule 42 (gexp2 -> LT addO .)
    CTE_F           reduce using rule 42 (gexp2 -> LT addO .)
    CTE_S           reduce using rule 42 (gexp2 -> LT addO .)
    TRUE            reduce using rule 42 (gexp2 -> LT addO .)
    FALSE           reduce using rule 42 (gexp2 -> LT addO .)
    ID              reduce using rule 42 (gexp2 -> LT addO .)


state 156

    (43) gexp2 -> LE addO .

    LPAREN          reduce using rule 43 (gexp2 -> LE addO .)
    CTE_I           reduce using rule 43 (gexp2 -> LE addO .)
    CTE_F           reduce using rule 43 (gexp2 -> LE addO .)
    CTE_S           reduce using rule 43 (gexp2 -> LE addO .)
    TRUE            reduce using rule 43 (gexp2 -> LE addO .)
    FALSE           reduce using rule 43 (gexp2 -> LE addO .)
    ID              reduce using rule 43 (gexp2 -> LE addO .)


state 157

    (44) gexp2 -> GT addO .

    LPAREN          reduce using rule 44 (gexp2 -> GT addO .)
    CTE_I           reduce using rule 44 (gexp2 -> GT addO .)
    CTE_F           reduce using rule 44 (gexp2 -> GT addO .)
    CTE_S           reduce using rule 44 (gexp2 -> GT addO .)
    TRUE            reduce using rule 44 (gexp2 -> GT addO .)
    FALSE           reduce using rule 44 (gexp2 -> GT addO .)
    ID              reduce using rule 44 (gexp2 -> GT addO .)


state 158

    (45) gexp2 -> GE addO .

    LPAREN          reduce using rule 45 (gexp2 -> GE addO .)
    CTE_I           reduce using rule 45 (gexp2 -> GE addO .)
    CTE_F           reduce using rule 45 (gexp2 -> GE addO .)
    CTE_S           reduce using rule 45 (gexp2 -> GE addO .)
    TRUE            reduce using rule 45 (gexp2 -> GE addO .)
    FALSE           reduce using rule 45 (gexp2 -> GE addO .)
    ID              reduce using rule 45 (gexp2 -> GE addO .)


state 159

    (46) gexp2 -> EQ addO .

    LPAREN          reduce using rule 46 (gexp2 -> EQ addO .)
    CTE_I           reduce using rule 46 (gexp2 -> EQ addO .)
    CTE_F           reduce using rule 46 (gexp2 -> EQ addO .)
    CTE_S           reduce using rule 46 (gexp2 -> EQ addO .)
    TRUE            reduce using rule 46 (gexp2 -> EQ addO .)
    FALSE           reduce using rule 46 (gexp2 -> EQ addO .)
    ID              reduce using rule 46 (gexp2 -> EQ addO .)


state 160

    (47) gexp2 -> NE addO .

    LPAREN          reduce using rule 47 (gexp2 -> NE addO .)
    CTE_I           reduce using rule 47 (gexp2 -> NE addO .)
    CTE_F           reduce using rule 47 (gexp2 -> NE addO .)
    CTE_S           reduce using rule 47 (gexp2 -> NE addO .)
    TRUE            reduce using rule 47 (gexp2 -> NE addO .)
    FALSE           reduce using rule 47 (gexp2 -> NE addO .)
    ID              reduce using rule 47 (gexp2 -> NE addO .)


state 161

    (50) mexp2 -> PLUS addO . mexp
    (48) mexp -> . t checarexp
    (49) mexp -> . mexp mexp2
    (52) t -> . f checarexp
    (53) t -> . t t2
    (57) f -> . LPAREN addFakeBottom exp RPAREN popFakeBottom
    (58) f -> . CTE_I addIntType
    (59) f -> . CTE_F addFloatType
    (60) f -> . CTE_S addCharType
    (61) f -> . TRUE addBoolType
    (62) f -> . FALSE addBoolType
    (63) f -> . llamada
    (64) f -> . ID
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2

    LPAREN          shift and go to state 78
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    ID              shift and go to state 91

    mexp                           shift and go to state 184
    t                              shift and go to state 83
    f                              shift and go to state 84
    llamada                        shift and go to state 90

state 162

    (51) mexp2 -> MINUS addO . mexp
    (48) mexp -> . t checarexp
    (49) mexp -> . mexp mexp2
    (52) t -> . f checarexp
    (53) t -> . t t2
    (57) f -> . LPAREN addFakeBottom exp RPAREN popFakeBottom
    (58) f -> . CTE_I addIntType
    (59) f -> . CTE_F addFloatType
    (60) f -> . CTE_S addCharType
    (61) f -> . TRUE addBoolType
    (62) f -> . FALSE addBoolType
    (63) f -> . llamada
    (64) f -> . ID
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2

    LPAREN          shift and go to state 78
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    ID              shift and go to state 91

    mexp                           shift and go to state 185
    t                              shift and go to state 83
    f                              shift and go to state 84
    llamada                        shift and go to state 90

state 163

    (54) t2 -> MULT addO . t
    (52) t -> . f checarexp
    (53) t -> . t t2
    (57) f -> . LPAREN addFakeBottom exp RPAREN popFakeBottom
    (58) f -> . CTE_I addIntType
    (59) f -> . CTE_F addFloatType
    (60) f -> . CTE_S addCharType
    (61) f -> . TRUE addBoolType
    (62) f -> . FALSE addBoolType
    (63) f -> . llamada
    (64) f -> . ID
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2

    LPAREN          shift and go to state 78
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    ID              shift and go to state 91

    t                              shift and go to state 186
    f                              shift and go to state 84
    llamada                        shift and go to state 90

state 164

    (55) t2 -> DIV addO . t
    (52) t -> . f checarexp
    (53) t -> . t t2
    (57) f -> . LPAREN addFakeBottom exp RPAREN popFakeBottom
    (58) f -> . CTE_I addIntType
    (59) f -> . CTE_F addFloatType
    (60) f -> . CTE_S addCharType
    (61) f -> . TRUE addBoolType
    (62) f -> . FALSE addBoolType
    (63) f -> . llamada
    (64) f -> . ID
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2

    LPAREN          shift and go to state 78
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    ID              shift and go to state 91

    t                              shift and go to state 187
    f                              shift and go to state 84
    llamada                        shift and go to state 90

state 165

    (56) t2 -> MOD addO . t
    (52) t -> . f checarexp
    (53) t -> . t t2
    (57) f -> . LPAREN addFakeBottom exp RPAREN popFakeBottom
    (58) f -> . CTE_I addIntType
    (59) f -> . CTE_F addFloatType
    (60) f -> . CTE_S addCharType
    (61) f -> . TRUE addBoolType
    (62) f -> . FALSE addBoolType
    (63) f -> . llamada
    (64) f -> . ID
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2

    LPAREN          shift and go to state 78
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    ID              shift and go to state 91

    t                              shift and go to state 188
    f                              shift and go to state 84
    llamada                        shift and go to state 90

state 166

    (84) escribe -> ESCRIBIR LPAREN exp cuadprint escribe2 .

    ID              reduce using rule 84 (escribe -> ESCRIBIR LPAREN exp cuadprint escribe2 .)
    LEE             reduce using rule 84 (escribe -> ESCRIBIR LPAREN exp cuadprint escribe2 .)
    ESCRIBIR        reduce using rule 84 (escribe -> ESCRIBIR LPAREN exp cuadprint escribe2 .)
    IF              reduce using rule 84 (escribe -> ESCRIBIR LPAREN exp cuadprint escribe2 .)
    WHILE           reduce using rule 84 (escribe -> ESCRIBIR LPAREN exp cuadprint escribe2 .)
    DO              reduce using rule 84 (escribe -> ESCRIBIR LPAREN exp cuadprint escribe2 .)
    FOR             reduce using rule 84 (escribe -> ESCRIBIR LPAREN exp cuadprint escribe2 .)
    VOID            reduce using rule 84 (escribe -> ESCRIBIR LPAREN exp cuadprint escribe2 .)
    RETURN          reduce using rule 84 (escribe -> ESCRIBIR LPAREN exp cuadprint escribe2 .)
    INT             reduce using rule 84 (escribe -> ESCRIBIR LPAREN exp cuadprint escribe2 .)
    FLOAT           reduce using rule 84 (escribe -> ESCRIBIR LPAREN exp cuadprint escribe2 .)
    CHAR            reduce using rule 84 (escribe -> ESCRIBIR LPAREN exp cuadprint escribe2 .)
    BOOL            reduce using rule 84 (escribe -> ESCRIBIR LPAREN exp cuadprint escribe2 .)
    RPAREN          reduce using rule 84 (escribe -> ESCRIBIR LPAREN exp cuadprint escribe2 .)
    RBRACES         reduce using rule 84 (escribe -> ESCRIBIR LPAREN exp cuadprint escribe2 .)


state 167

    (85) escribe2 -> COMMA . exp cuadprint escribe2
    (36) exp -> . texp checarexp
    (37) exp -> . exp addOL exp
    (38) texp -> . gexp checarexp
    (39) texp -> . texp addOL texp
    (40) gexp -> . mexp checarexp
    (41) gexp -> . gexp gexp2 gexp
    (48) mexp -> . t checarexp
    (49) mexp -> . mexp mexp2
    (52) t -> . f checarexp
    (53) t -> . t t2
    (57) f -> . LPAREN addFakeBottom exp RPAREN popFakeBottom
    (58) f -> . CTE_I addIntType
    (59) f -> . CTE_F addFloatType
    (60) f -> . CTE_S addCharType
    (61) f -> . TRUE addBoolType
    (62) f -> . FALSE addBoolType
    (63) f -> . llamada
    (64) f -> . ID
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2

    LPAREN          shift and go to state 78
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    ID              shift and go to state 91

    exp                            shift and go to state 189
    texp                           shift and go to state 80
    gexp                           shift and go to state 81
    mexp                           shift and go to state 82
    t                              shift and go to state 83
    f                              shift and go to state 84
    llamada                        shift and go to state 90

state 168

    (86) escribe2 -> RPAREN .

    ID              reduce using rule 86 (escribe2 -> RPAREN .)
    LEE             reduce using rule 86 (escribe2 -> RPAREN .)
    ESCRIBIR        reduce using rule 86 (escribe2 -> RPAREN .)
    IF              reduce using rule 86 (escribe2 -> RPAREN .)
    WHILE           reduce using rule 86 (escribe2 -> RPAREN .)
    DO              reduce using rule 86 (escribe2 -> RPAREN .)
    FOR             reduce using rule 86 (escribe2 -> RPAREN .)
    VOID            reduce using rule 86 (escribe2 -> RPAREN .)
    RETURN          reduce using rule 86 (escribe2 -> RPAREN .)
    INT             reduce using rule 86 (escribe2 -> RPAREN .)
    FLOAT           reduce using rule 86 (escribe2 -> RPAREN .)
    CHAR            reduce using rule 86 (escribe2 -> RPAREN .)
    BOOL            reduce using rule 86 (escribe2 -> RPAREN .)
    RPAREN          reduce using rule 86 (escribe2 -> RPAREN .)
    RBRACES         reduce using rule 86 (escribe2 -> RPAREN .)


state 169

    (88) condicion2 -> LPAREN exp RPAREN genGTF . condicion3 ELSEIF genElse condicion2
    (89) condicion2 -> LPAREN exp RPAREN genGTF . condicion3 ELSE genElse condicion3
    (90) condicion2 -> LPAREN exp RPAREN genGTF . condicion3
    (91) condicion3 -> . LBRACES estatutos fillGoto RBRACES

    LBRACES         shift and go to state 191

    condicion3                     shift and go to state 190

state 170

    (92) ciclow -> WHILE storeWhile LPAREN exp RPAREN . genGTF DO LBRACES estatutos RBRACES fillWhile
    (118) genGTF -> .

    DO              reduce using rule 118 (genGTF -> .)

    genGTF                         shift and go to state 192

state 171

    (93) ciclow -> DO storeWhile LBRACES estatutos RBRACES . WHILE LPAREN exp RPAREN genDoWhile

    WHILE           shift and go to state 193


state 172

    (97) ciclof3 -> ID addForId EQUALS exp . genFor TO exp compFor DO LBRACES estatutos RBRACES actFor
    (37) exp -> exp . addOL exp
    (125) genFor -> .
    (104) addOL -> . LOR
    (105) addOL -> . LAND

    TO              reduce using rule 125 (genFor -> .)
    LOR             shift and go to state 106
    LAND            shift and go to state 107

    genFor                         shift and go to state 194
    addOL                          shift and go to state 105

state 173

    (23) retornar2 -> exp cuadRetornar . COMMA retornar2
    (24) retornar2 -> exp cuadRetornar . RPAREN

    COMMA           shift and go to state 195
    RPAREN          shift and go to state 196


state 174

    (27) var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I . RBRACKET var3
    (28) var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I . RBRACKET LBRACKET CTE_I RBRACKET var3

    RBRACKET        shift and go to state 197


state 175

    (29) var3 -> COMMA var2 .

    ATRIBUTOS       reduce using rule 29 (var3 -> COMMA var2 .)
    METODOS         reduce using rule 29 (var3 -> COMMA var2 .)
    PRINCIPAL       reduce using rule 29 (var3 -> COMMA var2 .)
    ID              reduce using rule 29 (var3 -> COMMA var2 .)
    LEE             reduce using rule 29 (var3 -> COMMA var2 .)
    ESCRIBIR        reduce using rule 29 (var3 -> COMMA var2 .)
    IF              reduce using rule 29 (var3 -> COMMA var2 .)
    WHILE           reduce using rule 29 (var3 -> COMMA var2 .)
    DO              reduce using rule 29 (var3 -> COMMA var2 .)
    FOR             reduce using rule 29 (var3 -> COMMA var2 .)
    VOID            reduce using rule 29 (var3 -> COMMA var2 .)
    RETURN          reduce using rule 29 (var3 -> COMMA var2 .)
    INT             reduce using rule 29 (var3 -> COMMA var2 .)
    FLOAT           reduce using rule 29 (var3 -> COMMA var2 .)
    CHAR            reduce using rule 29 (var3 -> COMMA var2 .)
    BOOL            reduce using rule 29 (var3 -> COMMA var2 .)


state 176

    (30) var3 -> SEMI var .

    ATRIBUTOS       reduce using rule 30 (var3 -> SEMI var .)
    METODOS         reduce using rule 30 (var3 -> SEMI var .)
    PRINCIPAL       reduce using rule 30 (var3 -> SEMI var .)
    ID              reduce using rule 30 (var3 -> SEMI var .)
    LEE             reduce using rule 30 (var3 -> SEMI var .)
    ESCRIBIR        reduce using rule 30 (var3 -> SEMI var .)
    IF              reduce using rule 30 (var3 -> SEMI var .)
    WHILE           reduce using rule 30 (var3 -> SEMI var .)
    DO              reduce using rule 30 (var3 -> SEMI var .)
    FOR             reduce using rule 30 (var3 -> SEMI var .)
    VOID            reduce using rule 30 (var3 -> SEMI var .)
    RETURN          reduce using rule 30 (var3 -> SEMI var .)
    INT             reduce using rule 30 (var3 -> SEMI var .)
    FLOAT           reduce using rule 30 (var3 -> SEMI var .)
    CHAR            reduce using rule 30 (var3 -> SEMI var .)
    BOOL            reduce using rule 30 (var3 -> SEMI var .)


state 177

    (14) funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN . addParamCount LBRACES addContF atributos funciones3
    (15) funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN . addParamCount LBRACES addContF funciones3
    (16) funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN . addParamCount LBRACES var addContF funciones3
    (129) addParamCount -> .

    LBRACES         reduce using rule 129 (addParamCount -> .)

    addParamCount                  shift and go to state 198

state 178

    (20) parametros -> tipo ID . setCurrentID addValueVarT newParamType COMMA parametros
    (21) parametros -> tipo ID . setCurrentID addValueVarT newParamType
    (99) setCurrentID -> .

    COMMA           reduce using rule 99 (setCurrentID -> .)
    RPAREN          reduce using rule 99 (setCurrentID -> .)

    setCurrentID                   shift and go to state 199

state 179

    (77) llamada -> ID callFunc LPAREN exp genParameter llamada2 .

    ID              reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    LEE             reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    ESCRIBIR        reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    IF              reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    WHILE           reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    DO              reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    FOR             reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    VOID            reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    RETURN          reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    INT             reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    FLOAT           reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    CHAR            reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    BOOL            reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    RPAREN          reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    RBRACES         reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    MULT            reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    DIV             reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    MOD             reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    PLUS            reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    MINUS           reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    LT              reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    LE              reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    GT              reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    GE              reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    EQ              reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    NE              reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    LOR             reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    LAND            reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    COMMA           reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    SEMI            reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)
    TO              reduce using rule 77 (llamada -> ID callFunc LPAREN exp genParameter llamada2 .)


state 180

    (79) llamada2 -> COMMA . paramCounter exp genParameter llamada2
    (132) paramCounter -> .

    LPAREN          reduce using rule 132 (paramCounter -> .)
    CTE_I           reduce using rule 132 (paramCounter -> .)
    CTE_F           reduce using rule 132 (paramCounter -> .)
    CTE_S           reduce using rule 132 (paramCounter -> .)
    TRUE            reduce using rule 132 (paramCounter -> .)
    FALSE           reduce using rule 132 (paramCounter -> .)
    ID              reduce using rule 132 (paramCounter -> .)

    paramCounter                   shift and go to state 200

state 181

    (80) llamada2 -> verLastParam . RPAREN

    RPAREN          shift and go to state 201


state 182

    (57) f -> LPAREN addFakeBottom exp RPAREN . popFakeBottom
    (102) popFakeBottom -> .

    MULT            reduce using rule 102 (popFakeBottom -> .)
    DIV             reduce using rule 102 (popFakeBottom -> .)
    MOD             reduce using rule 102 (popFakeBottom -> .)
    PLUS            reduce using rule 102 (popFakeBottom -> .)
    MINUS           reduce using rule 102 (popFakeBottom -> .)
    LT              reduce using rule 102 (popFakeBottom -> .)
    LE              reduce using rule 102 (popFakeBottom -> .)
    GT              reduce using rule 102 (popFakeBottom -> .)
    GE              reduce using rule 102 (popFakeBottom -> .)
    EQ              reduce using rule 102 (popFakeBottom -> .)
    NE              reduce using rule 102 (popFakeBottom -> .)
    LOR             reduce using rule 102 (popFakeBottom -> .)
    LAND            reduce using rule 102 (popFakeBottom -> .)
    COMMA           reduce using rule 102 (popFakeBottom -> .)
    RPAREN          reduce using rule 102 (popFakeBottom -> .)
    SEMI            reduce using rule 102 (popFakeBottom -> .)
    TO              reduce using rule 102 (popFakeBottom -> .)
    DO              reduce using rule 102 (popFakeBottom -> .)

    popFakeBottom                  shift and go to state 202

state 183

    (82) lee2 -> COMMA exp . cuadlee lee2
    (37) exp -> exp . addOL exp
    (115) cuadlee -> .
    (104) addOL -> . LOR
    (105) addOL -> . LAND

    COMMA           reduce using rule 115 (cuadlee -> .)
    RPAREN          reduce using rule 115 (cuadlee -> .)
    LOR             shift and go to state 106
    LAND            shift and go to state 107

    cuadlee                        shift and go to state 203
    addOL                          shift and go to state 105

state 184

    (50) mexp2 -> PLUS addO mexp .
    (49) mexp -> mexp . mexp2
    (50) mexp2 -> . PLUS addO mexp
    (51) mexp2 -> . MINUS addO mexp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    LT              reduce using rule 50 (mexp2 -> PLUS addO mexp .)
    LE              reduce using rule 50 (mexp2 -> PLUS addO mexp .)
    GT              reduce using rule 50 (mexp2 -> PLUS addO mexp .)
    GE              reduce using rule 50 (mexp2 -> PLUS addO mexp .)
    EQ              reduce using rule 50 (mexp2 -> PLUS addO mexp .)
    NE              reduce using rule 50 (mexp2 -> PLUS addO mexp .)
    LOR             reduce using rule 50 (mexp2 -> PLUS addO mexp .)
    LAND            reduce using rule 50 (mexp2 -> PLUS addO mexp .)
    COMMA           reduce using rule 50 (mexp2 -> PLUS addO mexp .)
    RPAREN          reduce using rule 50 (mexp2 -> PLUS addO mexp .)
    SEMI            reduce using rule 50 (mexp2 -> PLUS addO mexp .)
    TO              reduce using rule 50 (mexp2 -> PLUS addO mexp .)
    DO              reduce using rule 50 (mexp2 -> PLUS addO mexp .)
    PLUS            shift and go to state 120
    MINUS           shift and go to state 121

  ! PLUS            [ reduce using rule 50 (mexp2 -> PLUS addO mexp .) ]
  ! MINUS           [ reduce using rule 50 (mexp2 -> PLUS addO mexp .) ]

    mexp2                          shift and go to state 119

state 185

    (51) mexp2 -> MINUS addO mexp .
    (49) mexp -> mexp . mexp2
    (50) mexp2 -> . PLUS addO mexp
    (51) mexp2 -> . MINUS addO mexp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    LT              reduce using rule 51 (mexp2 -> MINUS addO mexp .)
    LE              reduce using rule 51 (mexp2 -> MINUS addO mexp .)
    GT              reduce using rule 51 (mexp2 -> MINUS addO mexp .)
    GE              reduce using rule 51 (mexp2 -> MINUS addO mexp .)
    EQ              reduce using rule 51 (mexp2 -> MINUS addO mexp .)
    NE              reduce using rule 51 (mexp2 -> MINUS addO mexp .)
    LOR             reduce using rule 51 (mexp2 -> MINUS addO mexp .)
    LAND            reduce using rule 51 (mexp2 -> MINUS addO mexp .)
    COMMA           reduce using rule 51 (mexp2 -> MINUS addO mexp .)
    RPAREN          reduce using rule 51 (mexp2 -> MINUS addO mexp .)
    SEMI            reduce using rule 51 (mexp2 -> MINUS addO mexp .)
    TO              reduce using rule 51 (mexp2 -> MINUS addO mexp .)
    DO              reduce using rule 51 (mexp2 -> MINUS addO mexp .)
    PLUS            shift and go to state 120
    MINUS           shift and go to state 121

  ! PLUS            [ reduce using rule 51 (mexp2 -> MINUS addO mexp .) ]
  ! MINUS           [ reduce using rule 51 (mexp2 -> MINUS addO mexp .) ]

    mexp2                          shift and go to state 119

state 186

    (54) t2 -> MULT addO t .
    (53) t -> t . t2
    (54) t2 -> . MULT addO t
    (55) t2 -> . DIV addO t
    (56) t2 -> . MOD addO t

  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PLUS            reduce using rule 54 (t2 -> MULT addO t .)
    MINUS           reduce using rule 54 (t2 -> MULT addO t .)
    LT              reduce using rule 54 (t2 -> MULT addO t .)
    LE              reduce using rule 54 (t2 -> MULT addO t .)
    GT              reduce using rule 54 (t2 -> MULT addO t .)
    GE              reduce using rule 54 (t2 -> MULT addO t .)
    EQ              reduce using rule 54 (t2 -> MULT addO t .)
    NE              reduce using rule 54 (t2 -> MULT addO t .)
    LOR             reduce using rule 54 (t2 -> MULT addO t .)
    LAND            reduce using rule 54 (t2 -> MULT addO t .)
    COMMA           reduce using rule 54 (t2 -> MULT addO t .)
    RPAREN          reduce using rule 54 (t2 -> MULT addO t .)
    SEMI            reduce using rule 54 (t2 -> MULT addO t .)
    TO              reduce using rule 54 (t2 -> MULT addO t .)
    DO              reduce using rule 54 (t2 -> MULT addO t .)
    MULT            shift and go to state 124
    DIV             shift and go to state 125
    MOD             shift and go to state 126

  ! MULT            [ reduce using rule 54 (t2 -> MULT addO t .) ]
  ! DIV             [ reduce using rule 54 (t2 -> MULT addO t .) ]
  ! MOD             [ reduce using rule 54 (t2 -> MULT addO t .) ]

    t2                             shift and go to state 123

state 187

    (55) t2 -> DIV addO t .
    (53) t -> t . t2
    (54) t2 -> . MULT addO t
    (55) t2 -> . DIV addO t
    (56) t2 -> . MOD addO t

  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PLUS            reduce using rule 55 (t2 -> DIV addO t .)
    MINUS           reduce using rule 55 (t2 -> DIV addO t .)
    LT              reduce using rule 55 (t2 -> DIV addO t .)
    LE              reduce using rule 55 (t2 -> DIV addO t .)
    GT              reduce using rule 55 (t2 -> DIV addO t .)
    GE              reduce using rule 55 (t2 -> DIV addO t .)
    EQ              reduce using rule 55 (t2 -> DIV addO t .)
    NE              reduce using rule 55 (t2 -> DIV addO t .)
    LOR             reduce using rule 55 (t2 -> DIV addO t .)
    LAND            reduce using rule 55 (t2 -> DIV addO t .)
    COMMA           reduce using rule 55 (t2 -> DIV addO t .)
    RPAREN          reduce using rule 55 (t2 -> DIV addO t .)
    SEMI            reduce using rule 55 (t2 -> DIV addO t .)
    TO              reduce using rule 55 (t2 -> DIV addO t .)
    DO              reduce using rule 55 (t2 -> DIV addO t .)
    MULT            shift and go to state 124
    DIV             shift and go to state 125
    MOD             shift and go to state 126

  ! MULT            [ reduce using rule 55 (t2 -> DIV addO t .) ]
  ! DIV             [ reduce using rule 55 (t2 -> DIV addO t .) ]
  ! MOD             [ reduce using rule 55 (t2 -> DIV addO t .) ]

    t2                             shift and go to state 123

state 188

    (56) t2 -> MOD addO t .
    (53) t -> t . t2
    (54) t2 -> . MULT addO t
    (55) t2 -> . DIV addO t
    (56) t2 -> . MOD addO t

  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PLUS            reduce using rule 56 (t2 -> MOD addO t .)
    MINUS           reduce using rule 56 (t2 -> MOD addO t .)
    LT              reduce using rule 56 (t2 -> MOD addO t .)
    LE              reduce using rule 56 (t2 -> MOD addO t .)
    GT              reduce using rule 56 (t2 -> MOD addO t .)
    GE              reduce using rule 56 (t2 -> MOD addO t .)
    EQ              reduce using rule 56 (t2 -> MOD addO t .)
    NE              reduce using rule 56 (t2 -> MOD addO t .)
    LOR             reduce using rule 56 (t2 -> MOD addO t .)
    LAND            reduce using rule 56 (t2 -> MOD addO t .)
    COMMA           reduce using rule 56 (t2 -> MOD addO t .)
    RPAREN          reduce using rule 56 (t2 -> MOD addO t .)
    SEMI            reduce using rule 56 (t2 -> MOD addO t .)
    TO              reduce using rule 56 (t2 -> MOD addO t .)
    DO              reduce using rule 56 (t2 -> MOD addO t .)
    MULT            shift and go to state 124
    DIV             shift and go to state 125
    MOD             shift and go to state 126

  ! MULT            [ reduce using rule 56 (t2 -> MOD addO t .) ]
  ! DIV             [ reduce using rule 56 (t2 -> MOD addO t .) ]
  ! MOD             [ reduce using rule 56 (t2 -> MOD addO t .) ]

    t2                             shift and go to state 123

state 189

    (85) escribe2 -> COMMA exp . cuadprint escribe2
    (37) exp -> exp . addOL exp
    (114) cuadprint -> .
    (104) addOL -> . LOR
    (105) addOL -> . LAND

    COMMA           reduce using rule 114 (cuadprint -> .)
    RPAREN          reduce using rule 114 (cuadprint -> .)
    LOR             shift and go to state 106
    LAND            shift and go to state 107

    cuadprint                      shift and go to state 204
    addOL                          shift and go to state 105

state 190

    (88) condicion2 -> LPAREN exp RPAREN genGTF condicion3 . ELSEIF genElse condicion2
    (89) condicion2 -> LPAREN exp RPAREN genGTF condicion3 . ELSE genElse condicion3
    (90) condicion2 -> LPAREN exp RPAREN genGTF condicion3 .

    ELSEIF          shift and go to state 205
    ELSE            shift and go to state 206
    ID              reduce using rule 90 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 .)
    LEE             reduce using rule 90 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 .)
    ESCRIBIR        reduce using rule 90 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 .)
    IF              reduce using rule 90 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 .)
    WHILE           reduce using rule 90 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 .)
    DO              reduce using rule 90 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 .)
    FOR             reduce using rule 90 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 .)
    VOID            reduce using rule 90 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 .)
    RETURN          reduce using rule 90 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 .)
    INT             reduce using rule 90 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 .)
    FLOAT           reduce using rule 90 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 .)
    CHAR            reduce using rule 90 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 .)
    BOOL            reduce using rule 90 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 .)
    RPAREN          reduce using rule 90 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 .)
    RBRACES         reduce using rule 90 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 .)


state 191

    (91) condicion3 -> LBRACES . estatutos fillGoto RBRACES
    (65) estatutos -> . estatutos2 estatutos
    (66) estatutos -> . estatutos2
    (67) estatutos2 -> . asigna
    (68) estatutos2 -> . llamada
    (69) estatutos2 -> . lee
    (70) estatutos2 -> . escribe
    (71) estatutos2 -> . condicion
    (72) estatutos2 -> . ciclow
    (73) estatutos2 -> . ciclof
    (74) estatutos2 -> . funciones
    (75) estatutos2 -> . retornar
    (76) asigna -> . ID EQUALS asignarid exp SEMI
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2
    (81) lee -> . LEE LPAREN exp cuadlee lee2
    (84) escribe -> . ESCRIBIR LPAREN exp cuadprint escribe2
    (87) condicion -> . IF condicion2
    (92) ciclow -> . WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile
    (93) ciclow -> . DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile
    (94) ciclof -> . FOR ciclof2
    (12) funciones -> . tipo funciones2
    (13) funciones -> . VOID funciones2
    (22) retornar -> . RETURN returnFlag LPAREN retornar2
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . BOOL

    ID              shift and go to state 46
    LEE             shift and go to state 47
    ESCRIBIR        shift and go to state 48
    IF              shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 51
    FOR             shift and go to state 52
    VOID            shift and go to state 20
    RETURN          shift and go to state 53
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    BOOL            shift and go to state 24

    estatutos                      shift and go to state 207
    estatutos2                     shift and go to state 36
    asigna                         shift and go to state 37
    llamada                        shift and go to state 38
    lee                            shift and go to state 39
    escribe                        shift and go to state 40
    condicion                      shift and go to state 41
    ciclow                         shift and go to state 42
    ciclof                         shift and go to state 43
    funciones                      shift and go to state 44
    retornar                       shift and go to state 45
    tipo                           shift and go to state 19

state 192

    (92) ciclow -> WHILE storeWhile LPAREN exp RPAREN genGTF . DO LBRACES estatutos RBRACES fillWhile

    DO              shift and go to state 208


state 193

    (93) ciclow -> DO storeWhile LBRACES estatutos RBRACES WHILE . LPAREN exp RPAREN genDoWhile

    LPAREN          shift and go to state 209


state 194

    (97) ciclof3 -> ID addForId EQUALS exp genFor . TO exp compFor DO LBRACES estatutos RBRACES actFor

    TO              shift and go to state 210


state 195

    (23) retornar2 -> exp cuadRetornar COMMA . retornar2
    (23) retornar2 -> . exp cuadRetornar COMMA retornar2
    (24) retornar2 -> . exp cuadRetornar RPAREN
    (36) exp -> . texp checarexp
    (37) exp -> . exp addOL exp
    (38) texp -> . gexp checarexp
    (39) texp -> . texp addOL texp
    (40) gexp -> . mexp checarexp
    (41) gexp -> . gexp gexp2 gexp
    (48) mexp -> . t checarexp
    (49) mexp -> . mexp mexp2
    (52) t -> . f checarexp
    (53) t -> . t t2
    (57) f -> . LPAREN addFakeBottom exp RPAREN popFakeBottom
    (58) f -> . CTE_I addIntType
    (59) f -> . CTE_F addFloatType
    (60) f -> . CTE_S addCharType
    (61) f -> . TRUE addBoolType
    (62) f -> . FALSE addBoolType
    (63) f -> . llamada
    (64) f -> . ID
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2

    LPAREN          shift and go to state 78
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    ID              shift and go to state 91

    exp                            shift and go to state 139
    retornar2                      shift and go to state 211
    texp                           shift and go to state 80
    gexp                           shift and go to state 81
    mexp                           shift and go to state 82
    t                              shift and go to state 83
    f                              shift and go to state 84
    llamada                        shift and go to state 90

state 196

    (24) retornar2 -> exp cuadRetornar RPAREN .

    ID              reduce using rule 24 (retornar2 -> exp cuadRetornar RPAREN .)
    LEE             reduce using rule 24 (retornar2 -> exp cuadRetornar RPAREN .)
    ESCRIBIR        reduce using rule 24 (retornar2 -> exp cuadRetornar RPAREN .)
    IF              reduce using rule 24 (retornar2 -> exp cuadRetornar RPAREN .)
    WHILE           reduce using rule 24 (retornar2 -> exp cuadRetornar RPAREN .)
    DO              reduce using rule 24 (retornar2 -> exp cuadRetornar RPAREN .)
    FOR             reduce using rule 24 (retornar2 -> exp cuadRetornar RPAREN .)
    VOID            reduce using rule 24 (retornar2 -> exp cuadRetornar RPAREN .)
    RETURN          reduce using rule 24 (retornar2 -> exp cuadRetornar RPAREN .)
    INT             reduce using rule 24 (retornar2 -> exp cuadRetornar RPAREN .)
    FLOAT           reduce using rule 24 (retornar2 -> exp cuadRetornar RPAREN .)
    CHAR            reduce using rule 24 (retornar2 -> exp cuadRetornar RPAREN .)
    BOOL            reduce using rule 24 (retornar2 -> exp cuadRetornar RPAREN .)
    RPAREN          reduce using rule 24 (retornar2 -> exp cuadRetornar RPAREN .)
    RBRACES         reduce using rule 24 (retornar2 -> exp cuadRetornar RPAREN .)


state 197

    (27) var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET . var3
    (28) var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET . LBRACKET CTE_I RBRACKET var3
    (29) var3 -> . COMMA var2
    (30) var3 -> . SEMI var
    (31) var3 -> . SEMI

    LBRACKET        shift and go to state 212
    COMMA           shift and go to state 142
    SEMI            shift and go to state 143

    var3                           shift and go to state 213

state 198

    (14) funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount . LBRACES addContF atributos funciones3
    (15) funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount . LBRACES addContF funciones3
    (16) funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount . LBRACES var addContF funciones3

    LBRACES         shift and go to state 214


state 199

    (20) parametros -> tipo ID setCurrentID . addValueVarT newParamType COMMA parametros
    (21) parametros -> tipo ID setCurrentID . addValueVarT newParamType
    (100) addValueVarT -> .

    COMMA           reduce using rule 100 (addValueVarT -> .)
    RPAREN          reduce using rule 100 (addValueVarT -> .)

    addValueVarT                   shift and go to state 215

state 200

    (79) llamada2 -> COMMA paramCounter . exp genParameter llamada2
    (36) exp -> . texp checarexp
    (37) exp -> . exp addOL exp
    (38) texp -> . gexp checarexp
    (39) texp -> . texp addOL texp
    (40) gexp -> . mexp checarexp
    (41) gexp -> . gexp gexp2 gexp
    (48) mexp -> . t checarexp
    (49) mexp -> . mexp mexp2
    (52) t -> . f checarexp
    (53) t -> . t t2
    (57) f -> . LPAREN addFakeBottom exp RPAREN popFakeBottom
    (58) f -> . CTE_I addIntType
    (59) f -> . CTE_F addFloatType
    (60) f -> . CTE_S addCharType
    (61) f -> . TRUE addBoolType
    (62) f -> . FALSE addBoolType
    (63) f -> . llamada
    (64) f -> . ID
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2

    LPAREN          shift and go to state 78
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    ID              shift and go to state 91

    exp                            shift and go to state 216
    texp                           shift and go to state 80
    gexp                           shift and go to state 81
    mexp                           shift and go to state 82
    t                              shift and go to state 83
    f                              shift and go to state 84
    llamada                        shift and go to state 90

state 201

    (80) llamada2 -> verLastParam RPAREN .

    ID              reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    LEE             reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    ESCRIBIR        reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    IF              reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    WHILE           reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    DO              reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    FOR             reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    VOID            reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    RETURN          reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    INT             reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    FLOAT           reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    CHAR            reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    BOOL            reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    RPAREN          reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    RBRACES         reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    MULT            reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    DIV             reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    MOD             reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    PLUS            reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    MINUS           reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    LT              reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    LE              reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    GT              reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    GE              reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    EQ              reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    NE              reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    LOR             reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    LAND            reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    COMMA           reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    SEMI            reduce using rule 80 (llamada2 -> verLastParam RPAREN .)
    TO              reduce using rule 80 (llamada2 -> verLastParam RPAREN .)


state 202

    (57) f -> LPAREN addFakeBottom exp RPAREN popFakeBottom .

    MULT            reduce using rule 57 (f -> LPAREN addFakeBottom exp RPAREN popFakeBottom .)
    DIV             reduce using rule 57 (f -> LPAREN addFakeBottom exp RPAREN popFakeBottom .)
    MOD             reduce using rule 57 (f -> LPAREN addFakeBottom exp RPAREN popFakeBottom .)
    PLUS            reduce using rule 57 (f -> LPAREN addFakeBottom exp RPAREN popFakeBottom .)
    MINUS           reduce using rule 57 (f -> LPAREN addFakeBottom exp RPAREN popFakeBottom .)
    LT              reduce using rule 57 (f -> LPAREN addFakeBottom exp RPAREN popFakeBottom .)
    LE              reduce using rule 57 (f -> LPAREN addFakeBottom exp RPAREN popFakeBottom .)
    GT              reduce using rule 57 (f -> LPAREN addFakeBottom exp RPAREN popFakeBottom .)
    GE              reduce using rule 57 (f -> LPAREN addFakeBottom exp RPAREN popFakeBottom .)
    EQ              reduce using rule 57 (f -> LPAREN addFakeBottom exp RPAREN popFakeBottom .)
    NE              reduce using rule 57 (f -> LPAREN addFakeBottom exp RPAREN popFakeBottom .)
    LOR             reduce using rule 57 (f -> LPAREN addFakeBottom exp RPAREN popFakeBottom .)
    LAND            reduce using rule 57 (f -> LPAREN addFakeBottom exp RPAREN popFakeBottom .)
    COMMA           reduce using rule 57 (f -> LPAREN addFakeBottom exp RPAREN popFakeBottom .)
    RPAREN          reduce using rule 57 (f -> LPAREN addFakeBottom exp RPAREN popFakeBottom .)
    SEMI            reduce using rule 57 (f -> LPAREN addFakeBottom exp RPAREN popFakeBottom .)
    TO              reduce using rule 57 (f -> LPAREN addFakeBottom exp RPAREN popFakeBottom .)
    DO              reduce using rule 57 (f -> LPAREN addFakeBottom exp RPAREN popFakeBottom .)


state 203

    (82) lee2 -> COMMA exp cuadlee . lee2
    (82) lee2 -> . COMMA exp cuadlee lee2
    (83) lee2 -> . RPAREN

    COMMA           shift and go to state 150
    RPAREN          shift and go to state 151

    lee2                           shift and go to state 217

state 204

    (85) escribe2 -> COMMA exp cuadprint . escribe2
    (85) escribe2 -> . COMMA exp cuadprint escribe2
    (86) escribe2 -> . RPAREN

    COMMA           shift and go to state 167
    RPAREN          shift and go to state 168

    escribe2                       shift and go to state 218

state 205

    (88) condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSEIF . genElse condicion2
    (119) genElse -> .

    LPAREN          reduce using rule 119 (genElse -> .)

    genElse                        shift and go to state 219

state 206

    (89) condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSE . genElse condicion3
    (119) genElse -> .

    LBRACES         reduce using rule 119 (genElse -> .)

    genElse                        shift and go to state 220

state 207

    (91) condicion3 -> LBRACES estatutos . fillGoto RBRACES
    (120) fillGoto -> .

    RBRACES         reduce using rule 120 (fillGoto -> .)

    fillGoto                       shift and go to state 221

state 208

    (92) ciclow -> WHILE storeWhile LPAREN exp RPAREN genGTF DO . LBRACES estatutos RBRACES fillWhile

    LBRACES         shift and go to state 222


state 209

    (93) ciclow -> DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN . exp RPAREN genDoWhile
    (36) exp -> . texp checarexp
    (37) exp -> . exp addOL exp
    (38) texp -> . gexp checarexp
    (39) texp -> . texp addOL texp
    (40) gexp -> . mexp checarexp
    (41) gexp -> . gexp gexp2 gexp
    (48) mexp -> . t checarexp
    (49) mexp -> . mexp mexp2
    (52) t -> . f checarexp
    (53) t -> . t t2
    (57) f -> . LPAREN addFakeBottom exp RPAREN popFakeBottom
    (58) f -> . CTE_I addIntType
    (59) f -> . CTE_F addFloatType
    (60) f -> . CTE_S addCharType
    (61) f -> . TRUE addBoolType
    (62) f -> . FALSE addBoolType
    (63) f -> . llamada
    (64) f -> . ID
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2

    LPAREN          shift and go to state 78
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    ID              shift and go to state 91

    exp                            shift and go to state 223
    texp                           shift and go to state 80
    gexp                           shift and go to state 81
    mexp                           shift and go to state 82
    t                              shift and go to state 83
    f                              shift and go to state 84
    llamada                        shift and go to state 90

state 210

    (97) ciclof3 -> ID addForId EQUALS exp genFor TO . exp compFor DO LBRACES estatutos RBRACES actFor
    (36) exp -> . texp checarexp
    (37) exp -> . exp addOL exp
    (38) texp -> . gexp checarexp
    (39) texp -> . texp addOL texp
    (40) gexp -> . mexp checarexp
    (41) gexp -> . gexp gexp2 gexp
    (48) mexp -> . t checarexp
    (49) mexp -> . mexp mexp2
    (52) t -> . f checarexp
    (53) t -> . t t2
    (57) f -> . LPAREN addFakeBottom exp RPAREN popFakeBottom
    (58) f -> . CTE_I addIntType
    (59) f -> . CTE_F addFloatType
    (60) f -> . CTE_S addCharType
    (61) f -> . TRUE addBoolType
    (62) f -> . FALSE addBoolType
    (63) f -> . llamada
    (64) f -> . ID
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2

    LPAREN          shift and go to state 78
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    ID              shift and go to state 91

    exp                            shift and go to state 224
    texp                           shift and go to state 80
    gexp                           shift and go to state 81
    mexp                           shift and go to state 82
    t                              shift and go to state 83
    f                              shift and go to state 84
    llamada                        shift and go to state 90

state 211

    (23) retornar2 -> exp cuadRetornar COMMA retornar2 .

    ID              reduce using rule 23 (retornar2 -> exp cuadRetornar COMMA retornar2 .)
    LEE             reduce using rule 23 (retornar2 -> exp cuadRetornar COMMA retornar2 .)
    ESCRIBIR        reduce using rule 23 (retornar2 -> exp cuadRetornar COMMA retornar2 .)
    IF              reduce using rule 23 (retornar2 -> exp cuadRetornar COMMA retornar2 .)
    WHILE           reduce using rule 23 (retornar2 -> exp cuadRetornar COMMA retornar2 .)
    DO              reduce using rule 23 (retornar2 -> exp cuadRetornar COMMA retornar2 .)
    FOR             reduce using rule 23 (retornar2 -> exp cuadRetornar COMMA retornar2 .)
    VOID            reduce using rule 23 (retornar2 -> exp cuadRetornar COMMA retornar2 .)
    RETURN          reduce using rule 23 (retornar2 -> exp cuadRetornar COMMA retornar2 .)
    INT             reduce using rule 23 (retornar2 -> exp cuadRetornar COMMA retornar2 .)
    FLOAT           reduce using rule 23 (retornar2 -> exp cuadRetornar COMMA retornar2 .)
    CHAR            reduce using rule 23 (retornar2 -> exp cuadRetornar COMMA retornar2 .)
    BOOL            reduce using rule 23 (retornar2 -> exp cuadRetornar COMMA retornar2 .)
    RPAREN          reduce using rule 23 (retornar2 -> exp cuadRetornar COMMA retornar2 .)
    RBRACES         reduce using rule 23 (retornar2 -> exp cuadRetornar COMMA retornar2 .)


state 212

    (28) var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET LBRACKET . CTE_I RBRACKET var3

    CTE_I           shift and go to state 225


state 213

    (27) var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET var3 .

    ATRIBUTOS       reduce using rule 27 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET var3 .)
    METODOS         reduce using rule 27 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET var3 .)
    PRINCIPAL       reduce using rule 27 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET var3 .)
    ID              reduce using rule 27 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET var3 .)
    LEE             reduce using rule 27 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET var3 .)
    ESCRIBIR        reduce using rule 27 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET var3 .)
    IF              reduce using rule 27 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET var3 .)
    WHILE           reduce using rule 27 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET var3 .)
    DO              reduce using rule 27 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET var3 .)
    FOR             reduce using rule 27 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET var3 .)
    VOID            reduce using rule 27 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET var3 .)
    RETURN          reduce using rule 27 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET var3 .)
    INT             reduce using rule 27 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET var3 .)
    FLOAT           reduce using rule 27 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET var3 .)
    CHAR            reduce using rule 27 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET var3 .)
    BOOL            reduce using rule 27 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET var3 .)


state 214

    (14) funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES . addContF atributos funciones3
    (15) funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES . addContF funciones3
    (16) funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES . var addContF funciones3
    (130) addContF -> .
    (25) var -> . tipo COLON var2
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . BOOL

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    ATRIBUTOS       reduce using rule 130 (addContF -> .)
    ID              reduce using rule 130 (addContF -> .)
    LEE             reduce using rule 130 (addContF -> .)
    ESCRIBIR        reduce using rule 130 (addContF -> .)
    IF              reduce using rule 130 (addContF -> .)
    WHILE           reduce using rule 130 (addContF -> .)
    DO              reduce using rule 130 (addContF -> .)
    FOR             reduce using rule 130 (addContF -> .)
    VOID            reduce using rule 130 (addContF -> .)
    RETURN          reduce using rule 130 (addContF -> .)
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    BOOL            shift and go to state 24

  ! INT             [ reduce using rule 130 (addContF -> .) ]
  ! FLOAT           [ reduce using rule 130 (addContF -> .) ]
  ! CHAR            [ reduce using rule 130 (addContF -> .) ]
  ! BOOL            [ reduce using rule 130 (addContF -> .) ]

    addContF                       shift and go to state 226
    var                            shift and go to state 227
    tipo                           shift and go to state 28

state 215

    (20) parametros -> tipo ID setCurrentID addValueVarT . newParamType COMMA parametros
    (21) parametros -> tipo ID setCurrentID addValueVarT . newParamType
    (128) newParamType -> .

    COMMA           reduce using rule 128 (newParamType -> .)
    RPAREN          reduce using rule 128 (newParamType -> .)

    newParamType                   shift and go to state 228

state 216

    (79) llamada2 -> COMMA paramCounter exp . genParameter llamada2
    (37) exp -> exp . addOL exp
    (78) genParameter -> .
    (104) addOL -> . LOR
    (105) addOL -> . LAND

    COMMA           reduce using rule 78 (genParameter -> .)
    RPAREN          reduce using rule 78 (genParameter -> .)
    LOR             shift and go to state 106
    LAND            shift and go to state 107

    genParameter                   shift and go to state 229
    addOL                          shift and go to state 105

state 217

    (82) lee2 -> COMMA exp cuadlee lee2 .

    ID              reduce using rule 82 (lee2 -> COMMA exp cuadlee lee2 .)
    LEE             reduce using rule 82 (lee2 -> COMMA exp cuadlee lee2 .)
    ESCRIBIR        reduce using rule 82 (lee2 -> COMMA exp cuadlee lee2 .)
    IF              reduce using rule 82 (lee2 -> COMMA exp cuadlee lee2 .)
    WHILE           reduce using rule 82 (lee2 -> COMMA exp cuadlee lee2 .)
    DO              reduce using rule 82 (lee2 -> COMMA exp cuadlee lee2 .)
    FOR             reduce using rule 82 (lee2 -> COMMA exp cuadlee lee2 .)
    VOID            reduce using rule 82 (lee2 -> COMMA exp cuadlee lee2 .)
    RETURN          reduce using rule 82 (lee2 -> COMMA exp cuadlee lee2 .)
    INT             reduce using rule 82 (lee2 -> COMMA exp cuadlee lee2 .)
    FLOAT           reduce using rule 82 (lee2 -> COMMA exp cuadlee lee2 .)
    CHAR            reduce using rule 82 (lee2 -> COMMA exp cuadlee lee2 .)
    BOOL            reduce using rule 82 (lee2 -> COMMA exp cuadlee lee2 .)
    RPAREN          reduce using rule 82 (lee2 -> COMMA exp cuadlee lee2 .)
    RBRACES         reduce using rule 82 (lee2 -> COMMA exp cuadlee lee2 .)


state 218

    (85) escribe2 -> COMMA exp cuadprint escribe2 .

    ID              reduce using rule 85 (escribe2 -> COMMA exp cuadprint escribe2 .)
    LEE             reduce using rule 85 (escribe2 -> COMMA exp cuadprint escribe2 .)
    ESCRIBIR        reduce using rule 85 (escribe2 -> COMMA exp cuadprint escribe2 .)
    IF              reduce using rule 85 (escribe2 -> COMMA exp cuadprint escribe2 .)
    WHILE           reduce using rule 85 (escribe2 -> COMMA exp cuadprint escribe2 .)
    DO              reduce using rule 85 (escribe2 -> COMMA exp cuadprint escribe2 .)
    FOR             reduce using rule 85 (escribe2 -> COMMA exp cuadprint escribe2 .)
    VOID            reduce using rule 85 (escribe2 -> COMMA exp cuadprint escribe2 .)
    RETURN          reduce using rule 85 (escribe2 -> COMMA exp cuadprint escribe2 .)
    INT             reduce using rule 85 (escribe2 -> COMMA exp cuadprint escribe2 .)
    FLOAT           reduce using rule 85 (escribe2 -> COMMA exp cuadprint escribe2 .)
    CHAR            reduce using rule 85 (escribe2 -> COMMA exp cuadprint escribe2 .)
    BOOL            reduce using rule 85 (escribe2 -> COMMA exp cuadprint escribe2 .)
    RPAREN          reduce using rule 85 (escribe2 -> COMMA exp cuadprint escribe2 .)
    RBRACES         reduce using rule 85 (escribe2 -> COMMA exp cuadprint escribe2 .)


state 219

    (88) condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSEIF genElse . condicion2
    (88) condicion2 -> . LPAREN exp RPAREN genGTF condicion3 ELSEIF genElse condicion2
    (89) condicion2 -> . LPAREN exp RPAREN genGTF condicion3 ELSE genElse condicion3
    (90) condicion2 -> . LPAREN exp RPAREN genGTF condicion3

    LPAREN          shift and go to state 66

    condicion2                     shift and go to state 230

state 220

    (89) condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSE genElse . condicion3
    (91) condicion3 -> . LBRACES estatutos fillGoto RBRACES

    LBRACES         shift and go to state 191

    condicion3                     shift and go to state 231

state 221

    (91) condicion3 -> LBRACES estatutos fillGoto . RBRACES

    RBRACES         shift and go to state 232


state 222

    (92) ciclow -> WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES . estatutos RBRACES fillWhile
    (65) estatutos -> . estatutos2 estatutos
    (66) estatutos -> . estatutos2
    (67) estatutos2 -> . asigna
    (68) estatutos2 -> . llamada
    (69) estatutos2 -> . lee
    (70) estatutos2 -> . escribe
    (71) estatutos2 -> . condicion
    (72) estatutos2 -> . ciclow
    (73) estatutos2 -> . ciclof
    (74) estatutos2 -> . funciones
    (75) estatutos2 -> . retornar
    (76) asigna -> . ID EQUALS asignarid exp SEMI
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2
    (81) lee -> . LEE LPAREN exp cuadlee lee2
    (84) escribe -> . ESCRIBIR LPAREN exp cuadprint escribe2
    (87) condicion -> . IF condicion2
    (92) ciclow -> . WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile
    (93) ciclow -> . DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile
    (94) ciclof -> . FOR ciclof2
    (12) funciones -> . tipo funciones2
    (13) funciones -> . VOID funciones2
    (22) retornar -> . RETURN returnFlag LPAREN retornar2
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . BOOL

    ID              shift and go to state 46
    LEE             shift and go to state 47
    ESCRIBIR        shift and go to state 48
    IF              shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 51
    FOR             shift and go to state 52
    VOID            shift and go to state 20
    RETURN          shift and go to state 53
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    BOOL            shift and go to state 24

    estatutos                      shift and go to state 233
    estatutos2                     shift and go to state 36
    asigna                         shift and go to state 37
    llamada                        shift and go to state 38
    lee                            shift and go to state 39
    escribe                        shift and go to state 40
    condicion                      shift and go to state 41
    ciclow                         shift and go to state 42
    ciclof                         shift and go to state 43
    funciones                      shift and go to state 44
    retornar                       shift and go to state 45
    tipo                           shift and go to state 19

state 223

    (93) ciclow -> DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp . RPAREN genDoWhile
    (37) exp -> exp . addOL exp
    (104) addOL -> . LOR
    (105) addOL -> . LAND

    RPAREN          shift and go to state 234
    LOR             shift and go to state 106
    LAND            shift and go to state 107

    addOL                          shift and go to state 105

state 224

    (97) ciclof3 -> ID addForId EQUALS exp genFor TO exp . compFor DO LBRACES estatutos RBRACES actFor
    (37) exp -> exp . addOL exp
    (126) compFor -> .
    (104) addOL -> . LOR
    (105) addOL -> . LAND

    DO              reduce using rule 126 (compFor -> .)
    LOR             shift and go to state 106
    LAND            shift and go to state 107

    compFor                        shift and go to state 235
    addOL                          shift and go to state 105

state 225

    (28) var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET LBRACKET CTE_I . RBRACKET var3

    RBRACKET        shift and go to state 236


state 226

    (14) funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF . atributos funciones3
    (15) funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF . funciones3
    (7) atributos -> . ATRIBUTOS addDir var
    (17) funciones3 -> . estatutos RBRACES addDir funciones
    (18) funciones3 -> . estatutos RBRACES addDir
    (19) funciones3 -> . estatutos funciones3
    (65) estatutos -> . estatutos2 estatutos
    (66) estatutos -> . estatutos2
    (67) estatutos2 -> . asigna
    (68) estatutos2 -> . llamada
    (69) estatutos2 -> . lee
    (70) estatutos2 -> . escribe
    (71) estatutos2 -> . condicion
    (72) estatutos2 -> . ciclow
    (73) estatutos2 -> . ciclof
    (74) estatutos2 -> . funciones
    (75) estatutos2 -> . retornar
    (76) asigna -> . ID EQUALS asignarid exp SEMI
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2
    (81) lee -> . LEE LPAREN exp cuadlee lee2
    (84) escribe -> . ESCRIBIR LPAREN exp cuadprint escribe2
    (87) condicion -> . IF condicion2
    (92) ciclow -> . WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile
    (93) ciclow -> . DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile
    (94) ciclof -> . FOR ciclof2
    (12) funciones -> . tipo funciones2
    (13) funciones -> . VOID funciones2
    (22) retornar -> . RETURN returnFlag LPAREN retornar2
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . BOOL

    ATRIBUTOS       shift and go to state 10
    ID              shift and go to state 46
    LEE             shift and go to state 47
    ESCRIBIR        shift and go to state 48
    IF              shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 51
    FOR             shift and go to state 52
    VOID            shift and go to state 20
    RETURN          shift and go to state 53
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    BOOL            shift and go to state 24

    atributos                      shift and go to state 237
    funciones3                     shift and go to state 238
    estatutos                      shift and go to state 239
    funciones                      shift and go to state 44
    estatutos2                     shift and go to state 36
    asigna                         shift and go to state 37
    llamada                        shift and go to state 38
    lee                            shift and go to state 39
    escribe                        shift and go to state 40
    condicion                      shift and go to state 41
    ciclow                         shift and go to state 42
    ciclof                         shift and go to state 43
    retornar                       shift and go to state 45
    tipo                           shift and go to state 19

state 227

    (16) funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var . addContF funciones3
    (130) addContF -> .

    ID              reduce using rule 130 (addContF -> .)
    LEE             reduce using rule 130 (addContF -> .)
    ESCRIBIR        reduce using rule 130 (addContF -> .)
    IF              reduce using rule 130 (addContF -> .)
    WHILE           reduce using rule 130 (addContF -> .)
    DO              reduce using rule 130 (addContF -> .)
    FOR             reduce using rule 130 (addContF -> .)
    VOID            reduce using rule 130 (addContF -> .)
    RETURN          reduce using rule 130 (addContF -> .)
    INT             reduce using rule 130 (addContF -> .)
    FLOAT           reduce using rule 130 (addContF -> .)
    CHAR            reduce using rule 130 (addContF -> .)
    BOOL            reduce using rule 130 (addContF -> .)

    addContF                       shift and go to state 240

state 228

    (20) parametros -> tipo ID setCurrentID addValueVarT newParamType . COMMA parametros
    (21) parametros -> tipo ID setCurrentID addValueVarT newParamType .

    COMMA           shift and go to state 241
    RPAREN          reduce using rule 21 (parametros -> tipo ID setCurrentID addValueVarT newParamType .)


state 229

    (79) llamada2 -> COMMA paramCounter exp genParameter . llamada2
    (79) llamada2 -> . COMMA paramCounter exp genParameter llamada2
    (80) llamada2 -> . verLastParam RPAREN
    (133) verLastParam -> .

    COMMA           shift and go to state 180
    RPAREN          reduce using rule 133 (verLastParam -> .)

    llamada2                       shift and go to state 242
    verLastParam                   shift and go to state 181

state 230

    (88) condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSEIF genElse condicion2 .

    ID              reduce using rule 88 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSEIF genElse condicion2 .)
    LEE             reduce using rule 88 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSEIF genElse condicion2 .)
    ESCRIBIR        reduce using rule 88 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSEIF genElse condicion2 .)
    IF              reduce using rule 88 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSEIF genElse condicion2 .)
    WHILE           reduce using rule 88 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSEIF genElse condicion2 .)
    DO              reduce using rule 88 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSEIF genElse condicion2 .)
    FOR             reduce using rule 88 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSEIF genElse condicion2 .)
    VOID            reduce using rule 88 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSEIF genElse condicion2 .)
    RETURN          reduce using rule 88 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSEIF genElse condicion2 .)
    INT             reduce using rule 88 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSEIF genElse condicion2 .)
    FLOAT           reduce using rule 88 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSEIF genElse condicion2 .)
    CHAR            reduce using rule 88 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSEIF genElse condicion2 .)
    BOOL            reduce using rule 88 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSEIF genElse condicion2 .)
    RPAREN          reduce using rule 88 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSEIF genElse condicion2 .)
    RBRACES         reduce using rule 88 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSEIF genElse condicion2 .)


state 231

    (89) condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSE genElse condicion3 .

    ID              reduce using rule 89 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSE genElse condicion3 .)
    LEE             reduce using rule 89 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSE genElse condicion3 .)
    ESCRIBIR        reduce using rule 89 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSE genElse condicion3 .)
    IF              reduce using rule 89 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSE genElse condicion3 .)
    WHILE           reduce using rule 89 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSE genElse condicion3 .)
    DO              reduce using rule 89 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSE genElse condicion3 .)
    FOR             reduce using rule 89 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSE genElse condicion3 .)
    VOID            reduce using rule 89 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSE genElse condicion3 .)
    RETURN          reduce using rule 89 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSE genElse condicion3 .)
    INT             reduce using rule 89 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSE genElse condicion3 .)
    FLOAT           reduce using rule 89 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSE genElse condicion3 .)
    CHAR            reduce using rule 89 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSE genElse condicion3 .)
    BOOL            reduce using rule 89 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSE genElse condicion3 .)
    RPAREN          reduce using rule 89 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSE genElse condicion3 .)
    RBRACES         reduce using rule 89 (condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSE genElse condicion3 .)


state 232

    (91) condicion3 -> LBRACES estatutos fillGoto RBRACES .

    ELSEIF          reduce using rule 91 (condicion3 -> LBRACES estatutos fillGoto RBRACES .)
    ELSE            reduce using rule 91 (condicion3 -> LBRACES estatutos fillGoto RBRACES .)
    ID              reduce using rule 91 (condicion3 -> LBRACES estatutos fillGoto RBRACES .)
    LEE             reduce using rule 91 (condicion3 -> LBRACES estatutos fillGoto RBRACES .)
    ESCRIBIR        reduce using rule 91 (condicion3 -> LBRACES estatutos fillGoto RBRACES .)
    IF              reduce using rule 91 (condicion3 -> LBRACES estatutos fillGoto RBRACES .)
    WHILE           reduce using rule 91 (condicion3 -> LBRACES estatutos fillGoto RBRACES .)
    DO              reduce using rule 91 (condicion3 -> LBRACES estatutos fillGoto RBRACES .)
    FOR             reduce using rule 91 (condicion3 -> LBRACES estatutos fillGoto RBRACES .)
    VOID            reduce using rule 91 (condicion3 -> LBRACES estatutos fillGoto RBRACES .)
    RETURN          reduce using rule 91 (condicion3 -> LBRACES estatutos fillGoto RBRACES .)
    INT             reduce using rule 91 (condicion3 -> LBRACES estatutos fillGoto RBRACES .)
    FLOAT           reduce using rule 91 (condicion3 -> LBRACES estatutos fillGoto RBRACES .)
    CHAR            reduce using rule 91 (condicion3 -> LBRACES estatutos fillGoto RBRACES .)
    BOOL            reduce using rule 91 (condicion3 -> LBRACES estatutos fillGoto RBRACES .)
    RPAREN          reduce using rule 91 (condicion3 -> LBRACES estatutos fillGoto RBRACES .)
    RBRACES         reduce using rule 91 (condicion3 -> LBRACES estatutos fillGoto RBRACES .)


state 233

    (92) ciclow -> WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos . RBRACES fillWhile

    RBRACES         shift and go to state 243


state 234

    (93) ciclow -> DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN . genDoWhile
    (122) genDoWhile -> .

    ID              reduce using rule 122 (genDoWhile -> .)
    LEE             reduce using rule 122 (genDoWhile -> .)
    ESCRIBIR        reduce using rule 122 (genDoWhile -> .)
    IF              reduce using rule 122 (genDoWhile -> .)
    WHILE           reduce using rule 122 (genDoWhile -> .)
    DO              reduce using rule 122 (genDoWhile -> .)
    FOR             reduce using rule 122 (genDoWhile -> .)
    VOID            reduce using rule 122 (genDoWhile -> .)
    RETURN          reduce using rule 122 (genDoWhile -> .)
    INT             reduce using rule 122 (genDoWhile -> .)
    FLOAT           reduce using rule 122 (genDoWhile -> .)
    CHAR            reduce using rule 122 (genDoWhile -> .)
    BOOL            reduce using rule 122 (genDoWhile -> .)
    RPAREN          reduce using rule 122 (genDoWhile -> .)
    RBRACES         reduce using rule 122 (genDoWhile -> .)

    genDoWhile                     shift and go to state 244

state 235

    (97) ciclof3 -> ID addForId EQUALS exp genFor TO exp compFor . DO LBRACES estatutos RBRACES actFor

    DO              shift and go to state 245


state 236

    (28) var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET LBRACKET CTE_I RBRACKET . var3
    (29) var3 -> . COMMA var2
    (30) var3 -> . SEMI var
    (31) var3 -> . SEMI

    COMMA           shift and go to state 142
    SEMI            shift and go to state 143

    var3                           shift and go to state 246

state 237

    (14) funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos . funciones3
    (17) funciones3 -> . estatutos RBRACES addDir funciones
    (18) funciones3 -> . estatutos RBRACES addDir
    (19) funciones3 -> . estatutos funciones3
    (65) estatutos -> . estatutos2 estatutos
    (66) estatutos -> . estatutos2
    (67) estatutos2 -> . asigna
    (68) estatutos2 -> . llamada
    (69) estatutos2 -> . lee
    (70) estatutos2 -> . escribe
    (71) estatutos2 -> . condicion
    (72) estatutos2 -> . ciclow
    (73) estatutos2 -> . ciclof
    (74) estatutos2 -> . funciones
    (75) estatutos2 -> . retornar
    (76) asigna -> . ID EQUALS asignarid exp SEMI
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2
    (81) lee -> . LEE LPAREN exp cuadlee lee2
    (84) escribe -> . ESCRIBIR LPAREN exp cuadprint escribe2
    (87) condicion -> . IF condicion2
    (92) ciclow -> . WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile
    (93) ciclow -> . DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile
    (94) ciclof -> . FOR ciclof2
    (12) funciones -> . tipo funciones2
    (13) funciones -> . VOID funciones2
    (22) retornar -> . RETURN returnFlag LPAREN retornar2
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . BOOL

    ID              shift and go to state 46
    LEE             shift and go to state 47
    ESCRIBIR        shift and go to state 48
    IF              shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 51
    FOR             shift and go to state 52
    VOID            shift and go to state 20
    RETURN          shift and go to state 53
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    BOOL            shift and go to state 24

    funciones3                     shift and go to state 247
    estatutos                      shift and go to state 239
    funciones                      shift and go to state 44
    estatutos2                     shift and go to state 36
    asigna                         shift and go to state 37
    llamada                        shift and go to state 38
    lee                            shift and go to state 39
    escribe                        shift and go to state 40
    condicion                      shift and go to state 41
    ciclow                         shift and go to state 42
    ciclof                         shift and go to state 43
    retornar                       shift and go to state 45
    tipo                           shift and go to state 19

state 238

    (15) funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3 .

    METODOS         reduce using rule 15 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3 .)
    PRINCIPAL       reduce using rule 15 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3 .)
    ID              reduce using rule 15 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3 .)
    LEE             reduce using rule 15 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3 .)
    ESCRIBIR        reduce using rule 15 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3 .)
    IF              reduce using rule 15 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3 .)
    WHILE           reduce using rule 15 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3 .)
    DO              reduce using rule 15 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3 .)
    FOR             reduce using rule 15 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3 .)
    VOID            reduce using rule 15 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3 .)
    RETURN          reduce using rule 15 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3 .)
    INT             reduce using rule 15 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3 .)
    FLOAT           reduce using rule 15 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3 .)
    CHAR            reduce using rule 15 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3 .)
    BOOL            reduce using rule 15 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3 .)
    RPAREN          reduce using rule 15 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3 .)
    RBRACES         reduce using rule 15 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3 .)


state 239

    (17) funciones3 -> estatutos . RBRACES addDir funciones
    (18) funciones3 -> estatutos . RBRACES addDir
    (19) funciones3 -> estatutos . funciones3
    (17) funciones3 -> . estatutos RBRACES addDir funciones
    (18) funciones3 -> . estatutos RBRACES addDir
    (19) funciones3 -> . estatutos funciones3
    (65) estatutos -> . estatutos2 estatutos
    (66) estatutos -> . estatutos2
    (67) estatutos2 -> . asigna
    (68) estatutos2 -> . llamada
    (69) estatutos2 -> . lee
    (70) estatutos2 -> . escribe
    (71) estatutos2 -> . condicion
    (72) estatutos2 -> . ciclow
    (73) estatutos2 -> . ciclof
    (74) estatutos2 -> . funciones
    (75) estatutos2 -> . retornar
    (76) asigna -> . ID EQUALS asignarid exp SEMI
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2
    (81) lee -> . LEE LPAREN exp cuadlee lee2
    (84) escribe -> . ESCRIBIR LPAREN exp cuadprint escribe2
    (87) condicion -> . IF condicion2
    (92) ciclow -> . WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile
    (93) ciclow -> . DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile
    (94) ciclof -> . FOR ciclof2
    (12) funciones -> . tipo funciones2
    (13) funciones -> . VOID funciones2
    (22) retornar -> . RETURN returnFlag LPAREN retornar2
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . BOOL

    RBRACES         shift and go to state 248
    ID              shift and go to state 46
    LEE             shift and go to state 47
    ESCRIBIR        shift and go to state 48
    IF              shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 51
    FOR             shift and go to state 52
    VOID            shift and go to state 20
    RETURN          shift and go to state 53
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    BOOL            shift and go to state 24

    estatutos                      shift and go to state 239
    funciones                      shift and go to state 44
    funciones3                     shift and go to state 249
    estatutos2                     shift and go to state 36
    asigna                         shift and go to state 37
    llamada                        shift and go to state 38
    lee                            shift and go to state 39
    escribe                        shift and go to state 40
    condicion                      shift and go to state 41
    ciclow                         shift and go to state 42
    ciclof                         shift and go to state 43
    retornar                       shift and go to state 45
    tipo                           shift and go to state 19

state 240

    (16) funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF . funciones3
    (17) funciones3 -> . estatutos RBRACES addDir funciones
    (18) funciones3 -> . estatutos RBRACES addDir
    (19) funciones3 -> . estatutos funciones3
    (65) estatutos -> . estatutos2 estatutos
    (66) estatutos -> . estatutos2
    (67) estatutos2 -> . asigna
    (68) estatutos2 -> . llamada
    (69) estatutos2 -> . lee
    (70) estatutos2 -> . escribe
    (71) estatutos2 -> . condicion
    (72) estatutos2 -> . ciclow
    (73) estatutos2 -> . ciclof
    (74) estatutos2 -> . funciones
    (75) estatutos2 -> . retornar
    (76) asigna -> . ID EQUALS asignarid exp SEMI
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2
    (81) lee -> . LEE LPAREN exp cuadlee lee2
    (84) escribe -> . ESCRIBIR LPAREN exp cuadprint escribe2
    (87) condicion -> . IF condicion2
    (92) ciclow -> . WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile
    (93) ciclow -> . DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile
    (94) ciclof -> . FOR ciclof2
    (12) funciones -> . tipo funciones2
    (13) funciones -> . VOID funciones2
    (22) retornar -> . RETURN returnFlag LPAREN retornar2
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . BOOL

    ID              shift and go to state 46
    LEE             shift and go to state 47
    ESCRIBIR        shift and go to state 48
    IF              shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 51
    FOR             shift and go to state 52
    VOID            shift and go to state 20
    RETURN          shift and go to state 53
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    BOOL            shift and go to state 24

    funciones3                     shift and go to state 250
    estatutos                      shift and go to state 239
    funciones                      shift and go to state 44
    estatutos2                     shift and go to state 36
    asigna                         shift and go to state 37
    llamada                        shift and go to state 38
    lee                            shift and go to state 39
    escribe                        shift and go to state 40
    condicion                      shift and go to state 41
    ciclow                         shift and go to state 42
    ciclof                         shift and go to state 43
    retornar                       shift and go to state 45
    tipo                           shift and go to state 19

state 241

    (20) parametros -> tipo ID setCurrentID addValueVarT newParamType COMMA . parametros
    (20) parametros -> . tipo ID setCurrentID addValueVarT newParamType COMMA parametros
    (21) parametros -> . tipo ID setCurrentID addValueVarT newParamType
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . BOOL

    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    BOOL            shift and go to state 24

    tipo                           shift and go to state 145
    parametros                     shift and go to state 251

state 242

    (79) llamada2 -> COMMA paramCounter exp genParameter llamada2 .

    ID              reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    LEE             reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    ESCRIBIR        reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    IF              reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    WHILE           reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    DO              reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    FOR             reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    VOID            reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    RETURN          reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    INT             reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    FLOAT           reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    CHAR            reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    BOOL            reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    RPAREN          reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    RBRACES         reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    MULT            reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    DIV             reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    MOD             reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    PLUS            reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    MINUS           reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    LT              reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    LE              reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    GT              reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    GE              reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    EQ              reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    NE              reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    LOR             reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    LAND            reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    COMMA           reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    SEMI            reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)
    TO              reduce using rule 79 (llamada2 -> COMMA paramCounter exp genParameter llamada2 .)


state 243

    (92) ciclow -> WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES . fillWhile
    (123) fillWhile -> .

    ID              reduce using rule 123 (fillWhile -> .)
    LEE             reduce using rule 123 (fillWhile -> .)
    ESCRIBIR        reduce using rule 123 (fillWhile -> .)
    IF              reduce using rule 123 (fillWhile -> .)
    WHILE           reduce using rule 123 (fillWhile -> .)
    DO              reduce using rule 123 (fillWhile -> .)
    FOR             reduce using rule 123 (fillWhile -> .)
    VOID            reduce using rule 123 (fillWhile -> .)
    RETURN          reduce using rule 123 (fillWhile -> .)
    INT             reduce using rule 123 (fillWhile -> .)
    FLOAT           reduce using rule 123 (fillWhile -> .)
    CHAR            reduce using rule 123 (fillWhile -> .)
    BOOL            reduce using rule 123 (fillWhile -> .)
    RPAREN          reduce using rule 123 (fillWhile -> .)
    RBRACES         reduce using rule 123 (fillWhile -> .)

    fillWhile                      shift and go to state 252

state 244

    (93) ciclow -> DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile .

    ID              reduce using rule 93 (ciclow -> DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile .)
    LEE             reduce using rule 93 (ciclow -> DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile .)
    ESCRIBIR        reduce using rule 93 (ciclow -> DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile .)
    IF              reduce using rule 93 (ciclow -> DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile .)
    WHILE           reduce using rule 93 (ciclow -> DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile .)
    DO              reduce using rule 93 (ciclow -> DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile .)
    FOR             reduce using rule 93 (ciclow -> DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile .)
    VOID            reduce using rule 93 (ciclow -> DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile .)
    RETURN          reduce using rule 93 (ciclow -> DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile .)
    INT             reduce using rule 93 (ciclow -> DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile .)
    FLOAT           reduce using rule 93 (ciclow -> DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile .)
    CHAR            reduce using rule 93 (ciclow -> DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile .)
    BOOL            reduce using rule 93 (ciclow -> DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile .)
    RPAREN          reduce using rule 93 (ciclow -> DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile .)
    RBRACES         reduce using rule 93 (ciclow -> DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile .)


state 245

    (97) ciclof3 -> ID addForId EQUALS exp genFor TO exp compFor DO . LBRACES estatutos RBRACES actFor

    LBRACES         shift and go to state 253


state 246

    (28) var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET LBRACKET CTE_I RBRACKET var3 .

    ATRIBUTOS       reduce using rule 28 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET LBRACKET CTE_I RBRACKET var3 .)
    METODOS         reduce using rule 28 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET LBRACKET CTE_I RBRACKET var3 .)
    PRINCIPAL       reduce using rule 28 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET LBRACKET CTE_I RBRACKET var3 .)
    ID              reduce using rule 28 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET LBRACKET CTE_I RBRACKET var3 .)
    LEE             reduce using rule 28 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET LBRACKET CTE_I RBRACKET var3 .)
    ESCRIBIR        reduce using rule 28 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET LBRACKET CTE_I RBRACKET var3 .)
    IF              reduce using rule 28 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET LBRACKET CTE_I RBRACKET var3 .)
    WHILE           reduce using rule 28 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET LBRACKET CTE_I RBRACKET var3 .)
    DO              reduce using rule 28 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET LBRACKET CTE_I RBRACKET var3 .)
    FOR             reduce using rule 28 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET LBRACKET CTE_I RBRACKET var3 .)
    VOID            reduce using rule 28 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET LBRACKET CTE_I RBRACKET var3 .)
    RETURN          reduce using rule 28 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET LBRACKET CTE_I RBRACKET var3 .)
    INT             reduce using rule 28 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET LBRACKET CTE_I RBRACKET var3 .)
    FLOAT           reduce using rule 28 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET LBRACKET CTE_I RBRACKET var3 .)
    CHAR            reduce using rule 28 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET LBRACKET CTE_I RBRACKET var3 .)
    BOOL            reduce using rule 28 (var2 -> ID setCurrentID addValueVarT LBRACKET CTE_I RBRACKET LBRACKET CTE_I RBRACKET var3 .)


state 247

    (14) funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3 .

    METODOS         reduce using rule 14 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3 .)
    PRINCIPAL       reduce using rule 14 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3 .)
    ID              reduce using rule 14 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3 .)
    LEE             reduce using rule 14 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3 .)
    ESCRIBIR        reduce using rule 14 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3 .)
    IF              reduce using rule 14 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3 .)
    WHILE           reduce using rule 14 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3 .)
    DO              reduce using rule 14 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3 .)
    FOR             reduce using rule 14 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3 .)
    VOID            reduce using rule 14 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3 .)
    RETURN          reduce using rule 14 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3 .)
    INT             reduce using rule 14 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3 .)
    FLOAT           reduce using rule 14 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3 .)
    CHAR            reduce using rule 14 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3 .)
    BOOL            reduce using rule 14 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3 .)
    RPAREN          reduce using rule 14 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3 .)
    RBRACES         reduce using rule 14 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3 .)


state 248

    (17) funciones3 -> estatutos RBRACES . addDir funciones
    (18) funciones3 -> estatutos RBRACES . addDir
    (98) addDir -> .

    VOID            reduce using rule 98 (addDir -> .)
    INT             reduce using rule 98 (addDir -> .)
    FLOAT           reduce using rule 98 (addDir -> .)
    CHAR            reduce using rule 98 (addDir -> .)
    BOOL            reduce using rule 98 (addDir -> .)
    METODOS         reduce using rule 98 (addDir -> .)
    PRINCIPAL       reduce using rule 98 (addDir -> .)
    ID              reduce using rule 98 (addDir -> .)
    LEE             reduce using rule 98 (addDir -> .)
    ESCRIBIR        reduce using rule 98 (addDir -> .)
    IF              reduce using rule 98 (addDir -> .)
    WHILE           reduce using rule 98 (addDir -> .)
    DO              reduce using rule 98 (addDir -> .)
    FOR             reduce using rule 98 (addDir -> .)
    RETURN          reduce using rule 98 (addDir -> .)
    RPAREN          reduce using rule 98 (addDir -> .)
    RBRACES         reduce using rule 98 (addDir -> .)

    addDir                         shift and go to state 254

state 249

    (19) funciones3 -> estatutos funciones3 .

    METODOS         reduce using rule 19 (funciones3 -> estatutos funciones3 .)
    PRINCIPAL       reduce using rule 19 (funciones3 -> estatutos funciones3 .)
    ID              reduce using rule 19 (funciones3 -> estatutos funciones3 .)
    LEE             reduce using rule 19 (funciones3 -> estatutos funciones3 .)
    ESCRIBIR        reduce using rule 19 (funciones3 -> estatutos funciones3 .)
    IF              reduce using rule 19 (funciones3 -> estatutos funciones3 .)
    WHILE           reduce using rule 19 (funciones3 -> estatutos funciones3 .)
    DO              reduce using rule 19 (funciones3 -> estatutos funciones3 .)
    FOR             reduce using rule 19 (funciones3 -> estatutos funciones3 .)
    VOID            reduce using rule 19 (funciones3 -> estatutos funciones3 .)
    RETURN          reduce using rule 19 (funciones3 -> estatutos funciones3 .)
    INT             reduce using rule 19 (funciones3 -> estatutos funciones3 .)
    FLOAT           reduce using rule 19 (funciones3 -> estatutos funciones3 .)
    CHAR            reduce using rule 19 (funciones3 -> estatutos funciones3 .)
    BOOL            reduce using rule 19 (funciones3 -> estatutos funciones3 .)
    RPAREN          reduce using rule 19 (funciones3 -> estatutos funciones3 .)
    RBRACES         reduce using rule 19 (funciones3 -> estatutos funciones3 .)


state 250

    (16) funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3 .

    METODOS         reduce using rule 16 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3 .)
    PRINCIPAL       reduce using rule 16 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3 .)
    ID              reduce using rule 16 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3 .)
    LEE             reduce using rule 16 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3 .)
    ESCRIBIR        reduce using rule 16 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3 .)
    IF              reduce using rule 16 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3 .)
    WHILE           reduce using rule 16 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3 .)
    DO              reduce using rule 16 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3 .)
    FOR             reduce using rule 16 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3 .)
    VOID            reduce using rule 16 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3 .)
    RETURN          reduce using rule 16 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3 .)
    INT             reduce using rule 16 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3 .)
    FLOAT           reduce using rule 16 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3 .)
    CHAR            reduce using rule 16 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3 .)
    BOOL            reduce using rule 16 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3 .)
    RPAREN          reduce using rule 16 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3 .)
    RBRACES         reduce using rule 16 (funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3 .)


state 251

    (20) parametros -> tipo ID setCurrentID addValueVarT newParamType COMMA parametros .

    RPAREN          reduce using rule 20 (parametros -> tipo ID setCurrentID addValueVarT newParamType COMMA parametros .)


state 252

    (92) ciclow -> WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile .

    ID              reduce using rule 92 (ciclow -> WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile .)
    LEE             reduce using rule 92 (ciclow -> WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile .)
    ESCRIBIR        reduce using rule 92 (ciclow -> WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile .)
    IF              reduce using rule 92 (ciclow -> WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile .)
    WHILE           reduce using rule 92 (ciclow -> WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile .)
    DO              reduce using rule 92 (ciclow -> WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile .)
    FOR             reduce using rule 92 (ciclow -> WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile .)
    VOID            reduce using rule 92 (ciclow -> WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile .)
    RETURN          reduce using rule 92 (ciclow -> WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile .)
    INT             reduce using rule 92 (ciclow -> WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile .)
    FLOAT           reduce using rule 92 (ciclow -> WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile .)
    CHAR            reduce using rule 92 (ciclow -> WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile .)
    BOOL            reduce using rule 92 (ciclow -> WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile .)
    RPAREN          reduce using rule 92 (ciclow -> WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile .)
    RBRACES         reduce using rule 92 (ciclow -> WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile .)


state 253

    (97) ciclof3 -> ID addForId EQUALS exp genFor TO exp compFor DO LBRACES . estatutos RBRACES actFor
    (65) estatutos -> . estatutos2 estatutos
    (66) estatutos -> . estatutos2
    (67) estatutos2 -> . asigna
    (68) estatutos2 -> . llamada
    (69) estatutos2 -> . lee
    (70) estatutos2 -> . escribe
    (71) estatutos2 -> . condicion
    (72) estatutos2 -> . ciclow
    (73) estatutos2 -> . ciclof
    (74) estatutos2 -> . funciones
    (75) estatutos2 -> . retornar
    (76) asigna -> . ID EQUALS asignarid exp SEMI
    (77) llamada -> . ID callFunc LPAREN exp genParameter llamada2
    (81) lee -> . LEE LPAREN exp cuadlee lee2
    (84) escribe -> . ESCRIBIR LPAREN exp cuadprint escribe2
    (87) condicion -> . IF condicion2
    (92) ciclow -> . WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile
    (93) ciclow -> . DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile
    (94) ciclof -> . FOR ciclof2
    (12) funciones -> . tipo funciones2
    (13) funciones -> . VOID funciones2
    (22) retornar -> . RETURN returnFlag LPAREN retornar2
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . BOOL

    ID              shift and go to state 46
    LEE             shift and go to state 47
    ESCRIBIR        shift and go to state 48
    IF              shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 51
    FOR             shift and go to state 52
    VOID            shift and go to state 20
    RETURN          shift and go to state 53
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    BOOL            shift and go to state 24

    estatutos                      shift and go to state 255
    estatutos2                     shift and go to state 36
    asigna                         shift and go to state 37
    llamada                        shift and go to state 38
    lee                            shift and go to state 39
    escribe                        shift and go to state 40
    condicion                      shift and go to state 41
    ciclow                         shift and go to state 42
    ciclof                         shift and go to state 43
    funciones                      shift and go to state 44
    retornar                       shift and go to state 45
    tipo                           shift and go to state 19

state 254

    (17) funciones3 -> estatutos RBRACES addDir . funciones
    (18) funciones3 -> estatutos RBRACES addDir .
    (12) funciones -> . tipo funciones2
    (13) funciones -> . VOID funciones2
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . BOOL

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    METODOS         reduce using rule 18 (funciones3 -> estatutos RBRACES addDir .)
    PRINCIPAL       reduce using rule 18 (funciones3 -> estatutos RBRACES addDir .)
    ID              reduce using rule 18 (funciones3 -> estatutos RBRACES addDir .)
    LEE             reduce using rule 18 (funciones3 -> estatutos RBRACES addDir .)
    ESCRIBIR        reduce using rule 18 (funciones3 -> estatutos RBRACES addDir .)
    IF              reduce using rule 18 (funciones3 -> estatutos RBRACES addDir .)
    WHILE           reduce using rule 18 (funciones3 -> estatutos RBRACES addDir .)
    DO              reduce using rule 18 (funciones3 -> estatutos RBRACES addDir .)
    FOR             reduce using rule 18 (funciones3 -> estatutos RBRACES addDir .)
    RETURN          reduce using rule 18 (funciones3 -> estatutos RBRACES addDir .)
    RPAREN          reduce using rule 18 (funciones3 -> estatutos RBRACES addDir .)
    RBRACES         reduce using rule 18 (funciones3 -> estatutos RBRACES addDir .)
    VOID            shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    BOOL            shift and go to state 24

  ! VOID            [ reduce using rule 18 (funciones3 -> estatutos RBRACES addDir .) ]
  ! INT             [ reduce using rule 18 (funciones3 -> estatutos RBRACES addDir .) ]
  ! FLOAT           [ reduce using rule 18 (funciones3 -> estatutos RBRACES addDir .) ]
  ! CHAR            [ reduce using rule 18 (funciones3 -> estatutos RBRACES addDir .) ]
  ! BOOL            [ reduce using rule 18 (funciones3 -> estatutos RBRACES addDir .) ]

    funciones                      shift and go to state 256
    tipo                           shift and go to state 19

state 255

    (97) ciclof3 -> ID addForId EQUALS exp genFor TO exp compFor DO LBRACES estatutos . RBRACES actFor

    RBRACES         shift and go to state 257


state 256

    (17) funciones3 -> estatutos RBRACES addDir funciones .

    METODOS         reduce using rule 17 (funciones3 -> estatutos RBRACES addDir funciones .)
    PRINCIPAL       reduce using rule 17 (funciones3 -> estatutos RBRACES addDir funciones .)
    ID              reduce using rule 17 (funciones3 -> estatutos RBRACES addDir funciones .)
    LEE             reduce using rule 17 (funciones3 -> estatutos RBRACES addDir funciones .)
    ESCRIBIR        reduce using rule 17 (funciones3 -> estatutos RBRACES addDir funciones .)
    IF              reduce using rule 17 (funciones3 -> estatutos RBRACES addDir funciones .)
    WHILE           reduce using rule 17 (funciones3 -> estatutos RBRACES addDir funciones .)
    DO              reduce using rule 17 (funciones3 -> estatutos RBRACES addDir funciones .)
    FOR             reduce using rule 17 (funciones3 -> estatutos RBRACES addDir funciones .)
    VOID            reduce using rule 17 (funciones3 -> estatutos RBRACES addDir funciones .)
    RETURN          reduce using rule 17 (funciones3 -> estatutos RBRACES addDir funciones .)
    INT             reduce using rule 17 (funciones3 -> estatutos RBRACES addDir funciones .)
    FLOAT           reduce using rule 17 (funciones3 -> estatutos RBRACES addDir funciones .)
    CHAR            reduce using rule 17 (funciones3 -> estatutos RBRACES addDir funciones .)
    BOOL            reduce using rule 17 (funciones3 -> estatutos RBRACES addDir funciones .)
    RPAREN          reduce using rule 17 (funciones3 -> estatutos RBRACES addDir funciones .)
    RBRACES         reduce using rule 17 (funciones3 -> estatutos RBRACES addDir funciones .)


state 257

    (97) ciclof3 -> ID addForId EQUALS exp genFor TO exp compFor DO LBRACES estatutos RBRACES . actFor
    (127) actFor -> .

    ID              reduce using rule 127 (actFor -> .)
    LEE             reduce using rule 127 (actFor -> .)
    ESCRIBIR        reduce using rule 127 (actFor -> .)
    IF              reduce using rule 127 (actFor -> .)
    WHILE           reduce using rule 127 (actFor -> .)
    DO              reduce using rule 127 (actFor -> .)
    FOR             reduce using rule 127 (actFor -> .)
    VOID            reduce using rule 127 (actFor -> .)
    RETURN          reduce using rule 127 (actFor -> .)
    INT             reduce using rule 127 (actFor -> .)
    FLOAT           reduce using rule 127 (actFor -> .)
    CHAR            reduce using rule 127 (actFor -> .)
    BOOL            reduce using rule 127 (actFor -> .)
    RPAREN          reduce using rule 127 (actFor -> .)
    RBRACES         reduce using rule 127 (actFor -> .)

    actFor                         shift and go to state 258

state 258

    (97) ciclof3 -> ID addForId EQUALS exp genFor TO exp compFor DO LBRACES estatutos RBRACES actFor .

    ID              reduce using rule 97 (ciclof3 -> ID addForId EQUALS exp genFor TO exp compFor DO LBRACES estatutos RBRACES actFor .)
    LEE             reduce using rule 97 (ciclof3 -> ID addForId EQUALS exp genFor TO exp compFor DO LBRACES estatutos RBRACES actFor .)
    ESCRIBIR        reduce using rule 97 (ciclof3 -> ID addForId EQUALS exp genFor TO exp compFor DO LBRACES estatutos RBRACES actFor .)
    IF              reduce using rule 97 (ciclof3 -> ID addForId EQUALS exp genFor TO exp compFor DO LBRACES estatutos RBRACES actFor .)
    WHILE           reduce using rule 97 (ciclof3 -> ID addForId EQUALS exp genFor TO exp compFor DO LBRACES estatutos RBRACES actFor .)
    DO              reduce using rule 97 (ciclof3 -> ID addForId EQUALS exp genFor TO exp compFor DO LBRACES estatutos RBRACES actFor .)
    FOR             reduce using rule 97 (ciclof3 -> ID addForId EQUALS exp genFor TO exp compFor DO LBRACES estatutos RBRACES actFor .)
    VOID            reduce using rule 97 (ciclof3 -> ID addForId EQUALS exp genFor TO exp compFor DO LBRACES estatutos RBRACES actFor .)
    RETURN          reduce using rule 97 (ciclof3 -> ID addForId EQUALS exp genFor TO exp compFor DO LBRACES estatutos RBRACES actFor .)
    INT             reduce using rule 97 (ciclof3 -> ID addForId EQUALS exp genFor TO exp compFor DO LBRACES estatutos RBRACES actFor .)
    FLOAT           reduce using rule 97 (ciclof3 -> ID addForId EQUALS exp genFor TO exp compFor DO LBRACES estatutos RBRACES actFor .)
    CHAR            reduce using rule 97 (ciclof3 -> ID addForId EQUALS exp genFor TO exp compFor DO LBRACES estatutos RBRACES actFor .)
    BOOL            reduce using rule 97 (ciclof3 -> ID addForId EQUALS exp genFor TO exp compFor DO LBRACES estatutos RBRACES actFor .)
    RPAREN          reduce using rule 97 (ciclof3 -> ID addForId EQUALS exp genFor TO exp compFor DO LBRACES estatutos RBRACES actFor .)
    RBRACES         reduce using rule 97 (ciclof3 -> ID addForId EQUALS exp genFor TO exp compFor DO LBRACES estatutos RBRACES actFor .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 36 resolved as shift
WARNING: shift/reduce conflict for LEE in state 36 resolved as shift
WARNING: shift/reduce conflict for ESCRIBIR in state 36 resolved as shift
WARNING: shift/reduce conflict for IF in state 36 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 36 resolved as shift
WARNING: shift/reduce conflict for DO in state 36 resolved as shift
WARNING: shift/reduce conflict for FOR in state 36 resolved as shift
WARNING: shift/reduce conflict for VOID in state 36 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 36 resolved as shift
WARNING: shift/reduce conflict for INT in state 36 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 36 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 36 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 36 resolved as shift
WARNING: shift/reduce conflict for ID in state 70 resolved as shift
WARNING: shift/reduce conflict for LOR in state 80 resolved as shift
WARNING: shift/reduce conflict for LAND in state 80 resolved as shift
WARNING: shift/reduce conflict for INT in state 143 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 143 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 143 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 143 resolved as shift
WARNING: shift/reduce conflict for LOR in state 152 resolved as shift
WARNING: shift/reduce conflict for LAND in state 152 resolved as shift
WARNING: shift/reduce conflict for LOR in state 153 resolved as shift
WARNING: shift/reduce conflict for LAND in state 153 resolved as shift
WARNING: shift/reduce conflict for LT in state 154 resolved as shift
WARNING: shift/reduce conflict for LE in state 154 resolved as shift
WARNING: shift/reduce conflict for GT in state 154 resolved as shift
WARNING: shift/reduce conflict for GE in state 154 resolved as shift
WARNING: shift/reduce conflict for EQ in state 154 resolved as shift
WARNING: shift/reduce conflict for NE in state 154 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 184 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 184 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 185 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 185 resolved as shift
WARNING: shift/reduce conflict for MULT in state 186 resolved as shift
WARNING: shift/reduce conflict for DIV in state 186 resolved as shift
WARNING: shift/reduce conflict for MOD in state 186 resolved as shift
WARNING: shift/reduce conflict for MULT in state 187 resolved as shift
WARNING: shift/reduce conflict for DIV in state 187 resolved as shift
WARNING: shift/reduce conflict for MOD in state 187 resolved as shift
WARNING: shift/reduce conflict for MULT in state 188 resolved as shift
WARNING: shift/reduce conflict for DIV in state 188 resolved as shift
WARNING: shift/reduce conflict for MOD in state 188 resolved as shift
WARNING: shift/reduce conflict for INT in state 214 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 214 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 214 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 214 resolved as shift
WARNING: shift/reduce conflict for VOID in state 254 resolved as shift
WARNING: shift/reduce conflict for INT in state 254 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 254 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 254 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 254 resolved as shift
