
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ATRIBUTOS BOOL CHAR COLON COMMA CTE_F CTE_I CTE_S DIV DO ELSE ELSEIF EQ EQUALS ESCRIBIR FALSE FLOAT FOR FUNCION GE GT ID IF INT LAND LBRACES LBRACKET LE LEE LOR LPAREN LT METODOS MINUS MOD MULT NE PLUS PRINCIPAL PROGRAMA RANGE RBRACES RBRACKET RETURN RPAREN SEMI TO TRUE VOID WHILE\n    programa : gotomain PROGRAMA addDir ID SEMI programa2\n    \n    programa2 : atributos programa2\n              | programa3\n    \n    programa3 : metodos programa3\n              | programa4 \n    \n    programa4 : setmainloc principal\n    \n    atributos : ATRIBUTOS addDir var\n    \n    metodos : METODOS funciones\n    \n    principal : PRINCIPAL LPAREN estatutos principal2\n    \n    principal2 : estatutos principal2\n               | RPAREN\n    \n    funciones : tipo funciones2\n              | VOID funciones2\n    \n    funciones2 : FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3\n               | FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3\n               | FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3\n    \n    funciones3 : estatutos RBRACES addDir funciones\n               | estatutos RBRACES addDir\n               | estatutos funciones3\n    \n    parametros : tipo ID setCurrentID addValueVarT newParamType COMMA parametros\n               | tipo ID setCurrentID addValueVarT newParamType\n    \n    retornar : RETURN returnFlag LPAREN retornar2\n    \n    retornar2 : exp cuadRetornar COMMA retornar2\n              | exp cuadRetornar RPAREN\n    \n    var : tipo COLON var2\n     \n    var2 : ID setCurrentID addValueVarT var3\n         | ID setCurrentID addValueVarT LBRACKET newArray CTE_I setL RANGE CTE_I setL var4 \n    \n    var3 : COMMA var2\n         | SEMI var\n         | SEMI    \n    \n    var4 : RBRACKET cerrarNodes var3\n         | COMMA increaseDim CTE_I setL RANGE CTE_I setL RBRACKET cerrarNodes var3\n    \n    tipo : INT\n         | FLOAT\n         | CHAR\n         | BOOL\n    \n    exp : texp checarexp\n        | exp addOL exp \n    \n    texp : gexp checarexp\n         | texp addOL texp\n    \n    gexp : mexp checarexp\n         | gexp gexp2 gexp\n    \n    gexp2 : LT addO\n          | LE addO\n          | GT addO\n          | GE addO\n          | EQ addO\n          | NE addO\n    \n    mexp : t checarexp\n         | mexp mexp2 \n    \n    mexp2 : PLUS addO mexp \n          | MINUS addO mexp \n    \n    t : f checarexp\n      | t t2 \n    \n    t2 : MULT addO t \n       | DIV addO t \n       | MOD addO t \n    \n    f : LPAREN addFakeBottom exp RPAREN popFakeBottom\n      | CTE_I addIntType\n      | CTE_F addFloatType\n      | CTE_S addCharType\n      | TRUE addBoolType\n      | FALSE addBoolType\n      | llamada\n      | ID \n      | ID LBRACKET agregarVar verifyAEx addFakeBottom exp crearCuadA f2 \n    \n    f2 : COMMA updateDim exp crearCuadA RBRACKET crearCuadB popFakeBottom\n       | RBRACKET crearCuadB popFakeBottom\n    \n    estatutos : estatutos2 estatutos\n              | estatutos2 \n    \n    estatutos2 : asigna\n               | llamada\n               | lee\n               | escribe\n               | condicion\n               | ciclow\n               | ciclof\n               | funciones\n               | retornar\n    \n    asigna : ID EQUALS push_id exp SEMI\n           | ID LBRACKET agregarVar verifyAEx addFakeBottom exp crearCuadA f2 EQUALS push_id exp SEMI\n    \n    llamada : ID callFunc LPAREN exp genParameter llamada2\n    \n    llamada2 : COMMA paramCounter exp genParameter llamada2\n             | verLastParam RPAREN\n    \n    lee : LEE LPAREN exp cuadlee lee2\n    \n    lee2 : COMMA exp cuadlee lee2\n         | RPAREN\n    \n    escribe : ESCRIBIR LPAREN exp cuadprint escribe2\n    \n    escribe2 : COMMA exp cuadprint escribe2\n             | RPAREN\n    \n    condicion : IF condicion2\n    \n    condicion2 : LPAREN exp RPAREN genGTF condicion3 ELSEIF genGT condicion2\n               | LPAREN exp RPAREN genGTF condicion3 ELSE genGT condicion3 \n               | LPAREN exp RPAREN genGTF condicion3 \n    \n    condicion3 : LBRACES estatutos fillGoto RBRACES \n    \n    ciclow : WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile\n           | DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile\n    \n    ciclof : FOR ID addForId EQUALS exp genFor TO exp compFor DO LBRACES estatutos RBRACES actFor\n    \n    addDir :\n    \n    setCurrentID :\n    \n    addValueVarT :\n    \n    addFakeBottom : \n    \n    popFakeBottom : \n    \n    addO : \n    \n    addOL : LOR\n          | LAND\n    \n    checarexp :\n    \n    addIntType : \n    \n    addFloatType : \n    \n    addCharType : \n    \n    addBoolType : \n    \n    push_id : \n    \n    gotomain : \n    \n    setmainloc : \n    \n    cuadprint : \n    \n    cuadlee : \n    \n    returnFlag : \n    \n    cuadRetornar : \n    \n    genGTF : \n    \n    genGT : \n    \n    fillGoto : \n    \n    storeWhile : \n    \n    genDoWhile : \n    \n    fillWhile : \n    \n    addForId : \n    \n    genFor : \n    \n    compFor : \n    \n    actFor : \n    \n    newParamType : \n    \n    addParamCount : \n    \n    genParameter : \n    \n    addContF : \n    \n    callFunc : \n    \n    paramCounter : \n    \n    verLastParam : \n    \n    setL : \n    \n    newArray : \n    \n    cerrarNodes :\n    \n    crearCuadA : \n    \n    crearCuadB : \n    \n    agregarVar :\n    \n    verifyAEx :\n    \n    updateDim  :\n    \n    increaseDim :\n    '
    
_lr_action_items = {'PROGRAMA':([0,2,],[-113,3,]),'$end':([1,7,9,12,15,17,25,58,59,74,],[0,-1,-3,-5,-2,-4,-6,-9,-11,-10,]),'ID':([3,4,21,22,23,24,27,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,52,54,57,60,61,62,64,65,66,67,75,76,77,78,94,95,97,101,103,105,106,107,109,111,112,113,114,115,116,117,120,121,124,125,126,133,138,139,141,143,144,146,147,148,151,152,153,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,178,179,183,184,193,195,196,200,201,206,207,210,216,217,218,220,223,226,228,232,236,237,239,240,244,245,246,248,251,252,253,254,256,259,261,262,265,266,267,268,272,273,274,277,278,283,285,286,289,296,],[-99,5,-33,-34,-35,-36,-7,-12,34,-13,46,55,46,46,-71,-72,-73,-74,-75,-76,-77,-78,-79,70,-25,46,-69,-112,-141,91,91,-91,91,91,-142,91,-102,91,46,91,-102,91,91,-105,-106,91,91,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-141,91,-22,-26,55,-30,181,-80,91,-85,91,-87,-43,-44,-45,-46,-47,-48,91,91,91,91,91,-142,-88,91,-90,-28,-29,-82,-134,-102,-94,46,91,-24,91,-84,91,91,91,-23,-132,-143,-86,-89,46,46,-132,-112,91,-92,-93,-95,-123,46,-15,46,46,91,-83,-124,-97,-14,-99,-19,-16,-96,46,-27,-18,-81,-17,-128,-31,-98,-32,]),'SEMI':([5,55,72,80,81,82,83,84,85,86,87,88,89,90,91,98,100,108,110,118,119,122,123,127,128,129,130,131,132,154,155,156,183,186,188,189,190,191,192,207,208,224,241,258,259,260,270,275,279,281,284,288,294,295,],[6,-100,-101,-107,-107,-107,-107,-107,-108,-109,-110,-111,-111,-64,-65,144,147,-37,-39,-41,-50,-49,-54,-53,-59,-60,-61,-62,-63,-38,-40,-42,-82,-103,-51,-52,-55,-56,-57,-84,-58,-140,-103,-68,-83,-66,278,-138,-140,144,-103,-67,-138,144,]),'ATRIBUTOS':([6,8,27,54,141,144,178,179,220,236,274,286,296,],[10,10,-7,-25,-26,-30,-28,-29,-132,10,-27,-31,-32,]),'METODOS':([6,8,11,18,27,29,31,54,141,144,178,179,252,265,266,267,268,274,277,283,286,296,],[13,13,13,-8,-7,-12,-13,-25,-26,-30,-28,-29,-15,-14,-99,-19,-16,-27,-18,-17,-31,-32,]),'PRINCIPAL':([6,8,11,14,18,27,29,31,54,141,144,178,179,252,265,266,267,268,274,277,283,286,296,],[-114,-114,-114,26,-8,-7,-12,-13,-25,-26,-30,-28,-29,-15,-14,-99,-19,-16,-27,-18,-17,-31,-32,]),'INT':([10,13,16,27,29,31,32,35,36,37,38,39,40,41,42,43,44,45,54,57,60,66,73,95,99,139,141,144,147,151,153,169,171,178,179,183,195,196,201,207,218,220,226,228,232,236,237,244,245,246,248,251,252,253,254,255,259,261,262,265,266,267,268,272,273,274,277,278,283,285,286,289,296,],[-99,21,21,-7,-12,-13,21,21,21,-71,-72,-73,-74,-75,-76,-77,-78,-79,-25,21,-69,-91,-99,21,21,-22,-26,21,-80,-85,-87,-88,-90,-28,-29,-82,-94,21,-24,-84,-23,21,-86,-89,21,21,-132,-92,-93,-95,-123,21,-15,21,21,21,-83,-124,-97,-14,-99,-19,-16,-96,21,-27,21,-81,-17,-128,-31,-98,-32,]),'FLOAT':([10,13,16,27,29,31,32,35,36,37,38,39,40,41,42,43,44,45,54,57,60,66,73,95,99,139,141,144,147,151,153,169,171,178,179,183,195,196,201,207,218,220,226,228,232,236,237,244,245,246,248,251,252,253,254,255,259,261,262,265,266,267,268,272,273,274,277,278,283,285,286,289,296,],[-99,22,22,-7,-12,-13,22,22,22,-71,-72,-73,-74,-75,-76,-77,-78,-79,-25,22,-69,-91,-99,22,22,-22,-26,22,-80,-85,-87,-88,-90,-28,-29,-82,-94,22,-24,-84,-23,22,-86,-89,22,22,-132,-92,-93,-95,-123,22,-15,22,22,22,-83,-124,-97,-14,-99,-19,-16,-96,22,-27,22,-81,-17,-128,-31,-98,-32,]),'CHAR':([10,13,16,27,29,31,32,35,36,37,38,39,40,41,42,43,44,45,54,57,60,66,73,95,99,139,141,144,147,151,153,169,171,178,179,183,195,196,201,207,218,220,226,228,232,236,237,244,245,246,248,251,252,253,254,255,259,261,262,265,266,267,268,272,273,274,277,278,283,285,286,289,296,],[-99,23,23,-7,-12,-13,23,23,23,-71,-72,-73,-74,-75,-76,-77,-78,-79,-25,23,-69,-91,-99,23,23,-22,-26,23,-80,-85,-87,-88,-90,-28,-29,-82,-94,23,-24,-84,-23,23,-86,-89,23,23,-132,-92,-93,-95,-123,23,-15,23,23,23,-83,-124,-97,-14,-99,-19,-16,-96,23,-27,23,-81,-17,-128,-31,-98,-32,]),'BOOL':([10,13,16,27,29,31,32,35,36,37,38,39,40,41,42,43,44,45,54,57,60,66,73,95,99,139,141,144,147,151,153,169,171,178,179,183,195,196,201,207,218,220,226,228,232,236,237,244,245,246,248,251,252,253,254,255,259,261,262,265,266,267,268,272,273,274,277,278,283,285,286,289,296,],[-99,24,24,-7,-12,-13,24,24,24,-71,-72,-73,-74,-75,-76,-77,-78,-79,-25,24,-69,-91,-99,24,24,-22,-26,24,-80,-85,-87,-88,-90,-28,-29,-82,-94,24,-24,-84,-23,24,-86,-89,24,24,-132,-92,-93,-95,-123,24,-15,24,24,24,-83,-124,-97,-14,-99,-19,-16,-96,24,-27,24,-81,-17,-128,-31,-98,-32,]),'VOID':([13,27,29,31,32,35,36,37,38,39,40,41,42,43,44,45,54,57,60,66,95,139,141,144,147,151,153,169,171,178,179,183,195,196,201,207,218,220,226,228,232,236,237,244,245,246,248,251,252,253,254,259,261,262,265,266,267,268,272,273,274,277,278,283,285,286,289,296,],[20,-7,-12,-13,20,20,20,-71,-72,-73,-74,-75,-76,-77,-78,-79,-25,20,-69,-91,20,-22,-26,-30,-80,-85,-87,-88,-90,-28,-29,-82,-94,20,-24,-84,-23,-132,-86,-89,20,20,-132,-92,-93,-95,-123,20,-15,20,20,-83,-124,-97,-14,-99,-19,-16,-96,20,-27,20,-81,-17,-128,-31,-98,-32,]),'FUNCION':([19,20,21,22,23,24,],[30,30,-33,-34,-35,-36,]),'COLON':([21,22,23,24,28,],[-33,-34,-35,-36,33,]),'LPAREN':([26,34,46,47,48,49,50,53,56,61,62,63,64,65,67,68,71,75,76,77,78,91,94,97,101,103,105,106,107,109,111,112,113,114,115,116,117,120,121,124,125,126,133,138,148,152,157,158,159,160,161,162,163,164,165,166,167,168,170,184,193,198,200,206,210,212,216,217,223,229,239,240,256,],[32,-99,-133,64,65,67,-122,-117,73,-112,-141,77,78,78,78,94,97,78,-142,78,-102,-133,78,78,-102,78,78,-105,-106,78,78,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-141,78,78,78,-43,-44,-45,-46,-47,-48,78,78,78,78,78,-142,78,-134,-102,216,78,78,78,-120,78,78,-143,67,-112,78,78,]),'LEE':([27,29,31,32,35,36,37,38,39,40,41,42,43,44,45,54,57,60,66,95,139,141,144,147,151,153,169,171,178,179,183,195,196,201,207,218,220,226,228,232,236,237,244,245,246,248,251,252,253,254,259,261,262,265,266,267,268,272,273,274,277,278,283,285,286,289,296,],[-7,-12,-13,47,47,47,-71,-72,-73,-74,-75,-76,-77,-78,-79,-25,47,-69,-91,47,-22,-26,-30,-80,-85,-87,-88,-90,-28,-29,-82,-94,47,-24,-84,-23,-132,-86,-89,47,47,-132,-92,-93,-95,-123,47,-15,47,47,-83,-124,-97,-14,-99,-19,-16,-96,47,-27,-18,-81,-17,-128,-31,-98,-32,]),'ESCRIBIR':([27,29,31,32,35,36,37,38,39,40,41,42,43,44,45,54,57,60,66,95,139,141,144,147,151,153,169,171,178,179,183,195,196,201,207,218,220,226,228,232,236,237,244,245,246,248,251,252,253,254,259,261,262,265,266,267,268,272,273,274,277,278,283,285,286,289,296,],[-7,-12,-13,48,48,48,-71,-72,-73,-74,-75,-76,-77,-78,-79,-25,48,-69,-91,48,-22,-26,-30,-80,-85,-87,-88,-90,-28,-29,-82,-94,48,-24,-84,-23,-132,-86,-89,48,48,-132,-92,-93,-95,-123,48,-15,48,48,-83,-124,-97,-14,-99,-19,-16,-96,48,-27,-18,-81,-17,-128,-31,-98,-32,]),'IF':([27,29,31,32,35,36,37,38,39,40,41,42,43,44,45,54,57,60,66,95,139,141,144,147,151,153,169,171,178,179,183,195,196,201,207,218,220,226,228,232,236,237,244,245,246,248,251,252,253,254,259,261,262,265,266,267,268,272,273,274,277,278,283,285,286,289,296,],[-7,-12,-13,49,49,49,-71,-72,-73,-74,-75,-76,-77,-78,-79,-25,49,-69,-91,49,-22,-26,-30,-80,-85,-87,-88,-90,-28,-29,-82,-94,49,-24,-84,-23,-132,-86,-89,49,49,-132,-92,-93,-95,-123,49,-15,49,49,-83,-124,-97,-14,-99,-19,-16,-96,49,-27,-18,-81,-17,-128,-31,-98,-32,]),'WHILE':([27,29,31,32,35,36,37,38,39,40,41,42,43,44,45,54,57,60,66,95,139,141,144,147,151,153,169,171,174,178,179,183,195,196,201,207,218,220,226,228,232,236,237,244,245,246,248,251,252,253,254,259,261,262,265,266,267,268,272,273,274,277,278,283,285,286,289,296,],[-7,-12,-13,50,50,50,-71,-72,-73,-74,-75,-76,-77,-78,-79,-25,50,-69,-91,50,-22,-26,-30,-80,-85,-87,-88,-90,198,-28,-29,-82,-94,50,-24,-84,-23,-132,-86,-89,50,50,-132,-92,-93,-95,-123,50,-15,50,50,-83,-124,-97,-14,-99,-19,-16,-96,50,-27,-18,-81,-17,-128,-31,-98,-32,]),'DO':([27,29,31,32,35,36,37,38,39,40,41,42,43,44,45,54,57,60,66,80,81,82,83,84,85,86,87,88,89,90,91,95,108,110,118,119,122,123,127,128,129,130,131,132,139,141,144,147,151,153,154,155,156,169,171,173,178,179,183,186,188,189,190,191,192,195,196,197,201,207,208,218,220,224,226,228,232,234,236,237,241,244,245,246,248,249,251,252,253,254,258,259,260,261,262,265,266,267,268,272,273,274,277,278,279,283,284,285,286,288,289,296,],[-7,-12,-13,51,51,51,-71,-72,-73,-74,-75,-76,-77,-78,-79,-25,51,-69,-91,-107,-107,-107,-107,-107,-108,-109,-110,-111,-111,-64,-65,51,-37,-39,-41,-50,-49,-54,-53,-59,-60,-61,-62,-63,-22,-26,-30,-80,-85,-87,-38,-40,-42,-88,-90,-119,-28,-29,-82,-103,-51,-52,-55,-56,-57,-94,51,215,-24,-84,-58,-23,-132,-140,-86,-89,51,-127,51,-132,-103,-92,-93,-95,-123,263,51,-15,51,51,-68,-83,-66,-124,-97,-14,-99,-19,-16,-96,51,-27,-18,-81,-140,-17,-103,-128,-31,-67,-98,-32,]),'FOR':([27,29,31,32,35,36,37,38,39,40,41,42,43,44,45,54,57,60,66,95,139,141,144,147,151,153,169,171,178,179,183,195,196,201,207,218,220,226,228,232,236,237,244,245,246,248,251,252,253,254,259,261,262,265,266,267,268,272,273,274,277,278,283,285,286,289,296,],[-7,-12,-13,52,52,52,-71,-72,-73,-74,-75,-76,-77,-78,-79,-25,52,-69,-91,52,-22,-26,-30,-80,-85,-87,-88,-90,-28,-29,-82,-94,52,-24,-84,-23,-132,-86,-89,52,52,-132,-92,-93,-95,-123,52,-15,52,52,-83,-124,-97,-14,-99,-19,-16,-96,52,-27,-18,-81,-17,-128,-31,-98,-32,]),'RETURN':([27,29,31,32,35,36,37,38,39,40,41,42,43,44,45,54,57,60,66,95,139,141,144,147,151,153,169,171,178,179,183,195,196,201,207,218,220,226,228,232,236,237,244,245,246,248,251,252,253,254,259,261,262,265,266,267,268,272,273,274,277,278,283,285,286,289,296,],[-7,-12,-13,53,53,53,-71,-72,-73,-74,-75,-76,-77,-78,-79,-25,53,-69,-91,53,-22,-26,-30,-80,-85,-87,-88,-90,-28,-29,-82,-94,53,-24,-84,-23,-132,-86,-89,53,53,-132,-92,-93,-95,-123,53,-15,53,53,-83,-124,-97,-14,-99,-19,-16,-96,53,-27,-18,-81,-17,-128,-31,-98,-32,]),'RPAREN':([29,31,35,36,37,38,39,40,41,42,43,44,45,57,60,66,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,102,104,108,110,118,119,122,123,127,128,129,130,131,132,134,136,139,140,145,147,149,150,151,153,154,155,156,169,171,176,181,183,185,186,187,188,189,190,191,192,194,195,201,204,207,208,209,211,218,221,224,225,226,228,233,238,241,242,244,245,246,248,252,258,259,260,261,262,265,266,267,268,269,272,277,278,279,283,284,285,288,289,],[-12,-13,59,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,59,-69,-91,-116,-107,-107,-107,-107,-107,-108,-109,-110,-111,-111,-64,-65,-115,135,-131,153,-37,-39,-41,-50,-49,-54,-53,-59,-60,-61,-62,-63,171,173,-22,-118,180,-80,-135,186,-85,-87,-38,-40,-42,-88,-90,201,-100,-82,207,-103,-116,-51,-52,-55,-56,-57,-115,-94,-24,-101,-84,-58,153,171,-23,-129,-140,-131,-86,-89,248,-21,-103,-135,-92,-93,-95,-123,-15,-68,-83,-66,-124,-97,-14,-99,-19,-16,-20,-96,-18,-81,-140,-17,-103,-128,-67,-98,]),'RBRACES':([29,31,36,37,38,39,40,41,42,43,44,45,60,66,137,139,147,151,153,169,171,183,195,201,207,214,218,226,228,231,244,245,246,247,248,252,253,259,261,262,265,266,267,268,272,277,278,280,283,285,289,],[-12,-13,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-69,-91,174,-22,-80,-85,-87,-88,-90,-82,-94,-24,-84,-121,-23,-86,-89,246,-92,-93,-95,261,-123,-15,266,-83,-124,-97,-14,-99,-19,-16,-96,-18,-81,285,-17,-128,-98,]),'EQUALS':([46,70,96,222,224,241,258,279,284,288,],[61,-125,138,239,-140,-103,-68,-140,-103,-67,]),'LBRACKET':([46,55,72,91,98,],[62,-100,-101,133,142,]),'LBRACES':([51,69,135,172,180,203,213,215,230,263,],[-122,95,-119,196,-130,220,-120,232,196,273,]),'COMMA':([55,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,98,102,104,108,110,118,119,122,123,127,128,129,130,131,132,134,140,149,154,155,156,176,181,182,183,186,187,188,189,190,191,192,194,204,205,207,208,209,211,221,224,225,227,238,241,242,243,250,258,259,260,264,275,279,281,284,288,294,295,],[-100,-101,-116,-107,-107,-107,-107,-107,-108,-109,-110,-111,-111,-64,-65,-115,143,-131,152,-37,-39,-41,-50,-49,-54,-53,-59,-60,-61,-62,-63,170,-118,184,-38,-40,-42,200,-100,-139,-82,-103,-116,-51,-52,-55,-56,-57,-115,-101,223,-84,-58,152,170,-129,-140,-131,-139,255,-103,184,223,-136,-68,-83,-66,276,-138,-140,143,-103,-67,-138,143,]),'CTE_I':([61,62,64,65,67,75,76,77,78,94,97,101,103,105,106,107,109,111,112,113,114,115,116,117,120,121,124,125,126,133,138,142,148,152,157,158,159,160,161,162,163,164,165,166,167,168,170,177,184,193,200,206,210,216,217,223,235,239,240,256,276,282,291,],[-112,-141,85,85,85,85,-142,85,-102,85,85,-102,85,85,-105,-106,85,85,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-141,85,-137,85,85,-43,-44,-45,-46,-47,-48,85,85,85,85,85,-142,85,202,-134,-102,85,85,85,85,85,-143,250,-112,85,85,-144,287,292,]),'CTE_F':([61,62,64,65,67,75,76,77,78,94,97,101,103,105,106,107,109,111,112,113,114,115,116,117,120,121,124,125,126,133,138,148,152,157,158,159,160,161,162,163,164,165,166,167,168,170,184,193,200,206,210,216,217,223,239,240,256,],[-112,-141,86,86,86,86,-142,86,-102,86,86,-102,86,86,-105,-106,86,86,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-141,86,86,86,-43,-44,-45,-46,-47,-48,86,86,86,86,86,-142,86,-134,-102,86,86,86,86,86,-143,-112,86,86,]),'CTE_S':([61,62,64,65,67,75,76,77,78,94,97,101,103,105,106,107,109,111,112,113,114,115,116,117,120,121,124,125,126,133,138,148,152,157,158,159,160,161,162,163,164,165,166,167,168,170,184,193,200,206,210,216,217,223,239,240,256,],[-112,-141,87,87,87,87,-142,87,-102,87,87,-102,87,87,-105,-106,87,87,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-141,87,87,87,-43,-44,-45,-46,-47,-48,87,87,87,87,87,-142,87,-134,-102,87,87,87,87,87,-143,-112,87,87,]),'TRUE':([61,62,64,65,67,75,76,77,78,94,97,101,103,105,106,107,109,111,112,113,114,115,116,117,120,121,124,125,126,133,138,148,152,157,158,159,160,161,162,163,164,165,166,167,168,170,184,193,200,206,210,216,217,223,239,240,256,],[-112,-141,88,88,88,88,-142,88,-102,88,88,-102,88,88,-105,-106,88,88,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-141,88,88,88,-43,-44,-45,-46,-47,-48,88,88,88,88,88,-142,88,-134,-102,88,88,88,88,88,-143,-112,88,88,]),'FALSE':([61,62,64,65,67,75,76,77,78,94,97,101,103,105,106,107,109,111,112,113,114,115,116,117,120,121,124,125,126,133,138,148,152,157,158,159,160,161,162,163,164,165,166,167,168,170,184,193,200,206,210,216,217,223,239,240,256,],[-112,-141,89,89,89,89,-142,89,-102,89,89,-102,89,89,-105,-106,89,89,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-141,89,89,89,-43,-44,-45,-46,-47,-48,89,89,89,89,89,-142,89,-134,-102,89,89,89,89,89,-143,-112,89,89,]),'LOR':([79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,100,102,108,110,118,119,122,123,127,128,129,130,131,132,136,140,150,154,155,156,175,182,183,186,187,188,189,190,191,192,194,207,208,224,225,227,233,234,241,257,258,259,260,270,279,284,288,],[106,106,-107,-107,-107,-107,-108,-109,-110,-111,-111,-64,-65,106,106,106,106,-37,-39,-41,-50,-49,-54,-53,-59,-60,-61,-62,-63,106,106,106,106,106,-42,106,106,-82,-103,106,-51,-52,-55,-56,-57,106,-84,-58,-140,106,106,106,106,-103,106,-68,-83,-66,106,-140,-103,-67,]),'LAND':([79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,100,102,108,110,118,119,122,123,127,128,129,130,131,132,136,140,150,154,155,156,175,182,183,186,187,188,189,190,191,192,194,207,208,224,225,227,233,234,241,257,258,259,260,270,279,284,288,],[107,107,-107,-107,-107,-107,-108,-109,-110,-111,-111,-64,-65,107,107,107,107,-37,-39,-41,-50,-49,-54,-53,-59,-60,-61,-62,-63,107,107,107,107,107,-42,107,107,-82,-103,107,-51,-52,-55,-56,-57,107,-84,-58,-140,107,107,107,107,-103,107,-68,-83,-66,107,-140,-103,-67,]),'TO':([80,81,82,83,84,85,86,87,88,89,90,91,108,110,118,119,122,123,127,128,129,130,131,132,154,155,156,175,183,186,188,189,190,191,192,199,207,208,224,241,258,259,260,279,284,288,],[-107,-107,-107,-107,-107,-108,-109,-110,-111,-111,-64,-65,-37,-39,-41,-50,-49,-54,-53,-59,-60,-61,-62,-63,-38,-40,-42,-126,-82,-103,-51,-52,-55,-56,-57,217,-84,-58,-140,-103,-68,-83,-66,-140,-103,-67,]),'RBRACKET':([80,81,82,83,84,85,86,87,88,89,90,91,108,110,118,119,122,123,127,128,129,130,131,132,154,155,156,182,183,186,188,189,190,191,192,205,207,208,224,227,241,243,250,257,258,259,260,264,271,279,284,288,292,293,],[-107,-107,-107,-107,-107,-108,-109,-110,-111,-111,-64,-65,-37,-39,-41,-50,-49,-54,-53,-59,-60,-61,-62,-63,-38,-40,-42,-139,-82,-103,-51,-52,-55,-56,-57,224,-84,-58,-140,-139,-103,224,-136,-139,-68,-83,-66,275,279,-140,-103,-67,-136,294,]),'LT':([81,82,83,84,85,86,87,88,89,90,91,118,119,122,123,127,128,129,130,131,132,156,183,186,188,189,190,191,192,207,208,224,241,258,259,260,279,284,288,],[112,-107,-107,-107,-108,-109,-110,-111,-111,-64,-65,-41,-50,-49,-54,-53,-59,-60,-61,-62,-63,112,-82,-103,-51,-52,-55,-56,-57,-84,-58,-140,-103,-68,-83,-66,-140,-103,-67,]),'LE':([81,82,83,84,85,86,87,88,89,90,91,118,119,122,123,127,128,129,130,131,132,156,183,186,188,189,190,191,192,207,208,224,241,258,259,260,279,284,288,],[113,-107,-107,-107,-108,-109,-110,-111,-111,-64,-65,-41,-50,-49,-54,-53,-59,-60,-61,-62,-63,113,-82,-103,-51,-52,-55,-56,-57,-84,-58,-140,-103,-68,-83,-66,-140,-103,-67,]),'GT':([81,82,83,84,85,86,87,88,89,90,91,118,119,122,123,127,128,129,130,131,132,156,183,186,188,189,190,191,192,207,208,224,241,258,259,260,279,284,288,],[114,-107,-107,-107,-108,-109,-110,-111,-111,-64,-65,-41,-50,-49,-54,-53,-59,-60,-61,-62,-63,114,-82,-103,-51,-52,-55,-56,-57,-84,-58,-140,-103,-68,-83,-66,-140,-103,-67,]),'GE':([81,82,83,84,85,86,87,88,89,90,91,118,119,122,123,127,128,129,130,131,132,156,183,186,188,189,190,191,192,207,208,224,241,258,259,260,279,284,288,],[115,-107,-107,-107,-108,-109,-110,-111,-111,-64,-65,-41,-50,-49,-54,-53,-59,-60,-61,-62,-63,115,-82,-103,-51,-52,-55,-56,-57,-84,-58,-140,-103,-68,-83,-66,-140,-103,-67,]),'EQ':([81,82,83,84,85,86,87,88,89,90,91,118,119,122,123,127,128,129,130,131,132,156,183,186,188,189,190,191,192,207,208,224,241,258,259,260,279,284,288,],[116,-107,-107,-107,-108,-109,-110,-111,-111,-64,-65,-41,-50,-49,-54,-53,-59,-60,-61,-62,-63,116,-82,-103,-51,-52,-55,-56,-57,-84,-58,-140,-103,-68,-83,-66,-140,-103,-67,]),'NE':([81,82,83,84,85,86,87,88,89,90,91,118,119,122,123,127,128,129,130,131,132,156,183,186,188,189,190,191,192,207,208,224,241,258,259,260,279,284,288,],[117,-107,-107,-107,-108,-109,-110,-111,-111,-64,-65,-41,-50,-49,-54,-53,-59,-60,-61,-62,-63,117,-82,-103,-51,-52,-55,-56,-57,-84,-58,-140,-103,-68,-83,-66,-140,-103,-67,]),'PLUS':([82,83,84,85,86,87,88,89,90,91,119,122,123,127,128,129,130,131,132,183,186,188,189,190,191,192,207,208,224,241,258,259,260,279,284,288,],[120,-107,-107,-108,-109,-110,-111,-111,-64,-65,-50,-49,-54,-53,-59,-60,-61,-62,-63,-82,-103,120,120,-55,-56,-57,-84,-58,-140,-103,-68,-83,-66,-140,-103,-67,]),'MINUS':([82,83,84,85,86,87,88,89,90,91,119,122,123,127,128,129,130,131,132,183,186,188,189,190,191,192,207,208,224,241,258,259,260,279,284,288,],[121,-107,-107,-108,-109,-110,-111,-111,-64,-65,-50,-49,-54,-53,-59,-60,-61,-62,-63,-82,-103,121,121,-55,-56,-57,-84,-58,-140,-103,-68,-83,-66,-140,-103,-67,]),'MULT':([83,84,85,86,87,88,89,90,91,123,127,128,129,130,131,132,183,186,190,191,192,207,208,224,241,258,259,260,279,284,288,],[124,-107,-108,-109,-110,-111,-111,-64,-65,-54,-53,-59,-60,-61,-62,-63,-82,-103,124,124,124,-84,-58,-140,-103,-68,-83,-66,-140,-103,-67,]),'DIV':([83,84,85,86,87,88,89,90,91,123,127,128,129,130,131,132,183,186,190,191,192,207,208,224,241,258,259,260,279,284,288,],[125,-107,-108,-109,-110,-111,-111,-64,-65,-54,-53,-59,-60,-61,-62,-63,-82,-103,125,125,125,-84,-58,-140,-103,-68,-83,-66,-140,-103,-67,]),'MOD':([83,84,85,86,87,88,89,90,91,123,127,128,129,130,131,132,183,186,190,191,192,207,208,224,241,258,259,260,279,284,288,],[126,-107,-108,-109,-110,-111,-111,-64,-65,-54,-53,-59,-60,-61,-62,-63,-82,-103,126,126,126,-84,-58,-140,-103,-68,-83,-66,-140,-103,-67,]),'ELSEIF':([195,246,],[212,-95,]),'ELSE':([195,246,],[213,-95,]),'RANGE':([202,219,287,290,],[-136,235,-136,291,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'gotomain':([0,],[2,]),'addDir':([3,10,34,73,266,],[4,16,56,99,277,]),'programa2':([6,8,],[7,15,]),'atributos':([6,8,236,],[8,8,251,]),'programa3':([6,8,11,],[9,9,17,]),'metodos':([6,8,11,],[11,11,11,]),'programa4':([6,8,11,],[12,12,12,]),'setmainloc':([6,8,11,],[14,14,14,]),'funciones':([13,32,35,36,57,95,196,232,236,251,253,254,273,277,],[18,44,44,44,44,44,44,44,44,44,44,44,44,283,]),'tipo':([13,16,32,35,36,57,95,99,144,196,220,232,236,251,253,254,255,273,277,],[19,28,19,19,19,19,19,146,28,19,28,19,19,19,19,19,146,19,19,]),'principal':([14,],[25,]),'var':([16,144,220,],[27,179,237,]),'funciones2':([19,20,],[29,31,]),'estatutos':([32,35,36,57,95,196,232,236,251,253,254,273,],[35,57,60,57,137,214,247,253,253,253,253,280,]),'estatutos2':([32,35,36,57,95,196,232,236,251,253,254,273,],[36,36,36,36,36,36,36,36,36,36,36,36,]),'asigna':([32,35,36,57,95,196,232,236,251,253,254,273,],[37,37,37,37,37,37,37,37,37,37,37,37,]),'llamada':([32,35,36,57,64,65,67,75,77,94,95,97,103,105,109,111,138,148,152,163,164,165,166,167,170,196,200,206,210,216,217,232,236,240,251,253,254,256,273,],[38,38,38,38,90,90,90,90,90,90,38,90,90,90,90,90,90,90,90,90,90,90,90,90,90,38,90,90,90,90,90,38,38,90,38,38,38,90,38,]),'lee':([32,35,36,57,95,196,232,236,251,253,254,273,],[39,39,39,39,39,39,39,39,39,39,39,39,]),'escribe':([32,35,36,57,95,196,232,236,251,253,254,273,],[40,40,40,40,40,40,40,40,40,40,40,40,]),'condicion':([32,35,36,57,95,196,232,236,251,253,254,273,],[41,41,41,41,41,41,41,41,41,41,41,41,]),'ciclow':([32,35,36,57,95,196,232,236,251,253,254,273,],[42,42,42,42,42,42,42,42,42,42,42,42,]),'ciclof':([32,35,36,57,95,196,232,236,251,253,254,273,],[43,43,43,43,43,43,43,43,43,43,43,43,]),'retornar':([32,35,36,57,95,196,232,236,251,253,254,273,],[45,45,45,45,45,45,45,45,45,45,45,45,]),'var2':([33,143,],[54,178,]),'principal2':([35,57,],[58,74,]),'callFunc':([46,91,],[63,63,]),'condicion2':([49,229,],[66,244,]),'storeWhile':([50,51,],[68,69,]),'returnFlag':([53,],[71,]),'setCurrentID':([55,181,],[72,204,]),'push_id':([61,239,],[75,256,]),'agregarVar':([62,133,],[76,168,]),'exp':([64,65,67,75,77,94,97,103,105,138,148,152,170,200,206,210,216,217,240,256,],[79,92,93,100,102,136,140,150,154,175,182,187,194,140,225,227,233,234,257,270,]),'texp':([64,65,67,75,77,94,97,103,105,109,138,148,152,170,200,206,210,216,217,240,256,],[80,80,80,80,80,80,80,80,80,155,80,80,80,80,80,80,80,80,80,80,80,]),'gexp':([64,65,67,75,77,94,97,103,105,109,111,138,148,152,170,200,206,210,216,217,240,256,],[81,81,81,81,81,81,81,81,81,81,156,81,81,81,81,81,81,81,81,81,81,81,]),'mexp':([64,65,67,75,77,94,97,103,105,109,111,138,148,152,163,164,170,200,206,210,216,217,240,256,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,188,189,82,82,82,82,82,82,82,82,]),'t':([64,65,67,75,77,94,97,103,105,109,111,138,148,152,163,164,165,166,167,170,200,206,210,216,217,240,256,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,190,191,192,83,83,83,83,83,83,83,83,]),'f':([64,65,67,75,77,94,97,103,105,109,111,138,148,152,163,164,165,166,167,170,200,206,210,216,217,240,256,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'addForId':([70,],[96,]),'addValueVarT':([72,204,],[98,221,]),'verifyAEx':([76,168,],[101,193,]),'addFakeBottom':([78,101,193,],[103,148,210,]),'cuadlee':([79,187,],[104,209,]),'addOL':([79,80,92,93,100,102,136,140,150,154,155,175,182,187,194,225,227,233,234,257,270,],[105,109,105,105,105,105,105,105,105,105,109,105,105,105,105,105,105,105,105,105,105,]),'checarexp':([80,81,82,83,84,],[108,110,118,122,127,]),'gexp2':([81,156,],[111,111,]),'mexp2':([82,188,189,],[119,119,119,]),'t2':([83,190,191,192,],[123,123,123,123,]),'addIntType':([85,],[128,]),'addFloatType':([86,],[129,]),'addCharType':([87,],[130,]),'addBoolType':([88,89,],[131,132,]),'cuadprint':([92,194,],[134,211,]),'retornar2':([97,200,],[139,218,]),'var3':([98,281,295,],[141,286,296,]),'parametros':([99,255,],[145,269,]),'genParameter':([102,225,],[149,242,]),'lee2':([104,209,],[151,226,]),'addO':([112,113,114,115,116,117,120,121,124,125,126,],[157,158,159,160,161,162,163,164,165,166,167,]),'escribe2':([134,211,],[169,228,]),'genGTF':([135,173,],[172,197,]),'cuadRetornar':([140,],[176,]),'newArray':([142,],[177,]),'llamada2':([149,242,],[183,259,]),'verLastParam':([149,242,],[185,185,]),'condicion3':([172,230,],[195,245,]),'genFor':([175,],[199,]),'addParamCount':([180,],[203,]),'crearCuadA':([182,227,257,],[205,243,271,]),'paramCounter':([184,],[206,]),'popFakeBottom':([186,241,284,],[208,258,288,]),'setL':([202,250,287,292,],[219,264,290,293,]),'f2':([205,243,],[222,260,]),'genGT':([212,213,],[229,230,]),'fillGoto':([214,],[231,]),'addContF':([220,237,],[236,254,]),'newParamType':([221,],[238,]),'updateDim':([223,],[240,]),'crearCuadB':([224,279,],[241,284,]),'compFor':([234,],[249,]),'funciones3':([236,251,253,254,],[252,265,267,268,]),'genDoWhile':([248,],[262,]),'fillWhile':([261,],[272,]),'var4':([264,],[274,]),'cerrarNodes':([275,294,],[281,295,]),'increaseDim':([276,],[282,]),'actFor':([285,],[289,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> gotomain PROGRAMA addDir ID SEMI programa2','programa',6,'p_programa','LexerParser.py',217),
  ('programa2 -> atributos programa2','programa2',2,'p_programa2','LexerParser.py',231),
  ('programa2 -> programa3','programa2',1,'p_programa2','LexerParser.py',232),
  ('programa3 -> metodos programa3','programa3',2,'p_programa3','LexerParser.py',237),
  ('programa3 -> programa4','programa3',1,'p_programa3','LexerParser.py',238),
  ('programa4 -> setmainloc principal','programa4',2,'p_programa4','LexerParser.py',243),
  ('atributos -> ATRIBUTOS addDir var','atributos',3,'p_atributos','LexerParser.py',249),
  ('metodos -> METODOS funciones','metodos',2,'p_metodos','LexerParser.py',255),
  ('principal -> PRINCIPAL LPAREN estatutos principal2','principal',4,'p_principal','LexerParser.py',261),
  ('principal2 -> estatutos principal2','principal2',2,'p_principal2','LexerParser.py',265),
  ('principal2 -> RPAREN','principal2',1,'p_principal2','LexerParser.py',266),
  ('funciones -> tipo funciones2','funciones',2,'p_funciones','LexerParser.py',272),
  ('funciones -> VOID funciones2','funciones',2,'p_funciones','LexerParser.py',273),
  ('funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF atributos funciones3','funciones2',12,'p_funciones2','LexerParser.py',277),
  ('funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES addContF funciones3','funciones2',11,'p_funciones2','LexerParser.py',278),
  ('funciones2 -> FUNCION ID addDir LPAREN addDir parametros RPAREN addParamCount LBRACES var addContF funciones3','funciones2',12,'p_funciones2','LexerParser.py',279),
  ('funciones3 -> estatutos RBRACES addDir funciones','funciones3',4,'p_funciones3','LexerParser.py',284),
  ('funciones3 -> estatutos RBRACES addDir','funciones3',3,'p_funciones3','LexerParser.py',285),
  ('funciones3 -> estatutos funciones3','funciones3',2,'p_funciones3','LexerParser.py',286),
  ('parametros -> tipo ID setCurrentID addValueVarT newParamType COMMA parametros','parametros',7,'p_parametros','LexerParser.py',292),
  ('parametros -> tipo ID setCurrentID addValueVarT newParamType','parametros',5,'p_parametros','LexerParser.py',293),
  ('retornar -> RETURN returnFlag LPAREN retornar2','retornar',4,'p_retornar','LexerParser.py',299),
  ('retornar2 -> exp cuadRetornar COMMA retornar2','retornar2',4,'p_retornar2','LexerParser.py',304),
  ('retornar2 -> exp cuadRetornar RPAREN','retornar2',3,'p_retornar2','LexerParser.py',305),
  ('var -> tipo COLON var2','var',3,'p_var','LexerParser.py',311),
  ('var2 -> ID setCurrentID addValueVarT var3','var2',4,'p_var2','LexerParser.py',316),
  ('var2 -> ID setCurrentID addValueVarT LBRACKET newArray CTE_I setL RANGE CTE_I setL var4','var2',11,'p_var2','LexerParser.py',317),
  ('var3 -> COMMA var2','var3',2,'p_var3','LexerParser.py',322),
  ('var3 -> SEMI var','var3',2,'p_var3','LexerParser.py',323),
  ('var3 -> SEMI','var3',1,'p_var3','LexerParser.py',324),
  ('var4 -> RBRACKET cerrarNodes var3','var4',3,'p_var4','LexerParser.py',328),
  ('var4 -> COMMA increaseDim CTE_I setL RANGE CTE_I setL RBRACKET cerrarNodes var3','var4',10,'p_var4','LexerParser.py',329),
  ('tipo -> INT','tipo',1,'p_tipo','LexerParser.py',334),
  ('tipo -> FLOAT','tipo',1,'p_tipo','LexerParser.py',335),
  ('tipo -> CHAR','tipo',1,'p_tipo','LexerParser.py',336),
  ('tipo -> BOOL','tipo',1,'p_tipo','LexerParser.py',337),
  ('exp -> texp checarexp','exp',2,'p_exp','LexerParser.py',346),
  ('exp -> exp addOL exp','exp',3,'p_exp','LexerParser.py',347),
  ('texp -> gexp checarexp','texp',2,'p_texp','LexerParser.py',351),
  ('texp -> texp addOL texp','texp',3,'p_texp','LexerParser.py',352),
  ('gexp -> mexp checarexp','gexp',2,'p_gexp','LexerParser.py',356),
  ('gexp -> gexp gexp2 gexp','gexp',3,'p_gexp','LexerParser.py',357),
  ('gexp2 -> LT addO','gexp2',2,'p_gexp2','LexerParser.py',361),
  ('gexp2 -> LE addO','gexp2',2,'p_gexp2','LexerParser.py',362),
  ('gexp2 -> GT addO','gexp2',2,'p_gexp2','LexerParser.py',363),
  ('gexp2 -> GE addO','gexp2',2,'p_gexp2','LexerParser.py',364),
  ('gexp2 -> EQ addO','gexp2',2,'p_gexp2','LexerParser.py',365),
  ('gexp2 -> NE addO','gexp2',2,'p_gexp2','LexerParser.py',366),
  ('mexp -> t checarexp','mexp',2,'p_mexp','LexerParser.py',370),
  ('mexp -> mexp mexp2','mexp',2,'p_mexp','LexerParser.py',371),
  ('mexp2 -> PLUS addO mexp','mexp2',3,'p_mexp2','LexerParser.py',375),
  ('mexp2 -> MINUS addO mexp','mexp2',3,'p_mexp2','LexerParser.py',376),
  ('t -> f checarexp','t',2,'p_t','LexerParser.py',380),
  ('t -> t t2','t',2,'p_t','LexerParser.py',381),
  ('t2 -> MULT addO t','t2',3,'p_t2','LexerParser.py',385),
  ('t2 -> DIV addO t','t2',3,'p_t2','LexerParser.py',386),
  ('t2 -> MOD addO t','t2',3,'p_t2','LexerParser.py',387),
  ('f -> LPAREN addFakeBottom exp RPAREN popFakeBottom','f',5,'p_f','LexerParser.py',391),
  ('f -> CTE_I addIntType','f',2,'p_f','LexerParser.py',392),
  ('f -> CTE_F addFloatType','f',2,'p_f','LexerParser.py',393),
  ('f -> CTE_S addCharType','f',2,'p_f','LexerParser.py',394),
  ('f -> TRUE addBoolType','f',2,'p_f','LexerParser.py',395),
  ('f -> FALSE addBoolType','f',2,'p_f','LexerParser.py',396),
  ('f -> llamada','f',1,'p_f','LexerParser.py',397),
  ('f -> ID','f',1,'p_f','LexerParser.py',398),
  ('f -> ID LBRACKET agregarVar verifyAEx addFakeBottom exp crearCuadA f2','f',8,'p_f','LexerParser.py',399),
  ('f2 -> COMMA updateDim exp crearCuadA RBRACKET crearCuadB popFakeBottom','f2',7,'p_f2','LexerParser.py',417),
  ('f2 -> RBRACKET crearCuadB popFakeBottom','f2',3,'p_f2','LexerParser.py',418),
  ('estatutos -> estatutos2 estatutos','estatutos',2,'p_estatutos','LexerParser.py',428),
  ('estatutos -> estatutos2','estatutos',1,'p_estatutos','LexerParser.py',429),
  ('estatutos2 -> asigna','estatutos2',1,'p_estatutos2','LexerParser.py',433),
  ('estatutos2 -> llamada','estatutos2',1,'p_estatutos2','LexerParser.py',434),
  ('estatutos2 -> lee','estatutos2',1,'p_estatutos2','LexerParser.py',435),
  ('estatutos2 -> escribe','estatutos2',1,'p_estatutos2','LexerParser.py',436),
  ('estatutos2 -> condicion','estatutos2',1,'p_estatutos2','LexerParser.py',437),
  ('estatutos2 -> ciclow','estatutos2',1,'p_estatutos2','LexerParser.py',438),
  ('estatutos2 -> ciclof','estatutos2',1,'p_estatutos2','LexerParser.py',439),
  ('estatutos2 -> funciones','estatutos2',1,'p_estatutos2','LexerParser.py',440),
  ('estatutos2 -> retornar','estatutos2',1,'p_estatutos2','LexerParser.py',441),
  ('asigna -> ID EQUALS push_id exp SEMI','asigna',5,'p_asigna','LexerParser.py',447),
  ('asigna -> ID LBRACKET agregarVar verifyAEx addFakeBottom exp crearCuadA f2 EQUALS push_id exp SEMI','asigna',12,'p_asigna','LexerParser.py',448),
  ('llamada -> ID callFunc LPAREN exp genParameter llamada2','llamada',6,'p_llamada','LexerParser.py',480),
  ('llamada2 -> COMMA paramCounter exp genParameter llamada2','llamada2',5,'p_llamada2','LexerParser.py',484),
  ('llamada2 -> verLastParam RPAREN','llamada2',2,'p_llamada2','LexerParser.py',485),
  ('lee -> LEE LPAREN exp cuadlee lee2','lee',5,'p_lee','LexerParser.py',491),
  ('lee2 -> COMMA exp cuadlee lee2','lee2',4,'p_lee2','LexerParser.py',496),
  ('lee2 -> RPAREN','lee2',1,'p_lee2','LexerParser.py',497),
  ('escribe -> ESCRIBIR LPAREN exp cuadprint escribe2','escribe',5,'p_escribe','LexerParser.py',503),
  ('escribe2 -> COMMA exp cuadprint escribe2','escribe2',4,'p_escribe2','LexerParser.py',507),
  ('escribe2 -> RPAREN','escribe2',1,'p_escribe2','LexerParser.py',508),
  ('condicion -> IF condicion2','condicion',2,'p_condicion','LexerParser.py',514),
  ('condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSEIF genGT condicion2','condicion2',8,'p_condicion2','LexerParser.py',519),
  ('condicion2 -> LPAREN exp RPAREN genGTF condicion3 ELSE genGT condicion3','condicion2',8,'p_condicion2','LexerParser.py',520),
  ('condicion2 -> LPAREN exp RPAREN genGTF condicion3','condicion2',5,'p_condicion2','LexerParser.py',521),
  ('condicion3 -> LBRACES estatutos fillGoto RBRACES','condicion3',4,'p_condicion3','LexerParser.py',526),
  ('ciclow -> WHILE storeWhile LPAREN exp RPAREN genGTF DO LBRACES estatutos RBRACES fillWhile','ciclow',11,'p_ciclow','LexerParser.py',532),
  ('ciclow -> DO storeWhile LBRACES estatutos RBRACES WHILE LPAREN exp RPAREN genDoWhile','ciclow',10,'p_ciclow','LexerParser.py',533),
  ('ciclof -> FOR ID addForId EQUALS exp genFor TO exp compFor DO LBRACES estatutos RBRACES actFor','ciclof',14,'p_ciclof','LexerParser.py',539),
  ('addDir -> <empty>','addDir',0,'p_addDir','LexerParser.py',575),
  ('setCurrentID -> <empty>','setCurrentID',0,'p_setCurrentID','LexerParser.py',626),
  ('addValueVarT -> <empty>','addValueVarT',0,'p_addValueVarT','LexerParser.py',635),
  ('addFakeBottom -> <empty>','addFakeBottom',0,'p_addFakeBottom','LexerParser.py',649),
  ('popFakeBottom -> <empty>','popFakeBottom',0,'p_popFakeBottom','LexerParser.py',656),
  ('addO -> <empty>','addO',0,'p_addO','LexerParser.py',670),
  ('addOL -> LOR','addOL',1,'p_addOL','LexerParser.py',678),
  ('addOL -> LAND','addOL',1,'p_addOL','LexerParser.py',679),
  ('checarexp -> <empty>','checarexp',0,'p_checarexp','LexerParser.py',687),
  ('addIntType -> <empty>','addIntType',0,'p_addIntType','LexerParser.py',729),
  ('addFloatType -> <empty>','addFloatType',0,'p_addFloatType','LexerParser.py',739),
  ('addCharType -> <empty>','addCharType',0,'p_addCharType','LexerParser.py',749),
  ('addBoolType -> <empty>','addBoolType',0,'p_addBoolType','LexerParser.py',759),
  ('push_id -> <empty>','push_id',0,'p_push_id','LexerParser.py',770),
  ('gotomain -> <empty>','gotomain',0,'p_gotomain','LexerParser.py',786),
  ('setmainloc -> <empty>','setmainloc',0,'p_setmainloc','LexerParser.py',793),
  ('cuadprint -> <empty>','cuadprint',0,'p_cuadprint','LexerParser.py',804),
  ('cuadlee -> <empty>','cuadlee',0,'p_cuadlee','LexerParser.py',819),
  ('returnFlag -> <empty>','returnFlag',0,'p_returnFlag','LexerParser.py',840),
  ('cuadRetornar -> <empty>','cuadRetornar',0,'p_cuadRetornar','LexerParser.py',848),
  ('genGTF -> <empty>','genGTF',0,'p_genGTF','LexerParser.py',867),
  ('genGT -> <empty>','genGT',0,'p_genGT','LexerParser.py',887),
  ('fillGoto -> <empty>','fillGoto',0,'p_fillGoto','LexerParser.py',905),
  ('storeWhile -> <empty>','storeWhile',0,'p_storeWhile','LexerParser.py',929),
  ('genDoWhile -> <empty>','genDoWhile',0,'p_genDoWhile','LexerParser.py',938),
  ('fillWhile -> <empty>','fillWhile',0,'p_fillWhile','LexerParser.py',952),
  ('addForId -> <empty>','addForId',0,'p_addForId','LexerParser.py',970),
  ('genFor -> <empty>','genFor',0,'p_genFor','LexerParser.py',980),
  ('compFor -> <empty>','compFor',0,'p_compFor','LexerParser.py',1001),
  ('actFor -> <empty>','actFor',0,'p_actFor','LexerParser.py',1037),
  ('newParamType -> <empty>','newParamType',0,'p_newParamType','LexerParser.py',1075),
  ('addParamCount -> <empty>','addParamCount',0,'p_addParamCount','LexerParser.py',1084),
  ('genParameter -> <empty>','genParameter',0,'p_genParameter','LexerParser.py',1094),
  ('addContF -> <empty>','addContF',0,'p_addContF','LexerParser.py',1111),
  ('callFunc -> <empty>','callFunc',0,'p_callFunc','LexerParser.py',1120),
  ('paramCounter -> <empty>','paramCounter',0,'p_paramCounter','LexerParser.py',1133),
  ('verLastParam -> <empty>','verLastParam',0,'p_verLastParam','LexerParser.py',1141),
  ('setL -> <empty>','setL',0,'p_setL','LexerParser.py',1173),
  ('newArray -> <empty>','newArray',0,'p_newArray','LexerParser.py',1185),
  ('cerrarNodes -> <empty>','cerrarNodes',0,'p_cerrarNodes','LexerParser.py',1197),
  ('crearCuadA -> <empty>','crearCuadA',0,'p_crearCuadA','LexerParser.py',1232),
  ('crearCuadB -> <empty>','crearCuadB',0,'p_crearCuadB','LexerParser.py',1261),
  ('agregarVar -> <empty>','agregarVar',0,'p_agregarVar','LexerParser.py',1280),
  ('verifyAEx -> <empty>','verifyAEx',0,'p_verifyAEx','LexerParser.py',1291),
  ('updateDim -> <empty>','updateDim',0,'p_updateDim','LexerParser.py',1311),
  ('increaseDim -> <empty>','increaseDim',0,'p_increaseDim','LexerParser.py',1321),
]
